{
    "swagger": "2.0",
    "info": {
        "title": "Tapi-ObjectClasses API",
        "description": "Tapi-ObjectClasses API generated from Tapi-ObjectClasses.yang",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/Context/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete Context by ID",
                "operationId": "deleteContextById",
                "description": "Delete operation of resource: Context",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve Context",
                "operationId": "retrieveContext",
                "description": "Retrieve operation of resource: Context",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create Context by ID",
                "operationId": "createContextById",
                "description": "Create operation of resource: Context",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "Contextbody object",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        },
                        "name": "Context",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update Context by ID",
                "operationId": "updateContextById",
                "description": "Update operation of resource: Context",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "description": "Contextbody object",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        },
                        "name": "Context",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContextNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContextLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContextExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndPoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _serviceEndPoint by ID",
                "operationId": "retrieveContext_serviceEndPoint_serviceEndPointById",
                "description": "Retrieve operation of resource: _serviceEndPoint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_serviceEndPointNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_serviceEndPointLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_serviceEndPointExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _ltpSpecData",
                "operationId": "retrieveContext_serviceEndPoint_ltpSpecData_ltpSpecData",
                "description": "Retrieve operation of resource: _ltpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _layerProtocol by ID",
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_layerProtocolById",
                "description": "Retrieve operation of resource: _layerProtocol",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _lpSpecData",
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_lpSpecData_lpSpecData",
                "description": "Retrieve operation of resource: _lpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectionEndPoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _connectionEndPoint by ID",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_connectionEndPointById",
                "description": "Retrieve operation of resource: _connectionEndPoint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _ltpSpecData",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_ltpSpecData_ltpSpecData",
                "description": "Retrieve operation of resource: _ltpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _layerProtocol by ID",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_layerProtocolById",
                "description": "Retrieve operation of resource: _layerProtocol",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _lpSpecData",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_lpSpecData_lpSpecData",
                "description": "Retrieve operation of resource: _lpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/OperationalStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state",
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_serviceEndPoint/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LifecycleStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state",
                "operationId": "retrieveContext_serviceEndPoint_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_connectivityService/{uuid}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _connectivityService by ID",
                "operationId": "deleteContext_connectivityService_connectivityServiceById",
                "description": "Delete operation of resource: _connectivityService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _connectivityService by ID",
                "operationId": "retrieveContext_connectivityService_connectivityServiceById",
                "description": "Retrieve operation of resource: _connectivityService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _connectivityService by ID",
                "operationId": "createContext_connectivityService_connectivityServiceById",
                "description": "Create operation of resource: _connectivityService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_connectivityServicebody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        },
                        "name": "_connectivityService",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _connectivityService by ID",
                "operationId": "updateContext_connectivityService_connectivityServiceById",
                "description": "Update operation of resource: _connectivityService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_connectivityServicebody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        },
                        "name": "_connectivityService",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_connectivityServiceNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_connectivityServiceLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_connectivityServiceExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Connection"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _connection by ID",
                "operationId": "retrieveContext_connectivityService_connection_connectionById",
                "description": "Retrieve operation of resource: _connection",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_connectivityService_connectionNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_connectivityService_connectionLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_connectivityService_connectionExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_connectionPort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectionPort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _connectionPort by ID",
                "operationId": "retrieveContext_connectivityService_connection_connectionPort_connectionPortById",
                "description": "Retrieve operation of resource: _connectionPort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_route/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Route"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _route by ID",
                "operationId": "retrieveContext_connectivityService_connection_route_routeById",
                "description": "Retrieve operation of resource: _route",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/OperationalStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state by ID",
                "operationId": "retrieveContext_connectivityService_connection_state_stateById",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_servicePort/{localId}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _servicePort by ID",
                "operationId": "deleteContext_connectivityService_servicePort_servicePortById",
                "description": "Delete operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _servicePort by ID",
                "operationId": "retrieveContext_connectivityService_servicePort_servicePortById",
                "description": "Retrieve operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _servicePort by ID",
                "operationId": "createContext_connectivityService_servicePort_servicePortById",
                "description": "Create operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    },
                    {
                        "in": "body",
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "name": "_servicePort",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _servicePort by ID",
                "operationId": "updateContext_connectivityService_servicePort_servicePortById",
                "description": "Update operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    },
                    {
                        "in": "body",
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "name": "_servicePort",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _connConstraints by ID",
                "operationId": "deleteContext_connectivityService_connConstraints_connConstraintsById",
                "description": "Delete operation of resource: _connConstraints",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _connConstraints by ID",
                "operationId": "retrieveContext_connectivityService_connConstraints_connConstraintsById",
                "description": "Retrieve operation of resource: _connConstraints",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _connConstraints by ID",
                "operationId": "createContext_connectivityService_connConstraints_connConstraintsById",
                "description": "Create operation of resource: _connConstraints",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_connConstraintsbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _connConstraints by ID",
                "operationId": "updateContext_connectivityService_connConstraints_connConstraintsById",
                "description": "Update operation of resource: _connConstraints",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_connConstraintsbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/requestedCapacity/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete requestedCapacity by ID",
                "operationId": "deleteContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacityById",
                "description": "Delete operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve requestedCapacity by ID",
                "operationId": "retrieveContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacityById",
                "description": "Retrieve operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create requestedCapacity by ID",
                "operationId": "createContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacityById",
                "description": "Create operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update requestedCapacity by ID",
                "operationId": "updateContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacityById",
                "description": "Update operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve costCharacteristic by ID",
                "operationId": "retrieveContext_connectivityService_connConstraintsCostCharacteristicCostCharacteristicById",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve riskCharacteristic by ID",
                "operationId": "retrieveContext_connectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve latencyCharacteristic by ID",
                "operationId": "retrieveContext_connectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_schedule/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _schedule by ID",
                "operationId": "deleteContext_connectivityService_schedule_scheduleById",
                "description": "Delete operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _schedule by ID",
                "operationId": "retrieveContext_connectivityService_schedule_scheduleById",
                "description": "Retrieve operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _schedule by ID",
                "operationId": "createContext_connectivityService_schedule_scheduleById",
                "description": "Create operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_schedulebody object",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "name": "_schedule",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _schedule by ID",
                "operationId": "updateContext_connectivityService_schedule_scheduleById",
                "description": "Update operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_schedulebody object",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "name": "_schedule",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_connectivityService/{uuid}/_state/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _state by ID",
                "operationId": "deleteContext_connectivityService_state_stateById",
                "description": "Delete operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state by ID",
                "operationId": "retrieveContext_connectivityService_state_stateById",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _state by ID",
                "operationId": "createContext_connectivityService_state_stateById",
                "description": "Create operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_statebody object",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _state by ID",
                "operationId": "updateContext_connectivityService_state_stateById",
                "description": "Update operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_statebody object",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _vnwService by ID",
                "operationId": "deleteContext_vnwService_vnwServiceById",
                "description": "Delete operation of resource: _vnwService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _vnwService by ID",
                "operationId": "retrieveContext_vnwService_vnwServiceById",
                "description": "Retrieve operation of resource: _vnwService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _vnwService by ID",
                "operationId": "createContext_vnwService_vnwServiceById",
                "description": "Create operation of resource: _vnwService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_vnwServicebody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        },
                        "name": "_vnwService",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _vnwService by ID",
                "operationId": "updateContext_vnwService_vnwServiceById",
                "description": "Update operation of resource: _vnwService",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_vnwServicebody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        },
                        "name": "_vnwService",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_vnwServiceNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_vnwServiceLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_vnwServiceExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_servicePort/{localId}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _servicePort by ID",
                "operationId": "deleteContext_vnwService_servicePort_servicePortById",
                "description": "Delete operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _servicePort by ID",
                "operationId": "retrieveContext_vnwService_servicePort_servicePortById",
                "description": "Retrieve operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _servicePort by ID",
                "operationId": "createContext_vnwService_servicePort_servicePortById",
                "description": "Create operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    },
                    {
                        "in": "body",
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "name": "_servicePort",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _servicePort by ID",
                "operationId": "updateContext_vnwService_servicePort_servicePortById",
                "description": "Update operation of resource: _servicePort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of localId",
                        "type": "string",
                        "required": true,
                        "name": "localId"
                    },
                    {
                        "in": "body",
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "name": "_servicePort",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _vnwConstraint by ID",
                "operationId": "deleteContext_vnwService_vnwConstraint_vnwConstraintById",
                "description": "Delete operation of resource: _vnwConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _vnwConstraint by ID",
                "operationId": "retrieveContext_vnwService_vnwConstraint_vnwConstraintById",
                "description": "Retrieve operation of resource: _vnwConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _vnwConstraint by ID",
                "operationId": "createContext_vnwService_vnwConstraint_vnwConstraintById",
                "description": "Create operation of resource: _vnwConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_vnwConstraintbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "name": "_vnwConstraint",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _vnwConstraint by ID",
                "operationId": "updateContext_vnwService_vnwConstraint_vnwConstraintById",
                "description": "Update operation of resource: _vnwConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_vnwConstraintbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "name": "_vnwConstraint",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/requestedCapacity/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete requestedCapacity by ID",
                "operationId": "deleteContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "description": "Delete operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve requestedCapacity by ID",
                "operationId": "retrieveContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "description": "Retrieve operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create requestedCapacity by ID",
                "operationId": "createContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "description": "Create operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update requestedCapacity by ID",
                "operationId": "updateContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "description": "Update operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/{costAlgorithm}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete costCharacteristic by ID",
                "operationId": "deleteContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "description": "Delete operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of costAlgorithm",
                        "type": "string",
                        "required": true,
                        "name": "costAlgorithm"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve costCharacteristic by ID",
                "operationId": "retrieveContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of costAlgorithm",
                        "type": "string",
                        "required": true,
                        "name": "costAlgorithm"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create costCharacteristic by ID",
                "operationId": "createContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "description": "Create operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of costAlgorithm",
                        "type": "string",
                        "required": true,
                        "name": "costAlgorithm"
                    },
                    {
                        "in": "body",
                        "description": "costCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update costCharacteristic by ID",
                "operationId": "updateContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "description": "Update operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of costAlgorithm",
                        "type": "string",
                        "required": true,
                        "name": "costAlgorithm"
                    },
                    {
                        "in": "body",
                        "description": "costCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete riskCharacteristic by ID",
                "operationId": "deleteContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "description": "Delete operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of riskCharacteristicName",
                        "type": "string",
                        "required": true,
                        "name": "riskCharacteristicName"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve riskCharacteristic by ID",
                "operationId": "retrieveContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of riskCharacteristicName",
                        "type": "string",
                        "required": true,
                        "name": "riskCharacteristicName"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create riskCharacteristic by ID",
                "operationId": "createContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "description": "Create operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of riskCharacteristicName",
                        "type": "string",
                        "required": true,
                        "name": "riskCharacteristicName"
                    },
                    {
                        "in": "body",
                        "description": "riskCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update riskCharacteristic by ID",
                "operationId": "updateContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "description": "Update operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of riskCharacteristicName",
                        "type": "string",
                        "required": true,
                        "name": "riskCharacteristicName"
                    },
                    {
                        "in": "body",
                        "description": "riskCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/{latencyValue}/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete latencyCharacteristic by ID",
                "operationId": "deleteContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "description": "Delete operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of latencyValue",
                        "type": "string",
                        "required": true,
                        "name": "latencyValue"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve latencyCharacteristic by ID",
                "operationId": "retrieveContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of latencyValue",
                        "type": "string",
                        "required": true,
                        "name": "latencyValue"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create latencyCharacteristic by ID",
                "operationId": "createContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "description": "Create operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of latencyValue",
                        "type": "string",
                        "required": true,
                        "name": "latencyValue"
                    },
                    {
                        "in": "body",
                        "description": "latencyCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update latencyCharacteristic by ID",
                "operationId": "updateContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "description": "Update operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "path",
                        "description": "ID of latencyValue",
                        "type": "string",
                        "required": true,
                        "name": "latencyValue"
                    },
                    {
                        "in": "body",
                        "description": "latencyCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_schedule/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _schedule by ID",
                "operationId": "deleteContext_vnwService_schedule_scheduleById",
                "description": "Delete operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _schedule by ID",
                "operationId": "retrieveContext_vnwService_schedule_scheduleById",
                "description": "Retrieve operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _schedule by ID",
                "operationId": "createContext_vnwService_schedule_scheduleById",
                "description": "Create operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_schedulebody object",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "name": "_schedule",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _schedule by ID",
                "operationId": "updateContext_vnwService_schedule_scheduleById",
                "description": "Update operation of resource: _schedule",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_schedulebody object",
                        "schema": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "name": "_schedule",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_vnwService/{uuid}/_state/": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Delete _state by ID",
                "operationId": "deleteContext_vnwService_state_stateById",
                "description": "Delete operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state by ID",
                "operationId": "retrieveContext_vnwService_state_stateById",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Create _state by ID",
                "operationId": "createContext_vnwService_state_stateById",
                "description": "Create operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_statebody object",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Update _state by ID",
                "operationId": "updateContext_vnwService_state_stateById",
                "description": "Update operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true,
                        "name": "uuid"
                    },
                    {
                        "in": "body",
                        "description": "_statebody object",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "required": true
                    }
                ]
            }
        },
        "/config/Context/_topology/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _topology by ID",
                "operationId": "retrieveContext_topology_topologyById",
                "description": "Retrieve operation of resource: _topology",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_topologyNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_topologyLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_topologyExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _node by ID",
                "operationId": "retrieveContext_topology_node_nodeById",
                "description": "Retrieve operation of resource: _node",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_topology_nodeNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_topology_nodeLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_topology_nodeExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NodeEdgePoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _ownedNodeEdgePoint by ID",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ownedNodeEdgePointById",
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _ltpSpecData",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ltpSpecData_ltpSpecData",
                "description": "Retrieve operation of resource: _ltpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _layerProtocol by ID",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById",
                "description": "Retrieve operation of resource: _layerProtocol",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _lpSpecData",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_lpSpecData_lpSpecData",
                "description": "Retrieve operation of resource: _lpSpecData",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state",
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state",
                "operationId": "retrieveContext_topology_node_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferCapacity",
                "operationId": "retrieveContext_topology_node_transferCapacity_transferCapacity",
                "description": "Retrieve operation of resource: _transferCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve totalPotentialCapacity",
                "operationId": "retrieveContext_topology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/availableCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "Capacity available to be assigned."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve availableCapacity",
                "operationId": "retrieveContext_topology_node_transferCapacityAvailableCapacityAvailableCapacity",
                "description": "Retrieve operation of resource: availableCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCost/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCostPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferCost",
                "operationId": "retrieveContext_topology_node_transferCost_transferCost",
                "description": "Retrieve operation of resource: _transferCost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferCost/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve costCharacteristic by ID",
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristicById",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferIntegrity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferIntegrity",
                "operationId": "retrieveContext_topology_node_transferIntegrity_transferIntegrity",
                "description": "Retrieve operation of resource: _transferIntegrity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferTiming/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferTimingPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferTiming",
                "operationId": "retrieveContext_topology_node_transferTiming_transferTiming",
                "description": "Retrieve operation of resource: _transferTiming",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_node/_transferTiming/queuingLatency/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve queuingLatency by ID",
                "operationId": "retrieveContext_topology_node_transferTimingQueuingLatencyQueuingLatencyById",
                "description": "Retrieve operation of resource: queuingLatency",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _link by ID",
                "operationId": "retrieveContext_topology_link_linkById",
                "description": "Retrieve operation of resource: _link",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_topology_linkNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_link/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_topology_linkLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_link/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_topology_linkExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/_link/_linkPort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LinkPort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _linkPort by ID",
                "operationId": "retrieveContext_topology_link_linkPort_linkPortById",
                "description": "Retrieve operation of resource: _linkPort",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _state",
                "operationId": "retrieveContext_topology_link_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferCapacity",
                "operationId": "retrieveContext_topology_link_transferCapacity_transferCapacity",
                "description": "Retrieve operation of resource: _transferCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve totalPotentialCapacity",
                "operationId": "retrieveContext_topology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/availableCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "Capacity available to be assigned."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve availableCapacity",
                "operationId": "retrieveContext_topology_link_transferCapacityAvailableCapacityAvailableCapacity",
                "description": "Retrieve operation of resource: availableCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCost/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCostPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferCost",
                "operationId": "retrieveContext_topology_link_transferCost_transferCost",
                "description": "Retrieve operation of resource: _transferCost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferCost/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve costCharacteristic by ID",
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristicById",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferIntegrity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferIntegrity",
                "operationId": "retrieveContext_topology_link_transferIntegrity_transferIntegrity",
                "description": "Retrieve operation of resource: _transferIntegrity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferTiming/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferTimingPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _transferTiming",
                "operationId": "retrieveContext_topology_link_transferTiming_transferTiming",
                "description": "Retrieve operation of resource: _transferTiming",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_transferTiming/queuingLatency/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve queuingLatency by ID",
                "operationId": "retrieveContext_topology_link_transferTimingQueuingLatencyQueuingLatencyById",
                "description": "Retrieve operation of resource: queuingLatency",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_riskParameter/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskParameterPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _riskParameter",
                "operationId": "retrieveContext_topology_link_riskParameter_riskParameter",
                "description": "Retrieve operation of resource: _riskParameter",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_riskParameter/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve riskCharacteristic by ID",
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristicById",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_validation/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _validation",
                "operationId": "retrieveContext_topology_link_validation_validation",
                "description": "Retrieve operation of resource: _validation",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_validation/validationMechanism/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationMechanism"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve validationMechanism by ID",
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanismById",
                "description": "Retrieve operation of resource: validationMechanism",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_topology/_link/_lpTransition/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _lpTransition",
                "operationId": "retrieveContext_topology_link_lpTransition_lpTransition",
                "description": "Retrieve operation of resource: _lpTransition",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Path"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _path by ID",
                "operationId": "retrieveContext_path_pathById",
                "description": "Retrieve operation of resource: _path",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve name by ID",
                "operationId": "retrieveContext_pathNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_path/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve label by ID",
                "operationId": "retrieveContext_pathLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_path/extension/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve extension by ID",
                "operationId": "retrieveContext_pathExtensionExtensionById",
                "description": "Retrieve operation of resource: extension",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "description": "ID of valueName",
                        "type": "string",
                        "required": true,
                        "name": "valueName"
                    }
                ]
            }
        },
        "/config/Context/_path/_telink/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TeLink"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _telink by ID",
                "operationId": "retrieveContext_path_telink_telinkById",
                "description": "Retrieve operation of resource: _telink",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_routingConstraint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _routingConstraint",
                "operationId": "retrieveContext_path_routingConstraint_routingConstraint",
                "description": "Retrieve operation of resource: _routingConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_routingConstraint/requestedCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve requestedCapacity",
                "operationId": "retrieveContext_path_routingConstraintRequestedCapacityRequestedCapacity",
                "description": "Retrieve operation of resource: requestedCapacity",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_routingConstraint/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve costCharacteristic by ID",
                "operationId": "retrieveContext_path_routingConstraintCostCharacteristicCostCharacteristicById",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_routingConstraint/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve riskCharacteristic by ID",
                "operationId": "retrieveContext_path_routingConstraintRiskCharacteristicRiskCharacteristicById",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_routingConstraint/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve latencyCharacteristic by ID",
                "operationId": "retrieveContext_path_routingConstraintLatencyCharacteristicLatencyCharacteristicById",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_optimizationConstraint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _optimizationConstraint",
                "operationId": "retrieveContext_path_optimizationConstraint_optimizationConstraint",
                "description": "Retrieve operation of resource: _optimizationConstraint",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        },
        "/config/Context/_path/_objectiveFunction/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PathObjectiveFunction"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "summary": "Retrieve _objectiveFunction",
                "operationId": "retrieveContext_path_objectiveFunction_objectiveFunction",
                "description": "Retrieve operation of resource: _objectiveFunction",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": []
            }
        }
    },
    "definitions": {
        "LinkPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                            "type": "string"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the LinkEnd.",
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. ",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "OperationalStatePac": {
            "properties": {
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                },
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string"
                }
            }
        },
        "Topology": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        },
                        "_link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            }
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "Connection": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "x-path": "/Context/_topology/_node/uuid",
                            "type": "string"
                        },
                        "_route": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Route"
                            }
                        },
                        "_state": {
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_connectionPort": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectionPort"
                            }
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ConnectivityServicePort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        },
                        "_serviceEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/uuid",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GlobalClass": {
            "properties": {
                "label": {
                    "x-key": "valueName",
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    }
                },
                "extension": {
                    "x-key": "valueName",
                    "description": "List of simple name-value extentions. Extension provides an opportunity to define properties not declared in the class that extend the class enabling a realization with simple ad-hoc extension of standard classes to be conformant.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    }
                },
                "name": {
                    "x-key": "valueName",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    }
                },
                "uuid": {
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)",
                    "type": "string"
                }
            }
        },
        "ConnectivityService": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_servicePort": {
                            "x-key": "localId",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectivityServicePort"
                            }
                        },
                        "_connection": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Connection"
                            }
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "_connConstraints": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_schedule": {
                            "$ref": "#/definitions/ScheduleInfo"
                        }
                    }
                }
            ]
        },
        "RiskParameterPac": {
            "properties": {
                "riskCharacteristic": {
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    }
                }
            }
        },
        "ConnectivityConstraint": {
            "properties": {
                "riskCharacteristic": {
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    }
                },
                "requestedCapacity": {
                    "$ref": "#/definitions/Capacity"
                },
                "latencyCharacteristic": {
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    }
                },
                "avoidTopology": {
                    "type": "array",
                    "items": {
                        "x-path": "/Context/_topology/uuid",
                        "type": "string"
                    }
                },
                "serviceLayer": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string"
                    }
                },
                "includePath": {
                    "type": "array",
                    "items": {
                        "x-path": "/Context/_path/uuid",
                        "type": "string"
                    }
                },
                "serviceLevel": {
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability",
                    "type": "string"
                },
                "costCharacteristic": {
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    }
                },
                "includeTopology": {
                    "type": "array",
                    "items": {
                        "x-path": "/Context/_topology/uuid",
                        "type": "string"
                    }
                },
                "excludePath": {
                    "type": "array",
                    "items": {
                        "x-path": "/Context/_path/uuid",
                        "type": "string"
                    }
                },
                "serviceType": {
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ],
                    "type": "string"
                }
            }
        },
        "PathObjectiveFunction": {
            "properties": {
                "linkUtilization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "bandwidthOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "costOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "concurrentPaths": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "resourceSharing": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                }
            }
        },
        "ConnectionPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_connectionEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid",
                            "type": "string"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ServiceEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/LifecycleStatePac"
                        },
                        "_mappedNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string"
                            }
                        },
                        "_connectionEndPoint": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectionEndPoint"
                            }
                        },
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            }
                        }
                    }
                }
            ]
        },
        "ValidationPac": {
            "properties": {
                "validationMechanism": {
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationMechanism"
                    }
                }
            }
        },
        "TransferTimingPac": {
            "properties": {
                "jitterCharacteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                },
                "queuingLatency": {
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    }
                },
                "fixedLatencyCharacteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity",
                    "type": "string"
                },
                "wanderCharacteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                }
            }
        },
        "LayerProtocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationDirection": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows",
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity.",
                            "type": "string"
                        },
                        "_lpSpecData": {
                            "$ref": "#/definitions/LpSpec"
                        },
                        "terminationState": {
                            "enum": [
                                "LP_CAN_NEVER_TERMINATE",
                                "LT_NOT_TERMINATED",
                                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                                "TERMINATED_BIDIRECTIONAL",
                                "LT_PERMENANTLY_TERMINATED",
                                "TERMINATION_STATE_UNKNOWN"
                            ],
                            "description": "Indicates whether the layer is terminated and if so how.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "Route": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_lowerConnection": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_connectivityService/_connection/uuid",
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "TeLink": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/uuid",
                                "type": "string"
                            }
                        },
                        "_nodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "PathOptimizationConstraint": {
            "properties": {
                "trafficInterruption": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                }
            }
        },
        "LocalClass": {
            "properties": {
                "localId": {
                    "type": "string"
                }
            }
        },
        "VirtualNetworkService": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_vnwConstraint": {
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "_servicePort": {
                            "x-key": "localId",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkServicePort"
                            }
                        },
                        "_topology": {
                            "x-path": "/Context/_topology/uuid",
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            }
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_schedule": {
                            "$ref": "#/definitions/ScheduleInfo"
                        }
                    }
                }
            ]
        },
        "TransferCostPac": {
            "properties": {
                "costCharacteristic": {
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    }
                }
            }
        },
        "VirtualNetworkServicePort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        },
                        "_serviceEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/uuid",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "NodeEdgePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_clientNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string"
                            }
                        },
                        "_layerProtocol": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            }
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    }
                }
            ]
        },
        "Path": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_objectiveFunction": {
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "_routingConstraint": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_telink": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeLink"
                            }
                        },
                        "_optimizationConstraint": {
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        }
                    }
                }
            ]
        },
        "Node": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_encapTopology": {
                            "x-path": "/Context/_topology/uuid",
                            "type": "string"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string"
                            }
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            }
                        },
                        "_ownedNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NodeEdgePoint"
                            }
                        }
                    }
                }
            ]
        },
        "ScheduleInfo": {
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "VirtualNetworkConstraint": {
            "properties": {
                "riskCharacteristic": {
                    "x-key": "riskCharacteristicName",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    }
                },
                "requestedCapacity": {
                    "$ref": "#/definitions/Capacity"
                },
                "latencyCharacteristic": {
                    "x-key": "latencyValue",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    }
                },
                "serviceLayer": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string"
                    }
                },
                "serviceLevel": {
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability",
                    "type": "string"
                },
                "costCharacteristic": {
                    "x-key": "costAlgorithm",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    }
                },
                "serviceType": {
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ],
                    "type": "string"
                }
            }
        },
        "LayerProtocolTransitionPac": {
            "properties": {
                "_nodeEdgePoint": {
                    "type": "array",
                    "items": {
                        "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                        "description": "Lists the LTPs that define the layer protocol transition of the transitional link.",
                        "type": "string"
                    }
                },
                "transitionedLayerProtocolName": {
                    "type": "array",
                    "items": {
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role.",
                        "type": "string"
                    }
                }
            }
        },
        "Link": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_lpTransition": {
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_linkPort": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkPort"
                            }
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            }
                        },
                        "_node": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/uuid",
                                "type": "string"
                            }
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_validation": {
                            "$ref": "#/definitions/ValidationPac"
                        },
                        "_riskParameter": {
                            "$ref": "#/definitions/RiskParameterPac"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases.",
                            "type": "string"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    }
                }
            ]
        },
        "AdminStatePac": {
            "properties": {
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                },
                "administrativeState": {
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ],
                    "type": "string"
                },
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string"
                }
            }
        },
        "TransferCapacityPac": {
            "properties": {
                "totalPotentialCapacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                },
                "capacityAssignedToUserView": {
                    "description": "Capacity already assigned",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    }
                },
                "availableCapacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "Capacity available to be assigned."
                },
                "capacityInteractionAlgorithm": {
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)",
                    "type": "string"
                }
            }
        },
        "TransferIntegrityPac": {
            "properties": {
                "errorCharacteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded.",
                    "type": "string"
                },
                "unavailableTimeCharacteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated.",
                    "type": "string"
                },
                "serverIntegrityProcessCharacteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity.",
                    "type": "string"
                },
                "repeatDeliveryCharacteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay.",
                    "type": "string"
                },
                "lossCharacteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips).",
                    "type": "string"
                },
                "deliveryOrderCharacteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order.",
                    "type": "string"
                }
            }
        },
        "ConnectionEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_clientNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string"
                            }
                        },
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_serverNodeEdgePoint": {
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                            "type": "string"
                        },
                        "_peerConnectionEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid",
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            }
                        }
                    }
                }
            ]
        },
        "LifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                }
            }
        },
        "ValidationMechanism": {
            "properties": {
                "layerProtocolAdjacencyValidated": {
                    "description": "State of validatiion",
                    "type": "string"
                },
                "validationMechanism": {
                    "description": "Name of mechanism used to validate adjacency",
                    "type": "string"
                },
                "validationRobustness": {
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)",
                    "type": "string"
                }
            }
        },
        "CostCharacteristic": {
            "properties": {
                "costName": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName.",
                    "type": "string"
                },
                "costValue": {
                    "description": "The specific cost.",
                    "type": "string"
                },
                "costAlgorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm.",
                    "type": "string"
                }
            }
        },
        "NameAndValue": {
            "properties": {
                "value": {
                    "description": "The value",
                    "type": "string"
                },
                "valueName": {
                    "description": "The name of the value. The value need not have a name.",
                    "type": "string"
                }
            }
        },
        "QueuingLatency": {
            "properties": {
                "trafficPropertyName": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies.",
                    "type": "string"
                },
                "latencyValue": {
                    "description": "The specific queuing latency for the traffic property.",
                    "type": "string"
                }
            }
        },
        "RiskCharacteristic": {
            "properties": {
                "riskCharacteristicName": {
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated.",
                    "type": "string"
                },
                "riskIdentifierList": {
                    "type": "array",
                    "items": {
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity.",
                        "type": "string"
                    }
                }
            }
        },
        "Capacity": {
            "properties": {
                "numberingRange": {
                    "description": "Method for identifying units of capacity via some numbering scheme.",
                    "type": "string"
                },
                "maximumUsageInstances": {
                    "description": "Where there is some limit to the number of client (e.g. in a channelized case).",
                    "type": "string"
                },
                "totalSize": {
                    "description": "Total capacity of the TopologicalEntity in MB/s",
                    "type": "string"
                },
                "maximumUsageSize": {
                    "description": "Where a client is of variable capacity but due to some underlying realization the maximum size of the client is smaller than the totalSize.",
                    "type": "string"
                }
            }
        },
        "LtpSpec": {
            "properties": {
                "lpSpecReference": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ltpSpecReference": {
                    "type": "string"
                }
            }
        },
        "LpSpec": {
            "properties": {
                "lpSpecReference": {
                    "type": "string"
                }
            }
        },
        "ContextSchema": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_path": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Path"
                            }
                        },
                        "_topology": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Topology"
                            }
                        },
                        "_connectivityService": {
                            "x-key": "uuid",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectivityService"
                            }
                        },
                        "_serviceEndPoint": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceEndPoint"
                            }
                        },
                        "_vnwService": {
                            "x-key": "uuid",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkService"
                            }
                        }
                    }
                }
            ]
        }
    }
}