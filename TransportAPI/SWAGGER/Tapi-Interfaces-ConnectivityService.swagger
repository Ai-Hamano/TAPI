{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "Tapi-Interfaces-ConnectivityService API generated from Tapi-Interfaces-ConnectivityService.yang",
        "title": "Tapi-Interfaces-ConnectivityService API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/operations/getConnectionDetails/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetConnectionDetailsRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getConnectionDetails",
                "parameters": [
                    {
                        "name": "getConnectionDetails",
                        "in": "body",
                        "description": "getConnectionDetailsbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetConnectionDetailsRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getConnectionDetails by ID",
                "operationId": "createGetConnectionDetailsById"
            }
        },
        "/operations/getConnectivityServiceList/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetConnectivityServiceListRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getConnectivityServiceList",
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getConnectivityServiceList by ID",
                "operationId": "createGetConnectivityServiceListById"
            }
        },
        "/operations/getConnectionEndPointDetails/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetConnectionEndPointDetailsRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getConnectionEndPointDetails",
                "parameters": [
                    {
                        "name": "getConnectionEndPointDetails",
                        "in": "body",
                        "description": "getConnectionEndPointDetailsbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetConnectionEndPointDetailsRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getConnectionEndPointDetails by ID",
                "operationId": "createGetConnectionEndPointDetailsById"
            }
        },
        "/operations/getServiceEndPointDetails/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetServiceEndPointDetailsRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getServiceEndPointDetails",
                "parameters": [
                    {
                        "name": "getServiceEndPointDetails",
                        "in": "body",
                        "description": "getServiceEndPointDetailsbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetServiceEndPointDetailsRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getServiceEndPointDetails by ID",
                "operationId": "createGetServiceEndPointDetailsById"
            }
        },
        "/operations/getConnectivityServiceDetails/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetConnectivityServiceDetailsRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getConnectivityServiceDetails",
                "parameters": [
                    {
                        "name": "getConnectivityServiceDetails",
                        "in": "body",
                        "description": "getConnectivityServiceDetailsbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetConnectivityServiceDetailsRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getConnectivityServiceDetails by ID",
                "operationId": "createGetConnectivityServiceDetailsById"
            }
        },
        "/operations/getServiceEndPointList/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetServiceEndPointListRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: getServiceEndPointList",
                "consumes": [
                    "application/json"
                ],
                "summary": "Create getServiceEndPointList by ID",
                "operationId": "createGetServiceEndPointListById"
            }
        },
        "/operations/createConnectivityService/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateConnectivityServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: createConnectivityService",
                "parameters": [
                    {
                        "name": "createConnectivityService",
                        "in": "body",
                        "description": "createConnectivityServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateConnectivityServiceRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create createConnectivityService by ID",
                "operationId": "createCreateConnectivityServiceById"
            }
        },
        "/operations/updateConnectivityService/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateConnectivityServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: updateConnectivityService",
                "parameters": [
                    {
                        "name": "updateConnectivityService",
                        "in": "body",
                        "description": "updateConnectivityServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateConnectivityServiceRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create updateConnectivityService by ID",
                "operationId": "createUpdateConnectivityServiceById"
            }
        },
        "/operations/deleteConnectivityService/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DeleteConnectivityServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    }
                },
                "description": "Create operation of resource: deleteConnectivityService",
                "parameters": [
                    {
                        "name": "deleteConnectivityService",
                        "in": "body",
                        "description": "deleteConnectivityServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteConnectivityServiceRPCInputSchema"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "Create deleteConnectivityService by ID",
                "operationId": "createDeleteConnectivityServiceById"
            }
        }
    },
    "definitions": {
        "TransferCostPac": {
            "properties": {
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "x-key": "costAlgorithm"
                }
            }
        },
        "ConnectionPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        },
                        "_connectionEndPoint": {
                            "type": "string",
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid"
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "Node": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_ownedNodeEdgePoint": {
                            "items": {
                                "$ref": "#/definitions/NodeEdgePoint"
                            },
                            "type": "array"
                        },
                        "layerProtocolName": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_encapTopology": {
                            "type": "string",
                            "x-path": "/Context/_topology/uuid"
                        }
                    }
                }
            ]
        },
        "Link": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/uuid"
                            },
                            "type": "array"
                        },
                        "direction": {
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases.",
                            "type": "string"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "_validation": {
                            "$ref": "#/definitions/ValidationPac"
                        },
                        "_linkPort": {
                            "items": {
                                "$ref": "#/definitions/LinkPort"
                            },
                            "type": "array"
                        },
                        "_lpTransition": {
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "layerProtocolName": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_riskParameter": {
                            "$ref": "#/definitions/RiskParameterPac"
                        }
                    }
                }
            ]
        },
        "ScheduleInfo": {
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "ConnectivityServicePort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_serviceEndPoint": {
                            "type": "string",
                            "x-path": "/Context/_serviceEndPoint/uuid"
                        },
                        "serviceLayer": {
                            "type": "string"
                        },
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "LocalClass": {
            "properties": {
                "localId": {
                    "type": "string"
                }
            }
        },
        "VirtualNetworkConstraint": {
            "properties": {
                "serviceLayer": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "x-key": "latencyValue"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "x-key": "costAlgorithm"
                },
                "requestedCapacity": {
                    "$ref": "#/definitions/Capacity"
                },
                "serviceType": {
                    "type": "string"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "x-key": "riskCharacteristicName"
                },
                "serviceLevel": {
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability",
                    "type": "string"
                }
            }
        },
        "TransferTimingPac": {
            "properties": {
                "jitterCharacteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                },
                "fixedLatencyCharacteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity",
                    "type": "string"
                },
                "wanderCharacteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                },
                "queuingLatency": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "x-key": "latencyValue"
                }
            }
        },
        "LayerProtocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationDirection": {
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows",
                            "type": "string"
                        },
                        "_lpSpecData": {
                            "$ref": "#/definitions/LpSpec"
                        },
                        "layerProtocolName": {
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity.",
                            "type": "string"
                        },
                        "terminationState": {
                            "description": "Indicates whether the layer is terminated and if so how.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "VirtualNetworkService": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_topology": {
                            "type": "string",
                            "x-path": "/Context/_topology/uuid"
                        },
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkServicePort"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_schedule": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "layerProtocolName": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_vnwConstraint": {
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        }
                    }
                }
            ]
        },
        "Connection": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "type": "string",
                            "x-path": "/Context/_topology/_node/uuid"
                        },
                        "_route": {
                            "items": {
                                "$ref": "#/definitions/Route"
                            },
                            "type": "array"
                        },
                        "direction": {
                            "type": "string"
                        },
                        "_state": {
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "layerProtocolName": {
                            "type": "string"
                        },
                        "_connectionPort": {
                            "items": {
                                "$ref": "#/definitions/ConnectionPort"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "LayerProtocolTransitionPac": {
            "properties": {
                "_nodeEdgePoint": {
                    "items": {
                        "description": "Lists the LTPs that define the layer protocol transition of the transitional link.",
                        "type": "string",
                        "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                    },
                    "type": "array"
                },
                "transitionedLayerProtocolName": {
                    "items": {
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role.",
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "Route": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_lowerConnection": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/_connection/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "LinkPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "type": "string",
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "role": {
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. ",
                            "type": "string"
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the LinkEnd.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ValidationPac": {
            "properties": {
                "validationMechanism": {
                    "items": {
                        "$ref": "#/definitions/ValidationMechanism"
                    },
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "type": "array",
                    "x-key": "validationRobustness"
                }
            }
        },
        "TeLink": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_node": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "VirtualNetworkServicePort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_serviceEndPoint": {
                            "type": "string",
                            "x-path": "/Context/_serviceEndPoint/uuid"
                        },
                        "serviceLayer": {
                            "type": "string"
                        },
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string"
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "LifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string"
                }
            }
        },
        "ConnectivityService": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_connConstraints": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/ConnectivityServicePort"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "direction": {
                            "type": "string"
                        },
                        "_connection": {
                            "items": {
                                "$ref": "#/definitions/Connection"
                            },
                            "type": "array"
                        },
                        "_schedule": {
                            "$ref": "#/definitions/ScheduleInfo"
                        },
                        "layerProtocolName": {
                            "type": "string"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    }
                }
            ]
        },
        "GlobalClass": {
            "properties": {
                "name": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "x-key": "valueName"
                },
                "label": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "type": "array",
                    "x-key": "valueName"
                },
                "extension": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of simple name-value extentions. Extension provides an opportunity to define properties not declared in the class that extend the class enabling a realization with simple ad-hoc extension of standard classes to be conformant.",
                    "type": "array",
                    "x-key": "valueName"
                },
                "uuid": {
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)",
                    "type": "string"
                }
            }
        },
        "TransferIntegrityPac": {
            "properties": {
                "lossCharacteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips).",
                    "type": "string"
                },
                "unavailableTimeCharacteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated.",
                    "type": "string"
                },
                "errorCharacteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded.",
                    "type": "string"
                },
                "repeatDeliveryCharacteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay.",
                    "type": "string"
                },
                "deliveryOrderCharacteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order.",
                    "type": "string"
                },
                "serverIntegrityProcessCharacteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity.",
                    "type": "string"
                }
            }
        },
        "PathObjectiveFunction": {
            "properties": {
                "resourceSharing": {
                    "type": "string"
                },
                "linkUtilization": {
                    "type": "string"
                },
                "costOptimization": {
                    "type": "string"
                },
                "bandwidthOptimization": {
                    "type": "string"
                },
                "concurrentPaths": {
                    "type": "string"
                }
            }
        },
        "AdminStatePac": {
            "properties": {
                "administrativeState": {
                    "type": "string"
                },
                "lifecycleState": {
                    "type": "string"
                },
                "operationalState": {
                    "type": "string"
                }
            }
        },
        "ConnectivityConstraint": {
            "properties": {
                "serviceLayer": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "x-key": "latencyValue"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "x-key": "costAlgorithm"
                },
                "requestedCapacity": {
                    "$ref": "#/definitions/Capacity"
                },
                "avoidTopology": {
                    "items": {
                        "type": "string",
                        "x-path": "/Context/_topology/uuid"
                    },
                    "type": "array"
                },
                "includePath": {
                    "items": {
                        "type": "string",
                        "x-path": "/Context/_path/uuid"
                    },
                    "type": "array"
                },
                "serviceType": {
                    "type": "string"
                },
                "excludePath": {
                    "items": {
                        "type": "string",
                        "x-path": "/Context/_path/uuid"
                    },
                    "type": "array"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "x-key": "riskCharacteristicName"
                },
                "serviceLevel": {
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability",
                    "type": "string"
                },
                "includeTopology": {
                    "items": {
                        "type": "string",
                        "x-path": "/Context/_topology/uuid"
                    },
                    "type": "array"
                }
            }
        },
        "RiskParameterPac": {
            "properties": {
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "ServiceEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "$ref": "#/definitions/LifecycleStatePac"
                        },
                        "_connectionEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ConnectionEndPoint"
                            },
                            "type": "array"
                        },
                        "_mappedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        }
                    }
                }
            ]
        },
        "PathOptimizationConstraint": {
            "properties": {
                "trafficInterruption": {
                    "type": "string"
                }
            }
        },
        "NodeEdgePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "Topology": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "$ref": "#/definitions/Node"
                            },
                            "type": "array"
                        },
                        "_link": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "type": "array"
                        },
                        "layerProtocolName": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "ConnectionEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_serverNodeEdgePoint": {
                            "type": "string",
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "direction": {
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_peerConnectionEndPoint": {
                            "type": "string",
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid"
                        },
                        "_ltpSpecData": {
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "TransferCapacityPac": {
            "properties": {
                "totalPotentialCapacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                    "$ref": "#/definitions/Capacity"
                },
                "capacityAssignedToUserView": {
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    },
                    "description": "Capacity already assigned",
                    "type": "array",
                    "x-key": "numberingRange"
                },
                "capacityInteractionAlgorithm": {
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)",
                    "type": "string"
                },
                "availableCapacity": {
                    "description": "Capacity available to be assigned.",
                    "$ref": "#/definitions/Capacity"
                }
            }
        },
        "Path": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_telink": {
                            "items": {
                                "$ref": "#/definitions/TeLink"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_objectiveFunction": {
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "_optimizationConstraint": {
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        },
                        "_routingConstraint": {
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    }
                }
            ]
        },
        "OperationalStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string"
                },
                "operationalState": {
                    "type": "string"
                }
            }
        },
        "CostCharacteristic": {
            "properties": {
                "costAlgorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm.",
                    "type": "string"
                },
                "costName": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName.",
                    "type": "string"
                },
                "costValue": {
                    "description": "The specific cost.",
                    "type": "string"
                }
            }
        },
        "Capacity": {
            "properties": {
                "maximumUsageInstances": {
                    "description": "Where there is some limit to the number of client (e.g. in a channelized case).",
                    "type": "string"
                },
                "numberingRange": {
                    "description": "Method for identifying units of capacity via some numbering scheme.",
                    "type": "string"
                },
                "maximumUsageSize": {
                    "description": "Where a client is of variable capacity but due to some underlying realization the maximum size of the client is smaller than the totalSize.",
                    "type": "string"
                },
                "totalSize": {
                    "description": "Total capacity of the TopologicalEntity in MB/s",
                    "type": "string"
                }
            }
        },
        "RiskCharacteristic": {
            "properties": {
                "riskCharacteristicName": {
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated.",
                    "type": "string"
                },
                "riskIdentifierList": {
                    "items": {
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity.",
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "NameAndValue": {
            "properties": {
                "valueName": {
                    "description": "The name of the value. The value need not have a name.",
                    "type": "string"
                },
                "value": {
                    "description": "The value",
                    "type": "string"
                }
            }
        },
        "QueuingLatency": {
            "properties": {
                "trafficPropertyName": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies.",
                    "type": "string"
                },
                "latencyValue": {
                    "description": "The specific queuing latency for the traffic property.",
                    "type": "string"
                }
            }
        },
        "ValidationMechanism": {
            "properties": {
                "validationMechanism": {
                    "description": "Name of mechanism used to validate adjacency",
                    "type": "string"
                },
                "layerProtocolAdjacencyValidated": {
                    "description": "State of validatiion",
                    "type": "string"
                },
                "validationRobustness": {
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)",
                    "type": "string"
                }
            }
        },
        "LpSpec": {
            "properties": {
                "lpSpecReference": {
                    "type": "string"
                }
            }
        },
        "LtpSpec": {
            "properties": {
                "lpSpecReference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ltpSpecReference": {
                    "type": "string"
                }
            }
        },
        "GetConnectionDetailsRPCInputSchema": {
            "properties": {
                "serviceIdOrName": {
                    "type": "string"
                },
                "connectionIdOrName": {
                    "type": "string"
                }
            }
        },
        "GetConnectionDetailsRPCOutputSchema": {
            "properties": {
                "connection": {
                    "$ref": "#/definitions/Connection"
                }
            }
        },
        "GetConnectivityServiceListRPCOutputSchema": {
            "properties": {
                "connService": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityService"
                    },
                    "type": "array"
                }
            }
        },
        "GetConnectionEndPointDetailsRPCInputSchema": {
            "properties": {
                "serviceIdOrName": {
                    "type": "string"
                },
                "connEPIdOrName": {
                    "type": "string"
                },
                "connectionIdOrName": {
                    "type": "string"
                }
            }
        },
        "GetConnectionEndPointDetailsRPCOutputSchema": {
            "properties": {
                "connEP": {
                    "$ref": "#/definitions/ConnectionEndPoint"
                }
            }
        },
        "GetServiceEndPointDetailsRPCInputSchema": {
            "properties": {
                "serviceEPIdOrName": {
                    "type": "string"
                }
            }
        },
        "GetServiceEndPointDetailsRPCOutputSchema": {
            "properties": {
                "serviceEndPoint": {
                    "$ref": "#/definitions/ServiceEndPoint"
                }
            }
        },
        "GetConnectivityServiceDetailsRPCInputSchema": {
            "properties": {
                "serviceIdOrName": {
                    "type": "string"
                }
            }
        },
        "GetConnectivityServiceDetailsRPCOutputSchema": {
            "properties": {
                "connService": {
                    "$ref": "#/definitions/ConnectivityService"
                }
            }
        },
        "GetServiceEndPointListRPCOutputSchema": {
            "properties": {
                "serviceEndPoint": {
                    "items": {
                        "$ref": "#/definitions/ServiceEndPoint"
                    },
                    "type": "array"
                }
            }
        },
        "CreateConnectivityServiceRPCInputSchema": {
            "properties": {
                "connConstraint": {
                    "$ref": "#/definitions/ConnectivityConstraint"
                },
                "servicePort": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityServicePort"
                    },
                    "type": "array"
                },
                "connSchedule": {
                    "$ref": "#/definitions/ScheduleInfo"
                }
            }
        },
        "CreateConnectivityServiceRPCOutputSchema": {
            "properties": {
                "connService": {
                    "$ref": "#/definitions/ConnectivityService"
                }
            }
        },
        "UpdateConnectivityServiceRPCInputSchema": {
            "properties": {
                "serviceIdOrName": {
                    "type": "string"
                },
                "connConstraint": {
                    "$ref": "#/definitions/ConnectivityConstraint"
                },
                "connSchedule": {
                    "$ref": "#/definitions/ScheduleInfo"
                }
            }
        },
        "UpdateConnectivityServiceRPCOutputSchema": {
            "properties": {
                "connService": {
                    "$ref": "#/definitions/ConnectivityService"
                }
            }
        },
        "DeleteConnectivityServiceRPCInputSchema": {
            "properties": {
                "serviceIdOrName": {
                    "type": "string"
                }
            }
        },
        "DeleteConnectivityServiceRPCOutputSchema": {
            "properties": {
                "connService": {
                    "$ref": "#/definitions/ConnectivityService"
                }
            }
        }
    }
}