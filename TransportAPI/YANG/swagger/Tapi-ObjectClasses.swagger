{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "Tapi-ObjectClasses API generated from Tapi-ObjectClasses.yang",
        "title": "Tapi-ObjectClasses API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/Topology/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Topology not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: Topology",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of Topology",
                        "schema": {
                            "$ref": "#/definitions/GTopology"
                        },
                        "name": "Topology",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopologyTopologyById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Topology not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: Topology",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of Topology",
                        "schema": {
                            "$ref": "#/definitions/GTopology"
                        },
                        "name": "Topology",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopologyTopologyById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Topology not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: Topology",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopologyTopologyById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTopology"
                        }
                    },
                    "404": {
                        "description": "Topology not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: Topology",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve Topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopologyTopologyById"
            }
        },
        "/config/Topology/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopologyNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopologyNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopologyNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopologyNameNameById"
            }
        },
        "/config/Topology/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopologyLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopologyLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopologyLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopologyLabelLabelById"
            }
        },
        "/config/Topology/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopologyExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopologyExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopologyExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopologyExtensionExtensionById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_node not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _node",
                        "schema": {
                            "$ref": "#/definitions/GNode"
                        },
                        "name": "_node",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _node by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_nodeById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_node not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _node",
                        "schema": {
                            "$ref": "#/definitions/GNode"
                        },
                        "name": "_node",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _node by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_nodeById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_node not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _node by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_nodeById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNode"
                        }
                    },
                    "404": {
                        "description": "_node not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _node by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_nodeById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_nodeNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_nodeNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_nodeNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_nodeNameNameById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_nodeLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_nodeLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_nodeLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_nodeLabelLabelById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_nodeExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_nodeExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_nodeExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_nodeExtensionExtensionById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_ownednodeedgepoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _ownedNodeEdgePoint",
                        "schema": {
                            "$ref": "#/definitions/GNodeEdgePoint"
                        },
                        "name": "_ownedNodeEdgePoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _ownedNodeEdgePoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePoint_ownedNodeEdgePointById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_ownednodeedgepoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _ownedNodeEdgePoint",
                        "schema": {
                            "$ref": "#/definitions/GNodeEdgePoint"
                        },
                        "name": "_ownedNodeEdgePoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _ownedNodeEdgePoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePoint_ownedNodeEdgePointById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_ownednodeedgepoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _ownedNodeEdgePoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePoint_ownedNodeEdgePointById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNodeEdgePoint"
                        }
                    },
                    "404": {
                        "description": "_ownednodeedgepoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ownedNodeEdgePoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePoint_ownedNodeEdgePointById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePointNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePointNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePointNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePointNameNameById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePointLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePointLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePointLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePointLabelLabelById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePointExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePointExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePointExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePointExtensionExtensionById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/_layerProtocol/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        }
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_ownedNodeEdgePoint/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_ownedNodeEdgePoint_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_ownedNodeEdgePoint_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_ownedNodeEdgePoint_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_ownedNodeEdgePoint_state_stateById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_state_stateById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCapacity",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "name": "_transferCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCapacity_transferCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCapacity",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "name": "_transferCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCapacity_transferCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCapacity_transferCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        }
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCapacity_transferCapacityById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCapacity/totalPotentialCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of totalPotentialCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "totalPotentialCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of totalPotentialCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "totalPotentialCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCapacity/availableCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of availableCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "availableCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of availableCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "availableCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCapacityAvailableCapacityAvailableCapacityById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of capacityAssignedToUserView",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "capacityAssignedToUserView",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of capacityAssignedToUserView",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "capacityAssignedToUserView",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCost/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCost",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "name": "_transferCost",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCost_transferCostById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCost",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "name": "_transferCost",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCost_transferCostById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCost_transferCostById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        }
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCost_transferCostById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferCost/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferCostCostCharacteristicCostCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferCostCostCharacteristicCostCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferCostCostCharacteristicCostCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferCostCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferIntegrity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferIntegrity",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        },
                        "name": "_transferIntegrity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferIntegrity_transferIntegrityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferIntegrity",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        },
                        "name": "_transferIntegrity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferIntegrity_transferIntegrityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferIntegrity_transferIntegrityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        }
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferIntegrity_transferIntegrityById"
            }
        },
        "/config/Topology/{uuid}/_node/{uuid}/_transferTiming/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferTiming",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "name": "_transferTiming",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_node_transferTiming_transferTimingById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferTiming",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "name": "_transferTiming",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_node_transferTiming_transferTimingById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_node_transferTiming_transferTimingById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        }
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_node_transferTiming_transferTimingById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_link not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _link",
                        "schema": {
                            "$ref": "#/definitions/GLink"
                        },
                        "name": "_link",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _link by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_linkById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_link not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _link",
                        "schema": {
                            "$ref": "#/definitions/GLink"
                        },
                        "name": "_link",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _link by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_linkById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_link not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _link by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_linkById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLink"
                        }
                    },
                    "404": {
                        "description": "_link not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _link by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_linkById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_linkNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_linkNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_linkNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_linkNameNameById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_linkLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_linkLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_linkLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_linkLabelLabelById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_linkExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_linkExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_linkExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_linkExtensionExtensionById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_linkPort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_linkport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _linkPort",
                        "schema": {
                            "$ref": "#/definitions/GLinkPort"
                        },
                        "name": "_linkPort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _linkPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_linkPort_linkPortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_linkport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _linkPort",
                        "schema": {
                            "$ref": "#/definitions/GLinkPort"
                        },
                        "name": "_linkPort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _linkPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_linkPort_linkPortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_linkport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _linkPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_linkPort_linkPortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLinkPort"
                        }
                    },
                    "404": {
                        "description": "_linkport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _linkPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_linkPort_linkPortById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_state_stateById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCapacity",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "name": "_transferCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCapacity_transferCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCapacity",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "name": "_transferCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCapacity_transferCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCapacity_transferCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        }
                    },
                    "404": {
                        "description": "_transfercapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCapacity_transferCapacityById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCapacity/totalPotentialCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of totalPotentialCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "totalPotentialCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of totalPotentialCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "totalPotentialCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Totalpotentialcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacityById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCapacity/availableCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of availableCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "availableCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of availableCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "availableCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCapacityAvailableCapacityAvailableCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Availablecapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCapacityAvailableCapacityAvailableCapacityById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of capacityAssignedToUserView",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "capacityAssignedToUserView",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of capacityAssignedToUserView",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "capacityAssignedToUserView",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Capacityassignedtouserview not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRan",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCost/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCost",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "name": "_transferCost",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCost_transferCostById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferCost",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "name": "_transferCost",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCost_transferCostById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCost_transferCostById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferCostPac"
                        }
                    },
                    "404": {
                        "description": "_transfercost not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCost_transferCostById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferCost/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferCostCostCharacteristicCostCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferCostCostCharacteristicCostCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferCostCostCharacteristicCostCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferCostCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferIntegrity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferIntegrity",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        },
                        "name": "_transferIntegrity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferIntegrity_transferIntegrityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferIntegrity",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        },
                        "name": "_transferIntegrity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferIntegrity_transferIntegrityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferIntegrity_transferIntegrityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        }
                    },
                    "404": {
                        "description": "_transferintegrity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferIntegrity_transferIntegrityById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_transferTiming/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferTiming",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "name": "_transferTiming",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_transferTiming_transferTimingById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _transferTiming",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "name": "_transferTiming",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_transferTiming_transferTimingById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_transferTiming_transferTimingById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        }
                    },
                    "404": {
                        "description": "_transfertiming not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_transferTiming_transferTimingById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_riskParameter/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_riskparameter not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _riskParameter",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _riskParameter",
                        "schema": {
                            "$ref": "#/definitions/GRiskParameterPac"
                        },
                        "name": "_riskParameter",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _riskParameter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_riskParameter_riskParameterById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_riskparameter not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _riskParameter",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _riskParameter",
                        "schema": {
                            "$ref": "#/definitions/GRiskParameterPac"
                        },
                        "name": "_riskParameter",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _riskParameter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_riskParameter_riskParameterById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_riskparameter not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _riskParameter",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _riskParameter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_riskParameter_riskParameterById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GRiskParameterPac"
                        }
                    },
                    "404": {
                        "description": "_riskparameter not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _riskParameter",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _riskParameter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_riskParameter_riskParameterById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_riskParameter/riskCharacteristic/{riskCharacteristicName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_riskParameterRiskCharacteristicRiskCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_riskParameterRiskCharacteristicRiskCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_riskParameterRiskCharacteristicRiskCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_riskParameterRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_validation/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_validation not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _validation",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _validation",
                        "schema": {
                            "$ref": "#/definitions/GValidationPac"
                        },
                        "name": "_validation",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _validation by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_validation_validationById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_validation not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _validation",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _validation",
                        "schema": {
                            "$ref": "#/definitions/GValidationPac"
                        },
                        "name": "_validation",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _validation by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_validation_validationById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_validation not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _validation",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _validation by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_validation_validationById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GValidationPac"
                        }
                    },
                    "404": {
                        "description": "_validation not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _validation",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _validation by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_validation_validationById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_validation/validationMechanism/{validationRobustness}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Validationmechanism not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of validationRobustne",
                        "required": true,
                        "type": "string",
                        "name": "validationRobustness",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of validationMechanism",
                        "schema": {
                            "$ref": "#/definitions/GValidationMechanism"
                        },
                        "name": "validationMechanism",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update validationMechanism by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_validationValidationMechanismValidationMechanismById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Validationmechanism not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of validationRobustne",
                        "required": true,
                        "type": "string",
                        "name": "validationRobustness",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of validationMechanism",
                        "schema": {
                            "$ref": "#/definitions/GValidationMechanism"
                        },
                        "name": "validationMechanism",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create validationMechanism by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_validationValidationMechanismValidationMechanismById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Validationmechanism not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of validationRobustne",
                        "required": true,
                        "type": "string",
                        "name": "validationRobustness",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete validationMechanism by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_validationValidationMechanismValidationMechanismById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GValidationMechanism"
                        }
                    },
                    "404": {
                        "description": "Validationmechanism not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of validationRobustne",
                        "required": true,
                        "type": "string",
                        "name": "validationRobustness",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve validationMechanism by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_validationValidationMechanismValidationMechanismById"
            }
        },
        "/config/Topology/{uuid}/_link/{uuid}/_lpTransition/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_lptransition not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _lpTransition",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _lpTransition",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocolTransitionPac"
                        },
                        "name": "_lpTransition",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _lpTransition by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateTopology_link_lpTransition_lpTransitionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_lptransition not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _lpTransition",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _lpTransition",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocolTransitionPac"
                        },
                        "name": "_lpTransition",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _lpTransition by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createTopology_link_lpTransition_lpTransitionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_lptransition not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _lpTransition",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _lpTransition by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteTopology_link_lpTransition_lpTransitionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocolTransitionPac"
                        }
                    },
                    "404": {
                        "description": "_lptransition not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _lpTransition",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpTransition by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveTopology_link_lpTransition_lpTransitionById"
            }
        },
        "/config/G_Context/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "G_context not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: G_Context",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of G_Context",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/GGlobalClass"
                                },
                                {
                                    "properties": {
                                        "_topology": {
                                            "type": "string",
                                            "x-path": "/Topology/uuid"
                                        }
                                    }
                                }
                            ]
                        },
                        "name": "G_Context",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update G_Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateGContextGContextById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "G_context not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: G_Context",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of G_Context",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/GGlobalClass"
                                },
                                {
                                    "properties": {
                                        "_topology": {
                                            "type": "string",
                                            "x-path": "/Topology/uuid"
                                        }
                                    }
                                }
                            ]
                        },
                        "name": "G_Context",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create G_Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGContextGContextById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "G_context not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: G_Context",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete G_Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteGContextGContextById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/GGlobalClass"
                                },
                                {
                                    "properties": {
                                        "_topology": {
                                            "type": "string",
                                            "x-path": "/Topology/uuid"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "G_context not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: G_Context",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve G_Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveGContextGContextById"
            }
        },
        "/config/G_Context/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateGContextNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGContextNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteGContextNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveGContextNameNameById"
            }
        },
        "/config/G_Context/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateGContextLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGContextLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteGContextLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveGContextLabelLabelById"
            }
        },
        "/config/G_Context/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateGContextExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGContextExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteGContextExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveGContextExtensionExtensionById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Serviceendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: ServiceEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ServiceEndPoint",
                        "schema": {
                            "$ref": "#/definitions/GServiceEndPoint"
                        },
                        "name": "ServiceEndPoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update ServiceEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPointServiceEndPointById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Serviceendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: ServiceEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ServiceEndPoint",
                        "schema": {
                            "$ref": "#/definitions/GServiceEndPoint"
                        },
                        "name": "ServiceEndPoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ServiceEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPointServiceEndPointById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Serviceendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: ServiceEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete ServiceEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPointServiceEndPointById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GServiceEndPoint"
                        }
                    },
                    "404": {
                        "description": "Serviceendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: ServiceEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve ServiceEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPointServiceEndPointById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPointNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPointNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPointNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPointNameNameById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPointLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPointLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPointLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPointLabelLabelById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPointExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPointExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPointExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPointExtensionExtensionById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/_layerProtocol/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPoint_layerProtocol_layerProtocolById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPoint_layerProtocol_layerProtocolById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPoint_layerProtocol_layerProtocolById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        }
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/ServiceEndPoint/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GLifecycleStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateServiceEndPoint_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GLifecycleStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createServiceEndPoint_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteServiceEndPoint_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLifecycleStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveServiceEndPoint_state_stateById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectionendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: ConnectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ConnectionEndPoint",
                        "schema": {
                            "$ref": "#/definitions/GConnectionEndPoint"
                        },
                        "name": "ConnectionEndPoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update ConnectionEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPointConnectionEndPointById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectionendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: ConnectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ConnectionEndPoint",
                        "schema": {
                            "$ref": "#/definitions/GConnectionEndPoint"
                        },
                        "name": "ConnectionEndPoint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ConnectionEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPointConnectionEndPointById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectionendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: ConnectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete ConnectionEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPointConnectionEndPointById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnectionEndPoint"
                        }
                    },
                    "404": {
                        "description": "Connectionendpoint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: ConnectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve ConnectionEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPointConnectionEndPointById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPointNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPointNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPointNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPointNameNameById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPointLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPointLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPointLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPointLabelLabelById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPointExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPointExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPointExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPointExtensionExtensionById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/_layerProtocol/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPoint_layerProtocol_layerProtocolById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _layerProtocol",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        },
                        "name": "_layerProtocol",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPoint_layerProtocol_layerProtocolById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPoint_layerProtocol_layerProtocolById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GLayerProtocol"
                        }
                    },
                    "404": {
                        "description": "_layerprotocol not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/ConnectionEndPoint/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectionEndPoint_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectionEndPoint_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectionEndPoint_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectionEndPoint_state_stateById"
            }
        },
        "/config/ConnectivityService/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectivityservice not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: ConnectivityService",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ConnectivityService",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityService"
                        },
                        "name": "ConnectivityService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update ConnectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityServiceConnectivityServiceById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectivityservice not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: ConnectivityService",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of ConnectivityService",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityService"
                        },
                        "name": "ConnectivityService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ConnectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityServiceConnectivityServiceById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Connectivityservice not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: ConnectivityService",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete ConnectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityServiceConnectivityServiceById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityService"
                        }
                    },
                    "404": {
                        "description": "Connectivityservice not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: ConnectivityService",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve ConnectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityServiceConnectivityServiceById"
            }
        },
        "/config/ConnectivityService/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityServiceNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityServiceNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityServiceNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityServiceNameNameById"
            }
        },
        "/config/ConnectivityService/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityServiceLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityServiceLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityServiceLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityServiceLabelLabelById"
            }
        },
        "/config/ConnectivityService/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityServiceExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityServiceExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityServiceExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityServiceExtensionExtensionById"
            }
        },
        "/config/ConnectivityService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_serviceport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _servicePort",
                        "schema": {
                            "$ref": "#/definitions/GServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_servicePort_servicePortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_serviceport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _servicePort",
                        "schema": {
                            "$ref": "#/definitions/GServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_servicePort_servicePortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_serviceport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_servicePort_servicePortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GServicePort"
                        }
                    },
                    "404": {
                        "description": "_serviceport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_servicePort_servicePortById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connection not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connection",
                        "schema": {
                            "$ref": "#/definitions/GConnection"
                        },
                        "name": "_connection",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connection by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connection_connectionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connection not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connection",
                        "schema": {
                            "$ref": "#/definitions/GConnection"
                        },
                        "name": "_connection",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connection by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connection_connectionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connection not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connection by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connection_connectionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnection"
                        }
                    },
                    "404": {
                        "description": "_connection not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connection by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connection_connectionById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connectionNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connectionNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connectionNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connectionNameNameById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connectionLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connectionLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connectionLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connectionLabelLabelById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connectionExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connectionExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connectionExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connectionExtensionExtensionById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/_connectionPort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connectionport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connectionPort",
                        "schema": {
                            "$ref": "#/definitions/GConnectionPort"
                        },
                        "name": "_connectionPort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connectionPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connection_connectionPort_connectionPortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connectionport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connectionPort",
                        "schema": {
                            "$ref": "#/definitions/GConnectionPort"
                        },
                        "name": "_connectionPort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connectionPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connection_connectionPort_connectionPortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connectionport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connectionPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connection_connectionPort_connectionPortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnectionPort"
                        }
                    },
                    "404": {
                        "description": "_connectionport not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectionPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connection_connectionPort_connectionPortById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/_route/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_route not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _route",
                        "schema": {
                            "$ref": "#/definitions/GRoute"
                        },
                        "name": "_route",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _route by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connection_route_routeById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_route not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _route",
                        "schema": {
                            "$ref": "#/definitions/GRoute"
                        },
                        "name": "_route",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _route by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connection_route_routeById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_route not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _route by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connection_route_routeById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GRoute"
                        }
                    },
                    "404": {
                        "description": "_route not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _route by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connection_route_routeById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connection/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connection_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connection_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connection_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connection_state_stateById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connConstraints/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connconstraints not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connConstraints",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connConstraints_connConstraintsById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connconstraints not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connConstraints",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connConstraints_connConstraintsById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connconstraints not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connConstraints_connConstraintsById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        }
                    },
                    "404": {
                        "description": "_connconstraints not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connConstraints_connConstraintsById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connConstraints/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connConstraintsCostCharacteristicCostCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connConstraintsCostCharacteristicCostCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connConstraintsCostCharacteristicCostCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connConstraintsCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connConstraints/latencyCharacteristic/{latencyValue}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of latencyCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of latencyCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        }
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connConstraints/requestedCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of requestedCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connConstraintsRequestedCapacityRequestedCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of requestedCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connConstraintsRequestedCapacityRequestedCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connConstraintsRequestedCapacityRequestedCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connConstraintsRequestedCapacityRequestedCapacityById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connConstraints/riskCharacteristic/{riskCharacteristicName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/ConnectivityService/{uuid}/_connSchedule/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connschedule not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _connSchedule",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connSchedule",
                        "schema": {
                            "$ref": "#/definitions/GScheduleInfo"
                        },
                        "name": "_connSchedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connSchedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_connSchedule_connScheduleById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connschedule not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _connSchedule",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _connSchedule",
                        "schema": {
                            "$ref": "#/definitions/GScheduleInfo"
                        },
                        "name": "_connSchedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connSchedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_connSchedule_connScheduleById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_connschedule not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _connSchedule",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connSchedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_connSchedule_connScheduleById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GScheduleInfo"
                        }
                    },
                    "404": {
                        "description": "_connschedule not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _connSchedule",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connSchedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_connSchedule_connScheduleById"
            }
        },
        "/config/ConnectivityService/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateConnectivityService_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _state",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createConnectivityService_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteConnectivityService_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GAdminStatePac"
                        }
                    },
                    "404": {
                        "description": "_state not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveConnectivityService_state_stateById"
            }
        },
        "/config/Path/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: Path",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of Path",
                        "schema": {
                            "$ref": "#/definitions/GPath"
                        },
                        "name": "Path",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Path by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePathPathById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: Path",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of Path",
                        "schema": {
                            "$ref": "#/definitions/GPath"
                        },
                        "name": "Path",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Path by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPathPathById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: Path",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Path by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePathPathById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GPath"
                        }
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: Path",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve Path by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePathPathById"
            }
        },
        "/config/Path/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePathNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of name",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPathNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePathNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Name not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePathNameNameById"
            }
        },
        "/config/Path/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePathLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of label",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPathLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePathLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Label not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePathLabelLabelById"
            }
        },
        "/config/Path/{uuid}/extension/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePathExtensionExtensionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of extension",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        },
                        "name": "extension",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPathExtensionExtensionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePathExtensionExtensionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GNameAndValue"
                        }
                    },
                    "404": {
                        "description": "Extension not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: extension",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueNa",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve extension by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePathExtensionExtensionById"
            }
        },
        "/config/Path/{uuid}/_telink/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_telink not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _telink",
                        "schema": {
                            "$ref": "#/definitions/GTeLink"
                        },
                        "name": "_telink",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _telink by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_telink_telinkById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_telink not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _telink",
                        "schema": {
                            "$ref": "#/definitions/GTeLink"
                        },
                        "name": "_telink",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _telink by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_telink_telinkById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_telink not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _telink by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_telink_telinkById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GTeLink"
                        }
                    },
                    "404": {
                        "description": "_telink not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of local",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _telink by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_telink_telinkById"
            }
        },
        "/config/Path/{uuid}/_routingConstraint/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_routingconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _routingConstraint",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "name": "_routingConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_routingConstraint_routingConstraintById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_routingconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _routingConstraint",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "name": "_routingConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_routingConstraint_routingConstraintById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_routingconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_routingConstraint_routingConstraintById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        }
                    },
                    "404": {
                        "description": "_routingconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_routingConstraint_routingConstraintById"
            }
        },
        "/config/Path/{uuid}/_routingConstraint/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_routingConstraintCostCharacteristicCostCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of costCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_routingConstraintCostCharacteristicCostCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_routingConstraintCostCharacteristicCostCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCostCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Costcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorit",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_routingConstraintCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Path/{uuid}/_routingConstraint/latencyCharacteristic/{latencyValue}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of latencyCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of latencyCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GQueuingLatency"
                        }
                    },
                    "404": {
                        "description": "Latencycharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyVal",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/Path/{uuid}/_routingConstraint/requestedCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of requestedCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_routingConstraintRequestedCapacityRequestedCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of requestedCapacity",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_routingConstraintRequestedCapacityRequestedCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_routingConstraintRequestedCapacityRequestedCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GCapacity"
                        }
                    },
                    "404": {
                        "description": "Requestedcapacity not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_routingConstraintRequestedCapacityRequestedCapacityById"
            }
        },
        "/config/Path/{uuid}/_routingConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_routingConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of riskCharacteristic",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_routingConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_routingConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GRiskCharacteristic"
                        }
                    },
                    "404": {
                        "description": "Riskcharacteristic not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicNa",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_routingConstraintRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Path/{uuid}/_optimizationConstraint/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_optimizationconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _optimizationConstraint",
                        "schema": {
                            "$ref": "#/definitions/GPathOptimizationConstraint"
                        },
                        "name": "_optimizationConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_optimizationConstraint_optimizationConstraintById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_optimizationconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _optimizationConstraint",
                        "schema": {
                            "$ref": "#/definitions/GPathOptimizationConstraint"
                        },
                        "name": "_optimizationConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_optimizationConstraint_optimizationConstraintById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_optimizationconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_optimizationConstraint_optimizationConstraintById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GPathOptimizationConstraint"
                        }
                    },
                    "404": {
                        "description": "_optimizationconstraint not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_optimizationConstraint_optimizationConstraintById"
            }
        },
        "/config/Path/{uuid}/_objectiveFunction/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_objectivefunction not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Update operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _objectiveFunction",
                        "schema": {
                            "$ref": "#/definitions/GPathObjectiveFunction"
                        },
                        "name": "_objectiveFunction",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updatePath_objectiveFunction_objectiveFunctionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_objectivefunction not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Create operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "ID of _objectiveFunction",
                        "schema": {
                            "$ref": "#/definitions/GPathObjectiveFunction"
                        },
                        "name": "_objectiveFunction",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createPath_objectiveFunction_objectiveFunctionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "_objectivefunction not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Delete operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deletePath_objectiveFunction_objectiveFunctionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GPathObjectiveFunction"
                        }
                    },
                    "404": {
                        "description": "_objectivefunction not found"
                    },
                    "400": {
                        "description": "Invalid ID parameter"
                    }
                },
                "description": "Retrieve operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uu",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrievePath_objectiveFunction_objectiveFunctionById"
            }
        }
    },
    "definitions": {
        "GNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_encapTopology": {
                            "type": "string",
                            "x-path": "/Topology/uuid"
                        },
                        "_state": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "_ownedNodeEdgePoint": {
                            "items": {
                                "$ref": "#/definitions/GNodeEdgePoint"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        }
                    }
                }
            ]
        },
        "GPathOptimizationConstraint": {
            "properties": {
                "trafficInterruption": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                }
            }
        },
        "GConnectionPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_connectionEndPoint": {
                            "type": "string",
                            "x-path": "/ConnectionEndPoint/uuid"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GTransferCapacityPac": {
            "properties": {
                "capacityAssignedToUserView": {
                    "items": {
                        "$ref": "#/definitions/GCapacity"
                    },
                    "type": "array",
                    "x-key": "numberingRange"
                },
                "availableCapacity": {
                    "$ref": "#/definitions/GCapacity"
                },
                "totalPotentialCapacity": {
                    "$ref": "#/definitions/GCapacity"
                },
                "capacityInteractionAlgorithm": {
                    "type": "string"
                }
            }
        },
        "GTransferCostPac": {
            "properties": {
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/GCostCharacteristic"
                    },
                    "type": "array",
                    "x-key": "costAlgorithm"
                }
            }
        },
        "GConnectivityConstraint": {
            "properties": {
                "serviceType": {
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ],
                    "type": "string"
                },
                "requestedCapacity": {
                    "$ref": "#/definitions/GCapacity"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/GCostCharacteristic"
                    },
                    "type": "array",
                    "x-key": "costAlgorithm"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/GQueuingLatency"
                    },
                    "type": "array",
                    "x-key": "latencyValue"
                },
                "serviceLevel": {
                    "type": "string"
                },
                "serviceLayer": {
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludePath": {
                    "items": {
                        "type": "string",
                        "x-path": "/Path/uuid"
                    },
                    "type": "array"
                },
                "includePath": {
                    "items": {
                        "type": "string",
                        "x-path": "/Path/uuid"
                    },
                    "type": "array"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/GRiskCharacteristic"
                    },
                    "type": "array",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "GConnection": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "_route": {
                            "items": {
                                "$ref": "#/definitions/GRoute"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_connectionPort": {
                            "items": {
                                "$ref": "#/definitions/GConnectionPort"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_state": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "_node": {
                            "type": "string",
                            "x-path": "/Topology/_node/uuid"
                        }
                    }
                }
            ]
        },
        "GTransferTimingPac": {
            "properties": {
                "queuingLatency": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "wanderCharacteristic": {
                    "type": "string"
                },
                "fixedLatencyCharacteristic": {
                    "type": "string"
                },
                "jitterCharacteristic": {
                    "type": "string"
                }
            }
        },
        "GLinkPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "type": "string",
                            "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GLayerProtocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "_lpSpec": {
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "terminationDirection": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "terminationState": {
                            "enum": [
                                "LP_CAN_NEVER_TERMINATE",
                                "LT_NOT_TERMINATED",
                                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                                "TERMINATED_BIDIRECTIONAL",
                                "LT_PERMENANTLY_TERMINATED",
                                "TERMINATION_STATE_UNKNOWN"
                            ],
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GLink": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_validation": {
                            "$ref": "#/definitions/GValidationPac"
                        },
                        "_lpTransition": {
                            "$ref": "#/definitions/GLayerProtocolTransitionPac"
                        },
                        "_state": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "_linkPort": {
                            "items": {
                                "$ref": "#/definitions/GLinkPort"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_node": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/uuid"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/GTransferCapacityPac"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/GTransferCostPac"
                        },
                        "_riskParameter": {
                            "$ref": "#/definitions/GRiskParameterPac"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/GTransferTimingPac"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/GTransferIntegrityPac"
                        }
                    }
                }
            ]
        },
        "GServiceEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_mappedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "$ref": "#/definitions/GLifecycleStatePac"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/GLayerProtocol"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GTopology": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "$ref": "#/definitions/GNode"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "_link": {
                            "items": {
                                "$ref": "#/definitions/GLink"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "GGlobalClass": {
            "properties": {
                "label": {
                    "items": {
                        "$ref": "#/definitions/GNameAndValue"
                    },
                    "type": "array",
                    "x-key": "valueName"
                },
                "uuid": {
                    "type": "string"
                },
                "extension": {
                    "items": {
                        "$ref": "#/definitions/GNameAndValue"
                    },
                    "type": "array",
                    "x-key": "valueName"
                },
                "name": {
                    "items": {
                        "$ref": "#/definitions/GNameAndValue"
                    },
                    "type": "array",
                    "x-key": "valueName"
                }
            }
        },
        "GTeLink": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/uuid"
                            },
                            "type": "array"
                        },
                        "_link": {
                            "type": "string",
                            "x-path": "/Topology/_link/uuid"
                        },
                        "_linkPort": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_link/_linkPort/localId"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "GNodeEdgePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/GLayerProtocol"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "GLocalClass": {
            "properties": {
                "localId": {
                    "type": "string"
                }
            }
        },
        "GPath": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_routingConstraint": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "_telink": {
                            "items": {
                                "$ref": "#/definitions/GTeLink"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "_objectiveFunction": {
                            "$ref": "#/definitions/GPathObjectiveFunction"
                        },
                        "_optimizationConstraint": {
                            "$ref": "#/definitions/GPathOptimizationConstraint"
                        }
                    }
                }
            ]
        },
        "GPathObjectiveFunction": {
            "properties": {
                "linkUtilization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "costOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "bandwidthOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "concurrentPaths": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                },
                "resourceSharing": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string"
                }
            }
        },
        "GScheduleInfo": {
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "GLifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                }
            }
        },
        "GTransferIntegrityPac": {
            "properties": {
                "errorCharacteristic": {
                    "type": "string"
                },
                "repeatDeliveryCharacteristic": {
                    "type": "string"
                },
                "lossCharacteristic": {
                    "type": "string"
                },
                "unavailableTimeCharacteristic": {
                    "type": "string"
                },
                "deliveryOrderCharacteristic": {
                    "type": "string"
                },
                "serverIntegrityProcessCharacteristic": {
                    "type": "string"
                }
            }
        },
        "GValidationPac": {
            "properties": {
                "validationMechanism": {
                    "items": {
                        "$ref": "#/definitions/GValidationMechanism"
                    },
                    "type": "array",
                    "x-key": "validationRobustness"
                }
            }
        },
        "GConnectionEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_serverNodeEdgePoint": {
                            "type": "string",
                            "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "_state": {
                            "$ref": "#/definitions/GOperationalStatePac"
                        },
                        "_peerConnectionEndPoint": {
                            "type": "string",
                            "x-path": "/ConnectionEndPoint/uuid"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/GLayerProtocol"
                            },
                            "type": "array",
                            "x-key": "localId"
                        }
                    }
                }
            ]
        },
        "GAdminStatePac": {
            "properties": {
                "administrativeState": {
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ],
                    "type": "string"
                },
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string"
                },
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                }
            }
        },
        "GConnectivityService": {
            "allOf": [
                {
                    "$ref": "#/definitions/GGlobalClass"
                },
                {
                    "properties": {
                        "_connection": {
                            "items": {
                                "$ref": "#/definitions/GConnection"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        },
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/GServicePort"
                            },
                            "type": "array",
                            "x-key": "localId"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "_state": {
                            "$ref": "#/definitions/GAdminStatePac"
                        },
                        "_connConstraints": {
                            "$ref": "#/definitions/GConnectivityConstraint"
                        },
                        "_connSchedule": {
                            "$ref": "#/definitions/GScheduleInfo"
                        }
                    }
                }
            ]
        },
        "GRiskParameterPac": {
            "properties": {
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/GRiskCharacteristic"
                    },
                    "type": "array",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "GLayerProtocolTransitionPac": {
            "properties": {
                "_nodeEdgePoint": {
                    "items": {
                        "type": "string",
                        "x-path": "/Topology/_node/_ownedNodeEdgePoint/uuid"
                    },
                    "type": "array"
                },
                "transitionedLayerProtocolName": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "GRoute": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "_lowerConnection": {
                            "items": {
                                "type": "string",
                                "x-path": "/ConnectivityService/_connection/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "GServicePort": {
            "allOf": [
                {
                    "$ref": "#/definitions/GLocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string"
                        },
                        "_serviceEndPoint": {
                            "type": "string",
                            "x-path": "/ServiceEndPoint/uuid"
                        }
                    }
                }
            ]
        },
        "GOperationalStatePac": {
            "properties": {
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string"
                },
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string"
                }
            }
        },
        "GNameAndValue": {
            "properties": {
                "_nameAndValueAuthorityRef": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueName": {
                    "type": "string"
                }
            }
        },
        "GCapacity": {
            "properties": {
                "totalSize": {
                    "type": "string"
                },
                "maximumUsageInstances": {
                    "type": "string"
                },
                "numberingRange": {
                    "type": "string"
                },
                "maximumUsageSize": {
                    "type": "string"
                }
            }
        },
        "GCostCharacteristic": {
            "properties": {
                "costName": {
                    "type": "string"
                },
                "costAlgorithm": {
                    "type": "string"
                },
                "costValue": {
                    "type": "string"
                }
            }
        },
        "GQueuingLatency": {
            "properties": {
                "latencyValue": {
                    "type": "string"
                },
                "trafficPropertyName": {
                    "type": "string"
                }
            }
        },
        "GRiskCharacteristic": {
            "properties": {
                "riskIdentifierList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "riskCharacteristicName": {
                    "type": "string"
                }
            }
        },
        "GValidationMechanism": {
            "properties": {
                "layerProtocolAdjacencyValidated": {
                    "type": "string"
                },
                "validationRobustness": {
                    "type": "string"
                },
                "validationMechanism": {
                    "type": "string"
                }
            }
        }
    }
}