module tapi-oam {
    namespace "urn:onf:params:xml:ns:yang:tapi-oam";
    prefix tapi-oam;
    import tapi-common {
        prefix tapi-common;
    }
    import tapi-connectivity {
        prefix tapi-connectivity;
    }
    organization "Open Networking Foundation (ONF) / Open Transport Working Group(OTWG) / Transport API (TAPI) Project";
    contact "
        WG Web: TAPI SDK Project <http://opensourcesdn.org/projects/project-snowmass/>
        WG List: TAPI Discussion list <mailto: transport-api@login.opennetworking.org>,
        WG Chair: Karthik Sethuraman <mailto:karthik.sethuraman@necam.com>,
        Editor: Ricard Vilalta <mailto:ricard.vilalta@cttc.es>";
    description "none";
    revision 2017-05-31 {
        description "TAPI SDK 2.0-alpha";
        reference "ONF-TR-527, ONF-TR-512, ONF-TR-531, RFC 6020 and RFC 6087";
    }
    augment "/tapi-common:context" {
        uses oam-context-g;
        description "Augments the base TAPI Context with OamService information";
    }
    augment "/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:connection-end-point/tapi-connectivity:layer-protocol" {
        uses mep-mip-reference-g;
        description "none";
    }
    /***********************
    * package object-classes
    **********************/ 
        grouping mep-g {
            leaf-list me {
                type leafref {
                    path '/tapi-common:context/tapi-oam:meg/tapi-oam:me/tapi-oam:local-id';
                }
                config false;
                description "none";
            }
            container mep-bidirectional {
                config false;
                uses mep-bidirectional-pac-g;
                description "none";
            }
            container mep-sink {
                config false;
                uses mep-sink-pac-g;
                description "none";
            }
            container mep-source {
                config false;
                uses mep-source-pac-g;
                description "none";
            }
            list on-demand-measurement-job {
                config false;
                uses on-demand-measurement-job-g;
                description "none";
            }
            list pro-active-measurement-job {
                config false;
                uses pro-active-measurement-job-g;
                description "none";
            }
            leaf meg-identifier {
                type string;
                default "true";
                config false;
                description "none";
            }
            leaf admin-state {
                type tapi-common:administrative-state;
                config false;
                description "none";
            }
            uses tapi-common:local-class-g;
            description "none";
        }
        grouping mep-source-pac-g {
            leaf mep-identifier {
                type string;
                default "true";
                description "none";
            }
            description "none";
        }
        grouping mep-sink-pac-g {
            leaf-list peer-mep-ref-list {
                type string;
                min-elements 1;
                description "none";
            }
            description "none";
        }
        grouping mep-bidirectional-pac-g {
            description "none";
        }
        grouping on-demand-measurement-job-g {
            description "none";
        }
        grouping pro-active-measurement-job-g {
            description "none";
        }
        grouping meg-g {
            list me {
                key 'local-id';
                config false;
                uses me-g;
                description "none";
            }
            leaf meg-level {
                type uint64;
                config false;
                description "none";
            }
            uses tapi-common:resource-spec-g;
            description "none";
        }
        grouping me-g {
            leaf-list mep {
                type leafref {
                    path '/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:connection-end-point/tapi-connectivity:layer-protocol/tapi-oam:mep/tapi-oam:local-id';
                }
                config false;
                max-elements 2;
                description "none";
            }
            leaf-list mip {
                type leafref {
                    path '/tapi-common:context/tapi-connectivity:connection/tapi-connectivity:connection-end-point/tapi-connectivity:layer-protocol/tapi-oam:mip/tapi-oam:local-id';
                }
                config false;
                description "none";
            }
            uses tapi-common:local-class-g;
            description "none";
        }
        grouping mip-g {
            leaf-list me {
                type leafref {
                    path '/tapi-common:context/tapi-oam:meg/tapi-oam:me/tapi-oam:local-id';
                }
                config false;
                description "none";
            }
            uses tapi-common:local-class-g;
            description "none";
        }
        grouping oam-service-g {
            leaf-list meg {
                type leafref {
                    path '/tapi-common:context/tapi-oam:meg/tapi-oam:uuid';
                }
                config false;
                description "none";
            }
            list end-point {
                key 'local-id';
                min-elements 2;
                uses oam-service-end-point-g;
                description "none";
            }
            uses tapi-common:service-spec-g;
            description "none";
        }
        grouping oam-context-g {
            list oam-service {
                key 'uuid';
                uses oam-service-g;
                description "none";
            }
            list meg {
                key 'uuid';
                config false;
                uses meg-g;
                description "none";
            }
            description "none";
        }
        grouping mep-mip-reference-g {
            list mip {
                key 'local-id';
                config false;
                uses mip-g;
                description "none";
            }
            list mep {
                key 'local-id';
                config false;
                uses mep-g;
                description "none";
            }
            description "none";
        }
        grouping oam-service-end-point-g {
            list layer-protocol {
                key 'local-id';
                min-elements 1;
                uses tapi-common:layer-protocol-g;
                description "none";
            }
            leaf service-interface-point {
                type leafref {
                    path '/tapi-common:context/tapi-common:service-interface-point/tapi-common:uuid';
                }
                config false;
                description "none";
            }
            leaf direction {
                type tapi-common:port-direction;
                config false;
                description "none";
            }
            leaf role {
                type tapi-common:port-role;
                config false;
                description "none";
            }
            uses tapi-common:local-class-g;
            description "none";
        }

    /***********************
    * package interfaces
    **********************/ 
        rpc abort-measurement-job {
            description "none";
        }
        rpc disable-pro-active-measurement-job {
            description "none";
        }
        rpc enable-pro-active-measurement-job {
            description "none";
        }
        rpc establish-measurement-job {
            description "none";
        }
        rpc get-all-contained-measurement-jobs {
            description "none";
        }
        rpc terminate-measurement-job {
            description "none";
        }
        rpc create-meg {
            description "none";
        }
        rpc delete-meg {
            description "none";
        }
        rpc get-all-contained-megs {
            description "none";
        }
        rpc modify-meg {
            description "none";
        }

}
