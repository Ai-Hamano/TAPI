{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "Tapi-ObjectClasses API generated from Tapi-ObjectClasses.yang",
        "title": "Tapi-ObjectClasses API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/Context/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPointLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_serviceEndPoint/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_ltpSpecData/": {
            "get": {
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_ltpSpecData_ltpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_layerProtocol/": {
            "get": {
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_layerProtocol",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_lpSpecData_lpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_ltpSpecData/": {
            "get": {
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_ltpSpecData_ltpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_layerProtocol/": {
            "get": {
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_layerProtocol",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_lpSpecData_lpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_connectionEndPoint/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPoint_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LifecycleStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPointNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_serviceEndPoint/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_serviceEndPointLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/": {
            "get": {
                "summary": "Retrieve _connectivityService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _connectivityService",
                "parameters": [],
                "operationId": "retrieveContext_connectivityService_connectivityService",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_connectivityService/{uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/": {
            "get": {
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityServiceLabelById",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_connectivityService/{uuid}/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connectionLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_connectionPort/": {
            "get": {
                "summary": "Retrieve _connectionPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _connectionPort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connection_connectionPort_connectionPort",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConnectionPort"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_route/": {
            "get": {
                "summary": "Retrieve _route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _route",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connection_route_route",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Route"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connection_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connectionNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connectionLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_servicePort/": {
            "get": {
                "summary": "Retrieve _servicePort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_servicePort_servicePort",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_connectivityService/{uuid}/_servicePort/{localId}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "in": "body",
                        "name": "_servicePort",
                        "description": "_servicePortbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_connectivityService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_connectivityService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "in": "body",
                        "name": "_servicePort",
                        "description": "_servicePortbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_connectivityService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/": {
            "get": {
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsLatencyCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/requestedCapacity/": {
            "get": {
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/costCharacteristic/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsCostCharacteristicCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/riskCharacteristic/": {
            "get": {
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsRiskCharacteristicRiskCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/": {
            "get": {
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_schedule/": {
            "put": {
                "summary": "Update _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "in": "body",
                        "name": "_schedule",
                        "description": "_schedulebody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_connectivityService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_schedule_schedule",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_connectivityService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "in": "body",
                        "name": "_schedule",
                        "description": "_schedulebody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_connectivityService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/_state/": {
            "put": {
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "in": "body",
                        "name": "_state",
                        "description": "_statebody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_connectivityService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityService_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_connectivityService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "in": "body",
                        "name": "_state",
                        "description": "_statebody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_connectivityService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityServiceNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_connectivityService/{uuid}/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_connectivityServiceLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/": {
            "get": {
                "summary": "Retrieve _vnwService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _vnwService",
                "parameters": [],
                "operationId": "retrieveContext_vnwService_vnwService",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/": {
            "get": {
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwServiceLabelById",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_servicePort/": {
            "get": {
                "summary": "Retrieve _servicePort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_servicePort_servicePort",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/_servicePort/{localId}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "in": "body",
                        "name": "_servicePort",
                        "description": "_servicePortbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "in": "body",
                        "name": "_servicePort",
                        "description": "_servicePortbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_servicePort_servicePortById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/": {
            "put": {
                "summary": "Update _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "in": "body",
                        "name": "_vnwConstraint",
                        "description": "_vnwConstraintbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_vnwConstraint_vnwConstraintById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _vnwConstraint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraint_vnwConstraint",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_vnwConstraint_vnwConstraintById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "in": "body",
                        "name": "_vnwConstraint",
                        "description": "_vnwConstraintbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_vnwConstraint_vnwConstraintById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/requestedCapacity/": {
            "put": {
                "summary": "Update requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "in": "body",
                        "name": "requestedCapacity",
                        "description": "requestedCapacitybody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "in": "body",
                        "name": "requestedCapacity",
                        "description": "requestedCapacitybody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/{costAlgorithm}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "costAlgorithm",
                        "description": "ID of costAlgorithm",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "in": "body",
                        "name": "costCharacteristic",
                        "description": "costCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "costAlgorithm",
                        "description": "ID of costAlgorithm",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "costAlgorithm",
                        "description": "ID of costAlgorithm",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "costAlgorithm",
                        "description": "ID of costAlgorithm",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "in": "body",
                        "name": "costCharacteristic",
                        "description": "costCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/": {
            "get": {
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/{riskCharacteristicName}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "put": {
                "summary": "Update riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "riskCharacteristicName",
                        "description": "ID of riskCharacteristicName",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "in": "body",
                        "name": "riskCharacteristic",
                        "description": "riskCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "riskCharacteristicName",
                        "description": "ID of riskCharacteristicName",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "riskCharacteristicName",
                        "description": "ID of riskCharacteristicName",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "riskCharacteristicName",
                        "description": "ID of riskCharacteristicName",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "in": "body",
                        "name": "riskCharacteristic",
                        "description": "riskCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/": {
            "get": {
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/{latencyValue}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/{latencyValue}/": {
            "put": {
                "summary": "Update latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "latencyValue",
                        "description": "ID of latencyValue",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "in": "body",
                        "name": "latencyCharacteristic",
                        "description": "latencyCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "latencyValue",
                        "description": "ID of latencyValue",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "latencyValue",
                        "description": "ID of latencyValue",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "latencyValue",
                        "description": "ID of latencyValue",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "in": "body",
                        "name": "latencyCharacteristic",
                        "description": "latencyCharacteristicbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_schedule/": {
            "put": {
                "summary": "Update _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "in": "body",
                        "name": "_schedule",
                        "description": "_schedulebody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_schedule_schedule",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _schedule",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "in": "body",
                        "name": "_schedule",
                        "description": "_schedulebody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_schedule_scheduleById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/_state/": {
            "put": {
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "in": "body",
                        "name": "_state",
                        "description": "_statebody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_vnwService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwService_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_vnwService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "in": "body",
                        "name": "_state",
                        "description": "_statebody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_vnwService_state_stateById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwServiceNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_vnwService/{uuid}/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_vnwServiceLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notifSubscription/": {
            "get": {
                "summary": "Retrieve _notifSubscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _notifSubscription",
                "parameters": [],
                "operationId": "retrieveContext_notifSubscription_notifSubscription",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_notifSubscription/{uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notifSubscription/{uuid}/": {
            "get": {
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_notifSubscriptionLabelById",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_notifSubscription/{uuid}/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_subscriptionFilter/": {
            "put": {
                "summary": "Update _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "in": "body",
                        "name": "_subscriptionFilter",
                        "description": "_subscriptionFilterbody object",
                        "required": true
                    }
                ],
                "operationId": "updateContext_notifSubscription_subscriptionFilter_subscriptionFilterById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve _subscriptionFilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_notifSubscription_subscriptionFilter_subscriptionFilter",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "deleteContext_notifSubscription_subscriptionFilter_subscriptionFilterById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            },
            "post": {
                "summary": "Create _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "in": "body",
                        "name": "_subscriptionFilter",
                        "description": "_subscriptionFilterbody object",
                        "required": true
                    }
                ],
                "operationId": "createContext_notifSubscription_subscriptionFilter_subscriptionFilterById",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notifSubscription/{uuid}/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_notifSubscriptionNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notifSubscription/{uuid}/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieveContext_notifSubscriptionLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topologyLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_nodeLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_node/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_ltpSpecData/": {
            "get": {
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ltpSpecData_ltpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_layerProtocol/": {
            "get": {
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocol",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_layerProtocol/_lpSpecData/": {
            "get": {
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_lpSpecData_lpSpecData",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_ownedNodeEdgePoint/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/": {
            "get": {
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserView",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_transferCapacity/capacityAssignedToUserView/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "summary": "Retrieve totalPotentialCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/availableCapacity/": {
            "get": {
                "summary": "Retrieve availableCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCapacityAvailableCapacityAvailableCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCost/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_transferCost/costCharacteristic/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferCost/costCharacteristic/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferIntegrity/": {
            "get": {
                "summary": "Retrieve _transferIntegrity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferIntegrity_transferIntegrity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferTiming/": {
            "get": {
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferTimingQueuingLatency",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_transferTiming/queuingLatency/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/_transferTiming/queuingLatency/": {
            "get": {
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [],
                "operationId": "retrieveContext_topology_node_transferTimingQueuingLatencyQueuingLatency",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_topology_nodeNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_node/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_nodeLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_linkLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_linkPort/": {
            "get": {
                "summary": "Retrieve _linkPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _linkPort",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_linkPort_linkPort",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LinkPort"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_state/": {
            "get": {
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _state",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_state_state",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/": {
            "get": {
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserView",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/_transferCapacity/capacityAssignedToUserView/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "summary": "Retrieve totalPotentialCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/availableCapacity/": {
            "get": {
                "summary": "Retrieve availableCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCapacityAvailableCapacityAvailableCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCost/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/_transferCost/costCharacteristic/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferCost/costCharacteristic/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferIntegrity/": {
            "get": {
                "summary": "Retrieve _transferIntegrity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferIntegrity_transferIntegrity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferTiming/": {
            "get": {
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferTimingQueuingLatency",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/_transferTiming/queuingLatency/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_transferTiming/queuingLatency/": {
            "get": {
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_transferTimingQueuingLatencyQueuingLatency",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_riskParameter/": {
            "get": {
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/_riskParameter/riskCharacteristic/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_riskParameter/riskCharacteristic/": {
            "get": {
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_validation/": {
            "get": {
                "summary": "Retrieve validationMechanism",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: validationMechanism",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_validationValidationMechanism",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_topology/_link/_validation/validationMechanism/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_validation/validationMechanism/": {
            "get": {
                "summary": "Retrieve validationMechanism",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: validationMechanism",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanism",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ValidationMechanism"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/_lpTransition/": {
            "get": {
                "summary": "Retrieve _lpTransition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _lpTransition",
                "parameters": [],
                "operationId": "retrieveContext_topology_link_lpTransition_lpTransition",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_topology_linkNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/_link/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topology_linkLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_topologyNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_topology/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_topologyLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_pathLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_path/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_telink/": {
            "get": {
                "summary": "Retrieve _telink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _telink",
                "parameters": [],
                "operationId": "retrieveContext_path_telink_telink",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TeLink"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_routingConstraint/": {
            "get": {
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_path_routingConstraintLatencyCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_path/_routingConstraint/latencyCharacteristic/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_routingConstraint/requestedCapacity/": {
            "get": {
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [],
                "operationId": "retrieveContext_path_routingConstraintRequestedCapacityRequestedCapacity",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_routingConstraint/costCharacteristic/": {
            "get": {
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_path_routingConstraintCostCharacteristicCostCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_routingConstraint/riskCharacteristic/": {
            "get": {
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_path_routingConstraintRiskCharacteristicRiskCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_routingConstraint/latencyCharacteristic/": {
            "get": {
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [],
                "operationId": "retrieveContext_path_routingConstraintLatencyCharacteristicLatencyCharacteristic",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_optimizationConstraint/": {
            "get": {
                "summary": "Retrieve _optimizationConstraint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _optimizationConstraint",
                "parameters": [],
                "operationId": "retrieveContext_path_optimizationConstraint_optimizationConstraint",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/_objectiveFunction/": {
            "get": {
                "summary": "Retrieve _objectiveFunction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: _objectiveFunction",
                "parameters": [],
                "operationId": "retrieveContext_path_objectiveFunction_objectiveFunction",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_pathNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_path/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_pathLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_notificationLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/Context/_notification/label/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/targetObjectName/": {
            "get": {
                "summary": "Retrieve targetObjectName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: targetObjectName",
                "parameters": [],
                "operationId": "retrieveContext_notificationTargetObjectNameTargetObjectName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/changedAttributes/": {
            "get": {
                "summary": "Retrieve changedAttributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: changedAttributes",
                "parameters": [],
                "operationId": "retrieveContext_notificationChangedAttributesChangedAttributes",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/NameAndValueChange"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/additionalInfo/": {
            "get": {
                "summary": "Retrieve additionalInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: additionalInfo",
                "parameters": [],
                "operationId": "retrieveContext_notificationAdditionalInfoAdditionalInfo",
                "responses": {
                    "200": {
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContext_notificationNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/_notification/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContext_notificationLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/name/": {
            "get": {
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "operationId": "retrieveContextNameName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        },
        "/config/Context/label/": {
            "get": {
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "operationId": "retrieveContextLabelLabel",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "LayerProtocolTransitionPac": {
            "properties": {
                "_nodeEdgePoint": {
                    "items": {
                        "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                        "type": "string",
                        "description": "Lists the LTPs that define the layer protocol transition of the transitional link."
                    },
                    "type": "array"
                },
                "transitionedLayerProtocolName": {
                    "items": {
                        "type": "string",
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role."
                    },
                    "type": "array"
                }
            },
            "description": "Relevant for a Link that is formed by abstracting one or more LTPs (in a stack) to focus on the flow and deemphasize the protocol transformation. \nThis abstraction is relevant when considering multi-layer routing. \nThe layer protocols of the LTP and the order of their application to the signal is still relevant and need to be accounted for. This is derived from the LTP spec details.\nThis Pac provides the relevant abstractions of the LTPs and provides the necessary association to the LTPs involved.\nLinks that included details in this Pac are often referred to as Transitional Links."
        },
        "ConnectionPort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_connectionEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ]
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                        }
                    }
                }
            ]
        },
        "ConnectivityServicePort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ]
                        },
                        "serviceLayer": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                        },
                        "_serviceEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/uuid",
                            "type": "string",
                            "description": "none"
                        }
                    }
                }
            ]
        },
        "NodeEdgePoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    }
                }
            ]
        },
        "RiskParameterPac": {
            "properties": {
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration."
                }
            },
            "description": "The risk characteristics of a TopologicalEntity come directly from the underlying physical realization. \nThe risk characteristics propagate from the physical realization to the client and from the server layer to the client layer, this propagation may be modified by protection.\nA TopologicalEntity may suffer degradation or failure as a result of a problem in a part of the underlying realization.\nThe realization can be partitioned into segments which have some relevant common failure modes.\nThere is a risk of failure/degradation of each segment of the underlying realization.\nEach segment is a part of a larger physical/geographical unit that behaves as one with respect to failure (i.e. a failure will have a high probability of impacting the whole unit (e.g. all cables in the same duct).\nDisruptions to that larger physical/geographical unit will impact (cause failure/errors to) all TopologicalEntities that use any part of that larger physical/geographical entity.\nAny TopologicalEntity that uses any part of that larger physical/geographical unit will suffer impact and hence each TopologicalEntity shares risk.\nThe identifier of each physical/geographical unit that is involved in the realization of each segment of a Topological entity can be listed in the RiskParameter_Pac of that TopologicalEntity.\nA segment has one or more risk characteristic.\nShared risk between two TopologicalEntities compromises the integrity of any solution that use one of those TopologicalEntity as a backup for the other.\nWhere two TopologicalEntities have a common risk characteristic they have an elevated probability of failing simultaneously compared to two TopologicalEntities that do not share risk characteristics."
        },
        "PathOptimizationConstraint": {
            "properties": {
                "trafficInterruption": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                }
            },
            "description": "none"
        },
        "TransferCapacityPac": {
            "properties": {
                "totalPotentialCapacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                    "$ref": "#/definitions/Capacity"
                },
                "capacityAssignedToUserView": {
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    },
                    "type": "array",
                    "description": "Capacity already assigned"
                },
                "availableCapacity": {
                    "description": "Capacity available to be assigned.",
                    "$ref": "#/definitions/Capacity"
                },
                "capacityInteractionAlgorithm": {
                    "type": "string",
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)"
                }
            },
            "description": "The TopologicalEntity derives capacity from the underlying realization. \nA TopologicalEntity may be an abstraction and virtualization of a subset of the underlying capability offered in a view or may be directly reflecting the underlying realization.\nA TopologicalEntity may be directly used in the view or may be assigned to another view for use.\nThe clients supported by a multi-layer TopologicalEntity may interact such that the resources used by one client may impact those available to another. This is derived from the LTP spec details.\nRepresents the capacity available to user (client) along with client interaction and usage. \nA TopologicalEntity may reflect one or more client protocols and one or more members for each profile."
        },
        "TransferTimingPac": {
            "properties": {
                "fixedLatencyCharacteristic": {
                    "type": "string",
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity"
                },
                "jitterCharacteristic": {
                    "type": "string",
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                },
                "queuingLatency": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic."
                },
                "wanderCharacteristic": {
                    "type": "string",
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                }
            },
            "description": "A TopologicalEntity will suffer effects from the underlying physical realization related to the timing of the information passed by the TopologicalEntity."
        },
        "Path": {
            "description": "Path is described by an ordered list of TE Links. A TE Link is defined by a pair of Node/NodeEdgePoint IDs. A Connection is realized by concatenating link resources (associated with a Link) and the lower-level connections (cross-connections) in the different nodes",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_telink": {
                            "items": {
                                "$ref": "#/definitions/TeLink"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_routingConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_objectiveFunction": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "_optimizationConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        }
                    }
                }
            ]
        },
        "VirtualNetworkServicePort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "role": {
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ",
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ]
                        },
                        "serviceLayer": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the EndPoint.",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                        },
                        "_serviceEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/uuid",
                            "type": "string",
                            "description": "none"
                        }
                    }
                }
            ]
        },
        "ValidationPac": {
            "properties": {
                "validationMechanism": {
                    "items": {
                        "$ref": "#/definitions/ValidationMechanism"
                    },
                    "type": "array",
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity."
                }
            },
            "description": "Validation covers the various adjacenct discovery and reachability verification protocols. Also may cover Information source and degree of integrity."
        },
        "Connection": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "layerProtocolName": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "_node": {
                            "x-path": "/Context/_topology/_node/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "direction": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "_route": {
                            "items": {
                                "$ref": "#/definitions/Route"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_connectionPort": {
                            "items": {
                                "$ref": "#/definitions/ConnectionPort"
                            },
                            "type": "array",
                            "description": "none"
                        }
                    }
                }
            ]
        },
        "LocalClass": {
            "properties": {
                "localId": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "ConnectionEndPoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_serverNodeEdgePoint": {
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "_peerConnectionEndPoint": {
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "Route": {
            "description": "The FC Route (FcRoute) object class models the individual routes of an FC. \nThe route of an FC object is represented by a list of FCs at a lower level. \nNote that depending on the service supported by an FC, an the FC can have multiple routes.",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_lowerConnection": {
                            "items": {
                                "x-path": "/Context/_connectivityService/_connection/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "TransferCostPac": {
            "properties": {
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity."
                }
            },
            "description": "The cost characteristics of a TopologicalEntity not necessarily correlated to the cost of the underlying physical realization. \nThey may be quite specific to the individual TopologicalEntity e.g. opportunity cost. Relates to layer capacity\nThere may be many perspectives from which cost may be considered  for a particular TopologicalEntity and hence many specific costs and potentially cost algorithms. \nUsing an entity will incur a cost. "
        },
        "ServiceEndPoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_mappedNodeEdgePoint": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/LifecycleStatePac"
                        },
                        "_connectionEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ConnectionEndPoint"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "direction": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        }
                    }
                }
            ]
        },
        "GlobalClass": {
            "properties": {
                "label": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state."
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                },
                "name": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity."
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "PathObjectiveFunction": {
            "properties": {
                "concurrentPaths": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                },
                "costOptimization": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                },
                "bandwidthOptimization": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                },
                "linkUtilization": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                },
                "resourceSharing": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ]
                }
            },
            "description": "none"
        },
        "VirtualNetworkService": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_servicePort": {
                            "x-key": "localId",
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkServicePort"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_schedule": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "layerProtocolName": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ]
                            },
                            "type": "array"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_vnwConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "_topology": {
                            "x-path": "/Context/_topology/uuid",
                            "type": "string",
                            "description": "none"
                        }
                    }
                }
            ]
        },
        "LinkPort": {
            "description": "The association of the Link to LTPs is made via LinkEnd.\nThe LinkEnd object class models the access to the Link function. \nThe traffic forwarding between the associated LinkEnds of the Link depends upon the type of Link.  \nIn cases where there is resilience the LinkEnd may convey the resilience role of the access to the Link. \nThe Link can be considered as a component and the LinkEnd as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "role": {
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. ",
                            "type": "string",
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ]
                        },
                        "_nodeEdgePoint": {
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "direction": {
                            "description": "The orientation of defined flow at the LinkEnd.",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ]
                        }
                    }
                }
            ]
        },
        "LifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                }
            },
            "description": "Provides state attributes for an entity that has lifeccycle aspects only."
        },
        "LayerProtocol": {
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. ",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationState": {
                            "description": "Indicates whether the layer is terminated and if so how.",
                            "type": "string",
                            "enum": [
                                "LP_CAN_NEVER_TERMINATE",
                                "LT_NOT_TERMINATED",
                                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                                "TERMINATED_BIDIRECTIONAL",
                                "LT_PERMENANTLY_TERMINATED",
                                "TERMINATION_STATE_UNKNOWN"
                            ]
                        },
                        "_lpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        },
                        "layerProtocolName": {
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity.",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "terminationDirection": {
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        }
                    }
                }
            ]
        },
        "TransferIntegrityPac": {
            "properties": {
                "lossCharacteristic": {
                    "type": "string",
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips)."
                },
                "deliveryOrderCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order."
                },
                "errorCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded."
                },
                "unavailableTimeCharacteristic": {
                    "type": "string",
                    "description": "Describes the duration for which there may be no valid signal propagated."
                },
                "repeatDeliveryCharacteristic": {
                    "type": "string",
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay."
                },
                "serverIntegrityProcessCharacteristic": {
                    "type": "string",
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity."
                }
            },
            "description": "Transfer intergrity characteristic covers expected/specified/acceptable characteristic of degradation of the transfered signal.\nIt includes all aspects of possible degradation of signal content as well as any damage of any form to the total TopologicalEntity and to the carried signals.\nNote that the statement is of total impact to the TopologicalEntity so any partial usage of the TopologicalEntity (e.g. a signal that does not use full capacity) will only suffer its portion of the impact."
        },
        "Node": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_transferCost": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_transferIntegrity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "_encapTopology": {
                            "x-path": "/Context/_topology/uuid",
                            "type": "string",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ]
                            },
                            "type": "array"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_ownedNodeEdgePoint": {
                            "items": {
                                "$ref": "#/definitions/NodeEdgePoint"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_transferTiming": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        }
                    }
                }
            ]
        },
        "Topology": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "$ref": "#/definitions/Node"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_link": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ]
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "ConnectivityConstraint": {
            "properties": {
                "includePath": {
                    "items": {
                        "x-path": "/Context/_path/uuid",
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "serviceLevel": {
                    "type": "string",
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability"
                },
                "serviceType": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ]
                },
                "excludePath": {
                    "items": {
                        "x-path": "/Context/_path/uuid",
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic."
                },
                "avoidTopology": {
                    "items": {
                        "x-path": "/Context/_topology/uuid",
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "includeTopology": {
                    "items": {
                        "x-path": "/Context/_topology/uuid",
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "serviceLayer": {
                    "items": {
                        "description": "none",
                        "type": "string",
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ]
                    },
                    "type": "array"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration."
                },
                "requestedCapacity": {
                    "description": "none",
                    "$ref": "#/definitions/Capacity"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity."
                }
            },
            "description": "none"
        },
        "TimeRange": {
            "properties": {
                "startTime": {
                    "type": "string",
                    "description": "none"
                },
                "endTime": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "none"
        },
        "NotificationSubscriptionService": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "subscriptionState": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "SUSPENDED",
                                "ACTIVE"
                            ]
                        },
                        "_subscriptionFilter": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "_notification": {
                            "items": {
                                "x-path": "/Context/_notification/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "supportedNotificationTypes": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "OBJECT_CREATION",
                                    "OBJECT_DELETION",
                                    "ATTRIBUTE_VALUE_CHANGE",
                                    "STATE_CHANGE"
                                ]
                            },
                            "type": "array"
                        },
                        "supportedObjectTypes": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "TOPOLOGY",
                                    "NODE",
                                    "LINK",
                                    "CONNECTION",
                                    "PATH",
                                    "CONNECTIVITY_SERVICE",
                                    "VIRTUAL_NETWORK_SERVICE",
                                    "PATH_COMPUTATION_SERVICE",
                                    "NODE_EDGE_POINT",
                                    "SERVICE_END_POINT",
                                    "CONNECTION_END_POINT"
                                ]
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "OperationalStatePac": {
            "properties": {
                "lifecycleState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                },
                "operationalState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                }
            },
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects."
        },
        "VirtualNetworkConstraint": {
            "properties": {
                "serviceLevel": {
                    "type": "string",
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability"
                },
                "serviceType": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ]
                },
                "latencyCharacteristic": {
                    "x-key": "latencyValue",
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic."
                },
                "serviceLayer": {
                    "items": {
                        "description": "none",
                        "type": "string",
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ]
                    },
                    "type": "array"
                },
                "riskCharacteristic": {
                    "x-key": "riskCharacteristicName",
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration."
                },
                "requestedCapacity": {
                    "description": "none",
                    "$ref": "#/definitions/Capacity"
                },
                "costCharacteristic": {
                    "x-key": "costAlgorithm",
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity."
                }
            },
            "description": "none"
        },
        "AdminStatePac": {
            "properties": {
                "lifecycleState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ]
                },
                "administrativeState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ]
                },
                "operationalState": {
                    "description": "none",
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ]
                }
            },
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects."
        },
        "SubscriptionFilter": {
            "properties": {
                "requestedObjectIdentifier": {
                    "items": {
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "requestedLayerProtocols": {
                    "items": {
                        "description": "none",
                        "type": "string",
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ]
                    },
                    "type": "array"
                },
                "requestedObjectTypes": {
                    "items": {
                        "description": "none",
                        "type": "string",
                        "enum": [
                            "TOPOLOGY",
                            "NODE",
                            "LINK",
                            "CONNECTION",
                            "PATH",
                            "CONNECTIVITY_SERVICE",
                            "VIRTUAL_NETWORK_SERVICE",
                            "PATH_COMPUTATION_SERVICE",
                            "NODE_EDGE_POINT",
                            "SERVICE_END_POINT",
                            "CONNECTION_END_POINT"
                        ]
                    },
                    "type": "array"
                },
                "requestedNotificationTypes": {
                    "items": {
                        "description": "none",
                        "type": "string",
                        "enum": [
                            "OBJECT_CREATION",
                            "OBJECT_DELETION",
                            "ATTRIBUTE_VALUE_CHANGE",
                            "STATE_CHANGE"
                        ]
                    },
                    "type": "array"
                }
            },
            "description": "none"
        },
        "Notification": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "additionalText": {
                            "type": "string",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "additionalInfo": {
                            "description": "none",
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "targetObjectIdentifier": {
                            "type": "string",
                            "description": "none"
                        },
                        "targetObjectName": {
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "notificationType": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OBJECT_CREATION",
                                "OBJECT_DELETION",
                                "ATTRIBUTE_VALUE_CHANGE",
                                "STATE_CHANGE"
                            ]
                        },
                        "sourceIndicator": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "RESOURCE_OPERATION",
                                "MANAGEMENT_OPERATION",
                                "UNKNOWN"
                            ]
                        },
                        "eventTimeStamp": {
                            "type": "string",
                            "description": "none"
                        },
                        "targetObjectType": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "TOPOLOGY",
                                "NODE",
                                "LINK",
                                "CONNECTION",
                                "PATH",
                                "CONNECTIVITY_SERVICE",
                                "VIRTUAL_NETWORK_SERVICE",
                                "PATH_COMPUTATION_SERVICE",
                                "NODE_EDGE_POINT",
                                "SERVICE_END_POINT",
                                "CONNECTION_END_POINT"
                            ]
                        },
                        "changedAttributes": {
                            "description": "none",
                            "$ref": "#/definitions/NameAndValueChange"
                        }
                    }
                }
            ]
        },
        "ConnectivityService": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_servicePort": {
                            "x-key": "localId",
                            "items": {
                                "$ref": "#/definitions/ConnectivityServicePort"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_schedule": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "_connConstraints": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_connection": {
                            "items": {
                                "$ref": "#/definitions/Connection"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "direction": {
                            "description": "none",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        }
                    }
                }
            ]
        },
        "TeLink": {
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). ",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "items": {
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_node": {
                            "items": {
                                "x-path": "/Context/_topology/_node/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "Link": {
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_transferCost": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_transferIntegrity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        },
                        "_validation": {
                            "description": "none",
                            "$ref": "#/definitions/ValidationPac"
                        },
                        "_lpTransition": {
                            "description": "none",
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        },
                        "direction": {
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases.",
                            "type": "string",
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ]
                        },
                        "_transferTiming": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_riskParameter": {
                            "description": "none",
                            "$ref": "#/definitions/RiskParameterPac"
                        },
                        "layerProtocolName": {
                            "items": {
                                "description": "none",
                                "type": "string",
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ]
                            },
                            "type": "array"
                        },
                        "_node": {
                            "items": {
                                "x-path": "/Context/_topology/_node/uuid",
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "_linkPort": {
                            "items": {
                                "$ref": "#/definitions/LinkPort"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    }
                }
            ]
        },
        "NameAndValueChange": {
            "properties": {
                "oldValue": {
                    "type": "string",
                    "description": "The value"
                },
                "newValue": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            },
            "description": "A scoped name-value triple, including old value and new value"
        },
        "NameAndValue": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            },
            "description": "A scoped name-value pair"
        },
        "ValidationMechanism": {
            "properties": {
                "validationRobustness": {
                    "type": "string",
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)"
                },
                "layerProtocolAdjacencyValidated": {
                    "type": "string",
                    "description": "State of validatiion"
                },
                "validationMechanism": {
                    "type": "string",
                    "description": "Name of mechanism used to validate adjacency"
                }
            },
            "description": "Identifies the validation mechanism and describes the characteristics of that mechanism"
        },
        "QueuingLatency": {
            "properties": {
                "trafficPropertyName": {
                    "type": "string",
                    "description": "The identifier of the specific traffic property to which the queuing latency applies."
                },
                "latencyValue": {
                    "type": "string",
                    "description": "The specific queuing latency for the traffic property."
                }
            },
            "description": "Provides information on latency characteristic for a particular stated trafficProperty."
        },
        "RiskCharacteristic": {
            "properties": {
                "riskCharacteristicName": {
                    "type": "string",
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated."
                },
                "riskIdentifierList": {
                    "items": {
                        "type": "string",
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity."
                    },
                    "type": "array"
                }
            },
            "description": "The information for a particular risk characteristic where there is a list of risk identifiers related to that characteristic."
        },
        "CostCharacteristic": {
            "properties": {
                "costAlgorithm": {
                    "type": "string",
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm."
                },
                "costName": {
                    "type": "string",
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName."
                },
                "costValue": {
                    "type": "string",
                    "description": "The specific cost."
                }
            },
            "description": "The information for a particular cost characteristic."
        },
        "Capacity": {
            "properties": {
                "maximumUsageInstances": {
                    "type": "string",
                    "description": "Where there is some limit to the number of client (e.g. in a channelized case)."
                },
                "totalSize": {
                    "type": "string",
                    "description": "Total capacity of the TopologicalEntity in MB/s"
                },
                "maximumUsageSize": {
                    "type": "string",
                    "description": "Where a client is of variable capacity but due to some underlying realization the maximum size of the client is smaller than the totalSize."
                },
                "numberingRange": {
                    "type": "string",
                    "description": "Method for identifying units of capacity via some numbering scheme."
                }
            },
            "description": "Information on capacity of a particular TopologicalEntity."
        },
        "LtpSpec": {
            "properties": {
                "ltpSpecReference": {
                    "type": "string",
                    "description": "none"
                },
                "lpSpecReference": {
                    "items": {
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                }
            },
            "description": "none"
        },
        "LpSpec": {
            "properties": {
                "lpSpecReference": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "none"
        },
        "ContextSchema": {
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements).",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_topology": {
                            "items": {
                                "$ref": "#/definitions/Topology"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_notification": {
                            "items": {
                                "$ref": "#/definitions/Notification"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_notifSubscription": {
                            "x-key": "uuid",
                            "items": {
                                "$ref": "#/definitions/NotificationSubscriptionService"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_path": {
                            "items": {
                                "$ref": "#/definitions/Path"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_vnwService": {
                            "x-key": "uuid",
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkService"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_connectivityService": {
                            "x-key": "uuid",
                            "items": {
                                "$ref": "#/definitions/ConnectivityService"
                            },
                            "type": "array",
                            "description": "none"
                        },
                        "_serviceEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ServiceEndPoint"
                            },
                            "type": "array",
                            "description": "none"
                        }
                    }
                }
            ]
        }
    }
}