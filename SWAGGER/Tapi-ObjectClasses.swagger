{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "Tapi-ObjectClasses API generated from Tapi-ObjectClasses.yang",
        "title": "Tapi-ObjectClasses API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/Context/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: Context",
                "parameters": [
                    {
                        "required": true,
                        "description": "Contextbody object",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        },
                        "name": "Context",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContextById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: Context",
                "parameters": [
                    {
                        "required": true,
                        "description": "Contextbody object",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        },
                        "name": "Context",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContextById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: Context",
                "summary": "Delete Context by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContextById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: Context",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve Context",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext"
            }
        },
        "/config/Context/_connectivityService/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectivityService",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectivityService",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectivityService"
            }
        },
        "/config/Context/_connectivityService/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _connectivityService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_connectivityServicebody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        },
                        "name": "_connectivityService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityService_connectivityServiceById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _connectivityService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_connectivityServicebody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        },
                        "name": "_connectivityService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityService_connectivityServiceById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _connectivityService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityService_connectivityServiceById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectivityService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectivityService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectivityServiceById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connection",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_connection"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Connection"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connection",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connection by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_connectionById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_connectionPort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_connectionPort/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectionPort",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_connectionPort_connectionPort"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_connectionPort/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectionPort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectionPort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectionPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_connectionPort_connectionPortById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_route/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_route/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _route",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_route_route"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_route/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Route"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _route",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _route by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_route_routeById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connection_state_state"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectionNameName"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectionNameNameById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectionLabelLabel"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connection/{connection_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connection_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connection_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connectionLabelLabelById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_servicePort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_servicePort/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_servicePort_servicePort"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityService_servicePort_servicePortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityService_servicePort_servicePortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityService_servicePort_servicePortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityServicePort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_servicePort_servicePortById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_connConstraintsbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityService_connConstraints_connConstraintsById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_connConstraintsbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_connConstraints",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityService_connConstraints_connConstraintsById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _connConstraints by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityService_connConstraints_connConstraintsById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connConstraints",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connConstraints",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraints_connConstraints"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/requestedCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsRequestedCapacityRequestedCapacity"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connConstraints/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/costCharacteristic/{costAlgorithm}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connConstraints/riskCharacteristic/{riskCharacteristicName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsRiskCharacteristicRiskCharacteristic"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/riskCharacteristic/{riskCharacteristicName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristic"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_connConstraints/latencyCharacteristic/{latencyValue}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_connConstraintsLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_schedule/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_schedulebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "name": "_schedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityService_schedule_scheduleById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_schedulebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "name": "_schedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityService_schedule_scheduleById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityService_schedule_scheduleById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _schedule",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_schedule_schedule"
            }
        },
        "/config/Context/_connectivityService/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_statebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityService_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_statebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityService_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityService_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityService_state_state"
            }
        },
        "/config/Context/_connectivityService/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityServiceNameName"
            }
        },
        "/config/Context/_connectivityService/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityServiceNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityServiceNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityServiceNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityServiceNameNameById"
            }
        },
        "/config/Context/_connectivityService/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_connectivityService/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityServiceLabelLabel"
            }
        },
        "/config/Context/_connectivityService/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_connectivityServiceLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_connectivityServiceLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_connectivityServiceLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_connectivityServiceLabelLabelById"
            }
        },
        "/config/Context/_vnwService/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _vnwService",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _vnwService",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwService"
            }
        },
        "/config/Context/_vnwService/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _vnwService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_vnwServicebody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        },
                        "name": "_vnwService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _vnwService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwServiceById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _vnwService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_vnwServicebody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        },
                        "name": "_vnwService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _vnwService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwServiceById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _vnwService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _vnwService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwServiceById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _vnwService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _vnwService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwServiceById"
            }
        },
        "/config/Context/_vnwService/{uuid}/_servicePort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/_servicePort/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_servicePort_servicePort"
            }
        },
        "/config/Context/_vnwService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_servicePort_servicePortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_servicePort_servicePortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_servicePort_servicePortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/VirtualNetworkServicePort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_servicePort_servicePortById"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_vnwConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "name": "_vnwConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwConstraint_vnwConstraintById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_vnwConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "name": "_vnwConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwConstraint_vnwConstraintById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _vnwConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwConstraint_vnwConstraintById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _vnwConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _vnwConstraint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraint_vnwConstraint"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/requestedCapacity/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "requestedCapacitybody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        },
                        "name": "requestedCapacity",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete requestedCapacity by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacityById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRequestedCapacityRequestedCapacity"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/costCharacteristic/{costAlgorithm}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "costCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "costCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        },
                        "name": "costCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/{riskCharacteristicName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristic"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "riskCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "riskCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        },
                        "name": "riskCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristic"
            }
        },
        "/config/Context/_vnwService/{uuid}/_vnwConstraint/latencyCharacteristic/{latencyValue}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "latencyCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "latencyCharacteristicbody object",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        },
                        "name": "latencyCharacteristic",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_vnwConstraintLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/Context/_vnwService/{uuid}/_schedule/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_schedulebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "name": "_schedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_schedule_scheduleById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_schedulebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "name": "_schedule",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_schedule_scheduleById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_schedule_scheduleById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _schedule",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _schedule",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_schedule_schedule"
            }
        },
        "/config/Context/_vnwService/{uuid}/_state/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_statebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwService_state_stateById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_statebody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "name": "_state",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwService_state_stateById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _state by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwService_state_stateById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwService_state_state"
            }
        },
        "/config/Context/_vnwService/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwServiceNameName"
            }
        },
        "/config/Context/_vnwService/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwServiceNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwServiceNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwServiceNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwServiceNameNameById"
            }
        },
        "/config/Context/_vnwService/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_vnwService/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwServiceLabelLabel"
            }
        },
        "/config/Context/_vnwService/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_vnwServiceLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_vnwServiceLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_vnwServiceLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_vnwServiceLabelLabelById"
            }
        },
        "/config/Context/_pathCompService/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _pathCompService",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _pathCompService",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathCompService"
            }
        },
        "/config/Context/_pathCompService/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _pathCompService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_pathCompServicebody object",
                        "schema": {
                            "$ref": "#/definitions/PathComputationService"
                        },
                        "name": "_pathCompService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _pathCompService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompService_pathCompServiceById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _pathCompService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_pathCompServicebody object",
                        "schema": {
                            "$ref": "#/definitions/PathComputationService"
                        },
                        "name": "_pathCompService",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _pathCompService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompService_pathCompServiceById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _pathCompService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _pathCompService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompService_pathCompServiceById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PathComputationService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _pathCompService",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _pathCompService by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathCompServiceById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _path",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _path",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_path"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Path"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _path",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _path by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_pathById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_telink/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/_telink/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _telink",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_telink_telink"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_telink/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TeLink"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _telink",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _telink by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_telink_telinkById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _routingConstraint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraint_routingConstraint"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/requestedCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintRequestedCapacityRequestedCapacity"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/costCharacteristic/{costAlgorithm}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/riskCharacteristic/{riskCharacteristicName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintRiskCharacteristicRiskCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/latencyCharacteristic/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintLatencyCharacteristicLatencyCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/_routingConstraint/latencyCharacteristic/{latencyValue}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_path_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathNameName"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathNameNameById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_path/{path_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathLabelLabel"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_path/{path_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of path_uuid",
                        "required": true,
                        "type": "string",
                        "name": "path_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_pathLabelLabelById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_servicePort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_servicePort/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_servicePort_servicePort"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_servicePort/{localId}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/PathCompServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompService_servicePort_servicePortById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_servicePortbody object",
                        "schema": {
                            "$ref": "#/definitions/PathCompServicePort"
                        },
                        "name": "_servicePort",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompService_servicePort_servicePortById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompService_servicePort_servicePortById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/PathCompServicePort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _servicePort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _servicePort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_servicePort_servicePortById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_routingConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_routingConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompService_routingConstraint_routingConstraintById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_routingConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "name": "_routingConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompService_routingConstraint_routingConstraintById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _routingConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompService_routingConstraint_routingConstraintById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _routingConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _routingConstraint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraint_routingConstraint"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/requestedCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: requestedCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve requestedCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintRequestedCapacityRequestedCapacity"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_routingConstraint/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/costCharacteristic/{costAlgorithm}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_routingConstraint/riskCharacteristic/{riskCharacteristicName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintRiskCharacteristicRiskCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/riskCharacteristic/{riskCharacteristicName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/latencyCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/_routingConstraint/latencyCharacteristic/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintLatencyCharacteristicLatencyCharacteristic"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_routingConstraint/latencyCharacteristic/{latencyValue}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_routingConstraintLatencyCharacteristicLatencyCharacteristicById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_objectiveFunction/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_objectiveFunctionbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "name": "_objectiveFunction",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompService_objectiveFunction_objectiveFunctionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_objectiveFunctionbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "name": "_objectiveFunction",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompService_objectiveFunction_objectiveFunctionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _objectiveFunction by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompService_objectiveFunction_objectiveFunctionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _objectiveFunction",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _objectiveFunction",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_objectiveFunction_objectiveFunction"
            }
        },
        "/config/Context/_pathCompService/{uuid}/_optimizationConstraint/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_optimizationConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        },
                        "name": "_optimizationConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompService_optimizationConstraint_optimizationConstraintById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_optimizationConstraintbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        },
                        "name": "_optimizationConstraint",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompService_optimizationConstraint_optimizationConstraintById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _optimizationConstraint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompService_optimizationConstraint_optimizationConstraintById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _optimizationConstraint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _optimizationConstraint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompService_optimizationConstraint_optimizationConstraint"
            }
        },
        "/config/Context/_pathCompService/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompServiceNameName"
            }
        },
        "/config/Context/_pathCompService/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompServiceNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompServiceNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompServiceNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompServiceNameNameById"
            }
        },
        "/config/Context/_pathCompService/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_pathCompService/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompServiceLabelLabel"
            }
        },
        "/config/Context/_pathCompService/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_pathCompServiceLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_pathCompServiceLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_pathCompServiceLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_pathCompServiceLabelLabelById"
            }
        },
        "/config/Context/_notifSubscription/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notifSubscription",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notifSubscription",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notifSubscription"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _notifSubscription",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_notifSubscriptionbody object",
                        "schema": {
                            "$ref": "#/definitions/NotificationSubscriptionService"
                        },
                        "name": "_notifSubscription",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _notifSubscription by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_notifSubscription_notifSubscriptionById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _notifSubscription",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_notifSubscriptionbody object",
                        "schema": {
                            "$ref": "#/definitions/NotificationSubscriptionService"
                        },
                        "name": "_notifSubscription",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _notifSubscription by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_notifSubscription_notifSubscriptionById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _notifSubscription",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _notifSubscription by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_notifSubscription_notifSubscriptionById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NotificationSubscriptionService"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notifSubscription",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notifSubscription by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notifSubscriptionById"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/_notification/{notificationId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notification",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notification",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notification_notification"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notification",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notification by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notification_notificationById"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/targetObjectName/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/_notification/{notificationId}/targetObjectName/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: targetObjectName",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve targetObjectName",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notificationTargetObjectNameTargetObjectName"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/targetObjectName/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: targetObjectName",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve targetObjectName by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notificationTargetObjectNameTargetObjectNameById"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/changedAttributes/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValueChange"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: changedAttributes",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve changedAttributes",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notificationChangedAttributesChangedAttributes"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/additionalInfo/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/_notification/{notificationId}/additionalInfo/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: additionalInfo",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve additionalInfo",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notificationAdditionalInfoAdditionalInfo"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_notification/{notificationId}/additionalInfo/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: additionalInfo",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve additionalInfo by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_notificationAdditionalInfoAdditionalInfoById"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/_subscriptionFilter/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_subscriptionFilterbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "name": "_subscriptionFilter",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_notifSubscription_subscriptionFilter_subscriptionFilterById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "_subscriptionFilterbody object",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "name": "_subscriptionFilter",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_notifSubscription_subscriptionFilter_subscriptionFilterById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete _subscriptionFilter by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_notifSubscription_subscriptionFilter_subscriptionFilterById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _subscriptionFilter",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _subscriptionFilter",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscription_subscriptionFilter_subscriptionFilter"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscriptionNameName"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_notifSubscriptionNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_notifSubscriptionNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_notifSubscriptionNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscriptionNameNameById"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notifSubscription/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscriptionLabelLabel"
            }
        },
        "/config/Context/_notifSubscription/{uuid}/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContext_notifSubscriptionLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContext_notifSubscriptionLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContext_notifSubscriptionLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notifSubscriptionLabelLabelById"
            }
        },
        "/config/Context/_serviceEndPoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _serviceEndPoint",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _serviceEndPoint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_serviceEndPoint"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndPoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _serviceEndPoint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _serviceEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_serviceEndPointById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_ltpSpecData_ltpSpecData"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/_layerProtocol/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_layerProtocol"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_layerProtocol/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_layerProtocol/{localId}/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_layerProtocol_lpSpecData_lpSpecData"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectionEndPoint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_connectionEndPoint"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConnectionEndPoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _connectionEndPoint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _connectionEndPoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_connectionEndPointById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_ltpSpecData_ltpSpecData"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_layerProtocol/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_layerProtocol"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_layerProtocol/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_layerProtocol/{localId}/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_layerProtocol_lpSpecData_lpSpecData"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPoint_state_state"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointNameName"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointNameNameById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointLabelLabel"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_connectionEndPoint/{connectionEndPoint_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of connectionEndPoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "connectionEndPoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_connectionEndPointLabelLabelById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LifecycleStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPoint_state_state"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPointNameName"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPointNameNameById"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_serviceEndPoint/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPointLabelLabel"
            }
        },
        "/config/Context/_serviceEndPoint/{uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_serviceEndPointLabelLabelById"
            }
        },
        "/config/Context/_topology/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _topology",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _topology",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_topology"
            }
        },
        "/config/Context/_topology/{uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _topology",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_topologyById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _node",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_node"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _node",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _node by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_nodeById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ownedNodeEdgePoint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ownedNodeEdgePoint"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NodeEdgePoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ownedNodeEdgePoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ownedNodeEdgePointById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_ltpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _ltpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ltpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ltpSpecData_ltpSpecData"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocol"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _layerProtocol",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/_lpSpecData/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _lpSpecData",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpSpecData",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_lpSpecData_lpSpecData"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_state_state"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameName"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameNameById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabel"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of ownedNodeEdgePoint_uuid",
                        "required": true,
                        "type": "string",
                        "name": "ownedNodeEdgePoint_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabelById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_state_state"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacity_transferCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/availableCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityAvailableCapacityAvailableCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRange",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCost_transferCost"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/{costAlgorithm}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferIntegrity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferIntegrity_transferIntegrity"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTiming_transferTiming"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/queuingLatency/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/queuingLatency/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTimingQueuingLatencyQueuingLatency"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/queuingLatency/{latencyValue}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve queuingLatency by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTimingQueuingLatencyQueuingLatencyById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeNameName"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeNameNameById"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeLabelLabel"
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of node_uuid",
                        "required": true,
                        "type": "string",
                        "name": "node_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeLabelLabelById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _link",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_link"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _link",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _link by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _linkPort",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_linkPort"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LinkPort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _linkPort",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of localId",
                        "required": true,
                        "type": "string",
                        "name": "localId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _linkPort by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_linkPortById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_state/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _state",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_state_state"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacity_transferCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/availableCapacity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "Capacity available to be assigned.",
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: availableCapacity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityAvailableCapacityAvailableCapacity"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/{numberingRange}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of numberingRange",
                        "required": true,
                        "type": "string",
                        "name": "numberingRange",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferCost",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCost_transferCost"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/{costAlgorithm}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristic"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/{costAlgorithm}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: costCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of costAlgorithm",
                        "required": true,
                        "type": "string",
                        "name": "costAlgorithm",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristicById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferIntegrity/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferIntegrity",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferIntegrity_transferIntegrity"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _transferTiming",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTiming_transferTiming"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/queuingLatency/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/queuingLatency/{latencyValue}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve queuingLatency",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTimingQueuingLatencyQueuingLatency"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/queuingLatency/{latencyValue}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueuingLatency"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: queuingLatency",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of latencyValue",
                        "required": true,
                        "type": "string",
                        "name": "latencyValue",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve queuingLatency by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTimingQueuingLatencyQueuingLatencyById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/RiskParameterPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _riskParameter",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _riskParameter",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameter_riskParameter"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/{riskCharacteristicName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristic"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/{riskCharacteristicName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: riskCharacteristic",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of riskCharacteristicName",
                        "required": true,
                        "type": "string",
                        "name": "riskCharacteristicName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristicById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/ValidationPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _validation",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _validation",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validation_validation"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/{validationRobustness}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve validationMechanism",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanism"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/{validationRobustness}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationMechanism"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: validationMechanism",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of validationRobustness",
                        "required": true,
                        "type": "string",
                        "name": "validationRobustness",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve validationMechanism by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanismById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_lpTransition/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _lpTransition",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpTransition",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_lpTransition_lpTransition"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkNameName"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkNameNameById"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkLabelLabel"
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of link_uuid",
                        "required": true,
                        "type": "string",
                        "name": "link_uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkLabelLabelById"
            }
        },
        "/config/Context/_topology/{uuid}/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyNameName"
            }
        },
        "/config/Context/_topology/{uuid}/name/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyNameNameById"
            }
        },
        "/config/Context/_topology/{uuid}/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyLabelLabel"
            }
        },
        "/config/Context/_topology/{uuid}/label/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of uuid",
                        "required": true,
                        "type": "string",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyLabelLabelById"
            }
        },
        "/config/Context/_notification/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notification/{notificationId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notification",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notification",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notification_notification"
            }
        },
        "/config/Context/_notification/{notificationId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: _notification",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _notification by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notification_notificationById"
            }
        },
        "/config/Context/_notification/{notificationId}/targetObjectName/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notification/{notificationId}/targetObjectName/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: targetObjectName",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve targetObjectName",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notificationTargetObjectNameTargetObjectName"
            }
        },
        "/config/Context/_notification/{notificationId}/targetObjectName/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: targetObjectName",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve targetObjectName by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notificationTargetObjectNameTargetObjectNameById"
            }
        },
        "/config/Context/_notification/{notificationId}/changedAttributes/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValueChange"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: changedAttributes",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve changedAttributes",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notificationChangedAttributesChangedAttributes"
            }
        },
        "/config/Context/_notification/{notificationId}/additionalInfo/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_notification/{notificationId}/additionalInfo/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: additionalInfo",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve additionalInfo",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notificationAdditionalInfoAdditionalInfo"
            }
        },
        "/config/Context/_notification/{notificationId}/additionalInfo/{valueName}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: additionalInfo",
                "parameters": [
                    {
                        "description": "ID of notificationId",
                        "required": true,
                        "type": "string",
                        "name": "notificationId",
                        "in": "path"
                    },
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve additionalInfo by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_notificationAdditionalInfoAdditionalInfoById"
            }
        },
        "/config/Context/name/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/name/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextNameName"
            }
        },
        "/config/Context/name/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContextNameNameById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "namebody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "name",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContextNameNameById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContextNameNameById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextNameNameById"
            }
        },
        "/config/Context/label/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/Context/label/{valueName}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextLabelLabel"
            }
        },
        "/config/Context/label/{valueName}/": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "updateContextLabelLabelById"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "description": "labelbody object",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        },
                        "name": "label",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createContextLabelLabelById"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "deleteContextLabelLabelById"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "description": "ID of valueName",
                        "required": true,
                        "type": "string",
                        "name": "valueName",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextLabelLabelById"
            }
        },
        "/streams/Notification/": {
            "get": {
                "schemes": [
                    "ws"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: Notification",
                "summary": "Retrieve Notification by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveNotificationById"
            }
        }
    },
    "definitions": {
        "LinkPort": {
            "description": "The association of the Link to LTPs is made via LinkEnd.\nThe LinkEnd object class models the access to the Link function. \nThe traffic forwarding between the associated LinkEnds of the Link depends upon the type of Link.  \nIn cases where there is resilience the LinkEnd may convey the resilience role of the access to the Link. \nThe Link can be considered as a component and the LinkEnd as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the LinkEnd."
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string",
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. "
                        }
                    }
                }
            ]
        },
        "VirtualNetworkServicePort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string",
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        },
                        "_serviceEndPoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_serviceEndPoint/uuid"
                        }
                    }
                }
            ]
        },
        "TransferCostPac": {
            "description": "The cost characteristics of a TopologicalEntity not necessarily correlated to the cost of the underlying physical realization. \nThey may be quite specific to the individual TopologicalEntity e.g. opportunity cost. Relates to layer capacity\nThere may be many perspectives from which cost may be considered  for a particular TopologicalEntity and hence many specific costs and potentially cost algorithms. \nUsing an entity will incur a cost. ",
            "properties": {
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "x-key": "costAlgorithm"
                }
            }
        },
        "NotificationSubscriptionService": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_subscriptionFilter": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "supportedObjectTypes": {
                            "items": {
                                "enum": [
                                    "TOPOLOGY",
                                    "NODE",
                                    "LINK",
                                    "CONNECTION",
                                    "PATH",
                                    "CONNECTIVITY_SERVICE",
                                    "VIRTUAL_NETWORK_SERVICE",
                                    "PATH_COMPUTATION_SERVICE",
                                    "NODE_EDGE_POINT",
                                    "SERVICE_END_POINT",
                                    "CONNECTION_END_POINT"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "subscriptionState": {
                            "enum": [
                                "SUSPENDED",
                                "ACTIVE"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "supportedNotificationTypes": {
                            "items": {
                                "enum": [
                                    "OBJECT_CREATION",
                                    "OBJECT_DELETION",
                                    "ATTRIBUTE_VALUE_CHANGE",
                                    "STATE_CHANGE"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_notification": {
                            "items": {
                                "$ref": "#/definitions/Notification"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "notificationId"
                        }
                    }
                }
            ]
        },
        "TimeRange": {
            "description": "none",
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "none"
                },
                "startTime": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "LayerProtocolTransitionPac": {
            "description": "Relevant for a Link that is formed by abstracting one or more LTPs (in a stack) to focus on the flow and deemphasize the protocol transformation. \nThis abstraction is relevant when considering multi-layer routing. \nThe layer protocols of the LTP and the order of their application to the signal is still relevant and need to be accounted for. This is derived from the LTP spec details.\nThis Pac provides the relevant abstractions of the LTPs and provides the necessary association to the LTPs involved.\nLinks that included details in this Pac are often referred to as Transitional Links.",
            "properties": {
                "_nodeEdgePoint": {
                    "items": {
                        "type": "string",
                        "description": "Lists the LTPs that define the layer protocol transition of the transitional link.",
                        "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                    },
                    "type": "array"
                },
                "transitionedLayerProtocolName": {
                    "items": {
                        "type": "string",
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role."
                    },
                    "type": "array"
                }
            }
        },
        "TransferTimingPac": {
            "description": "A TopologicalEntity will suffer effects from the underlying physical realization related to the timing of the information passed by the TopologicalEntity.",
            "properties": {
                "queuingLatency": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "x-key": "latencyValue"
                },
                "wanderCharacteristic": {
                    "type": "string",
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                },
                "fixedLatencyCharacteristic": {
                    "type": "string",
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity"
                },
                "jitterCharacteristic": {
                    "type": "string",
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                }
            }
        },
        "TransferIntegrityPac": {
            "description": "Transfer intergrity characteristic covers expected/specified/acceptable characteristic of degradation of the transfered signal.\nIt includes all aspects of possible degradation of signal content as well as any damage of any form to the total TopologicalEntity and to the carried signals.\nNote that the statement is of total impact to the TopologicalEntity so any partial usage of the TopologicalEntity (e.g. a signal that does not use full capacity) will only suffer its portion of the impact.",
            "properties": {
                "errorCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded."
                },
                "repeatDeliveryCharacteristic": {
                    "type": "string",
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay."
                },
                "lossCharacteristic": {
                    "type": "string",
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips)."
                },
                "unavailableTimeCharacteristic": {
                    "type": "string",
                    "description": "Describes the duration for which there may be no valid signal propagated."
                },
                "deliveryOrderCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order."
                },
                "serverIntegrityProcessCharacteristic": {
                    "type": "string",
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity."
                }
            }
        },
        "AdminStatePac": {
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects.",
            "properties": {
                "administrativeState": {
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "ServiceEndPoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/LifecycleStatePac"
                        },
                        "_connectionEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ConnectionEndPoint"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_mappedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        }
                    }
                }
            ]
        },
        "Node": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_encapTopology": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_topology/uuid"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_transferTiming": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_ownedNodeEdgePoint": {
                            "items": {
                                "$ref": "#/definitions/NodeEdgePoint"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "_transferCost": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_transferIntegrity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    }
                }
            ]
        },
        "TeLink": {
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). ",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_node": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "PathComputationService": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_routingConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/PathCompServicePort"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_objectiveFunction": {
                            "description": "none",
                            "$ref": "#/definitions/PathObjectiveFunction"
                        },
                        "_optimizationConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/PathOptimizationConstraint"
                        },
                        "_path": {
                            "items": {
                                "$ref": "#/definitions/Path"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "ConnectivityService": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_connection": {
                            "items": {
                                "$ref": "#/definitions/Connection"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/ConnectivityServicePort"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_schedule": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_connConstraints": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        }
                    }
                }
            ]
        },
        "ConnectionPort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "_connectionEndPoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string",
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        }
                    }
                }
            ]
        },
        "ConnectionEndPoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_serverNodeEdgePoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                        },
                        "_peerConnectionEndPoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_serviceEndPoint/_connectionEndPoint/uuid"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        }
                    }
                }
            ]
        },
        "Link": {
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases."
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_validation": {
                            "description": "none",
                            "$ref": "#/definitions/ValidationPac"
                        },
                        "_lpTransition": {
                            "description": "none",
                            "$ref": "#/definitions/LayerProtocolTransitionPac"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_linkPort": {
                            "items": {
                                "$ref": "#/definitions/LinkPort"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_node": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/uuid"
                            },
                            "type": "array"
                        },
                        "_transferCapacity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCapacityPac"
                        },
                        "_transferCost": {
                            "description": "none",
                            "$ref": "#/definitions/TransferCostPac"
                        },
                        "_riskParameter": {
                            "description": "none",
                            "$ref": "#/definitions/RiskParameterPac"
                        },
                        "_transferTiming": {
                            "description": "none",
                            "$ref": "#/definitions/TransferTimingPac"
                        },
                        "_transferIntegrity": {
                            "description": "none",
                            "$ref": "#/definitions/TransferIntegrityPac"
                        }
                    }
                }
            ]
        },
        "LocalClass": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "localId": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "Notification": {
            "description": "none",
            "properties": {
                "targetObjectIdentifier": {
                    "type": "string",
                    "description": "none"
                },
                "layerProtocolName": {
                    "enum": [
                        "OCH",
                        "ODU",
                        "ETH",
                        "MPLS_TP"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "changedAttributes": {
                    "items": {
                        "$ref": "#/definitions/NameAndValueChange"
                    },
                    "type": "array",
                    "description": "none"
                },
                "additionalInfo": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "none",
                    "x-key": "valueName"
                },
                "additionalText": {
                    "type": "string",
                    "description": "none"
                },
                "notificationType": {
                    "enum": [
                        "OBJECT_CREATION",
                        "OBJECT_DELETION",
                        "ATTRIBUTE_VALUE_CHANGE",
                        "STATE_CHANGE"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "targetObjectType": {
                    "enum": [
                        "TOPOLOGY",
                        "NODE",
                        "LINK",
                        "CONNECTION",
                        "PATH",
                        "CONNECTIVITY_SERVICE",
                        "VIRTUAL_NETWORK_SERVICE",
                        "PATH_COMPUTATION_SERVICE",
                        "NODE_EDGE_POINT",
                        "SERVICE_END_POINT",
                        "CONNECTION_END_POINT"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "sourceIndicator": {
                    "enum": [
                        "RESOURCE_OPERATION",
                        "MANAGEMENT_OPERATION",
                        "UNKNOWN"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "eventTimeStamp": {
                    "type": "string",
                    "description": "none"
                },
                "targetObjectName": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "none",
                    "x-key": "valueName"
                },
                "notificationId": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "Path": {
            "description": "Path is described by an ordered list of TE Links. A TE Link is defined by a pair of Node/NodeEdgePoint IDs. A Connection is realized by concatenating link resources (associated with a Link) and the lower-level connections (cross-connections) in the different nodes",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_routingConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/ConnectivityConstraint"
                        },
                        "_telink": {
                            "items": {
                                "$ref": "#/definitions/TeLink"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        }
                    }
                }
            ]
        },
        "Topology": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_node": {
                            "items": {
                                "$ref": "#/definitions/Node"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_link": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "ConnectivityConstraint": {
            "description": "none",
            "properties": {
                "serviceType": {
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "requestedCapacity": {
                    "description": "none",
                    "$ref": "#/definitions/Capacity"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "x-key": "costAlgorithm"
                },
                "serviceLayer": {
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "includeTopology": {
                    "items": {
                        "type": "string",
                        "description": "none",
                        "x-path": "/Context/_topology/uuid"
                    },
                    "type": "array"
                },
                "serviceLevel": {
                    "type": "string",
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "x-key": "latencyValue"
                },
                "excludePath": {
                    "items": {
                        "type": "string",
                        "description": "none",
                        "x-path": "/Context/_pathCompService/_path/uuid"
                    },
                    "type": "array"
                },
                "avoidTopology": {
                    "items": {
                        "type": "string",
                        "description": "none",
                        "x-path": "/Context/_topology/uuid"
                    },
                    "type": "array"
                },
                "includePath": {
                    "items": {
                        "type": "string",
                        "description": "none",
                        "x-path": "/Context/_pathCompService/_path/uuid"
                    },
                    "type": "array"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "PathCompServicePort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string",
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        },
                        "_serviceEndPoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_serviceEndPoint/uuid"
                        }
                    }
                }
            ]
        },
        "VirtualNetworkService": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_servicePort": {
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkServicePort"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "layerProtocolName": {
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "_schedule": {
                            "description": "none",
                            "$ref": "#/definitions/TimeRange"
                        },
                        "_vnwConstraint": {
                            "description": "none",
                            "$ref": "#/definitions/VirtualNetworkConstraint"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_topology": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_topology/uuid"
                        }
                    }
                }
            ]
        },
        "Route": {
            "description": "The FC Route (FcRoute) object class models the individual routes of an FC. \nThe route of an FC object is represented by a list of FCs at a lower level. \nNote that depending on the service supported by an FC, an the FC can have multiple routes.",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_lowerConnection": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_connectivityService/_connection/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "Connection": {
            "description": "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms.\nAt the lowest level of recursion, a FC represents a cross-connection within an NE.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_route": {
                            "items": {
                                "$ref": "#/definitions/Route"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_connectionPort": {
                            "items": {
                                "$ref": "#/definitions/ConnectionPort"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/OperationalStatePac"
                        },
                        "_node": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_topology/_node/uuid"
                        }
                    }
                }
            ]
        },
        "PathOptimizationConstraint": {
            "description": "none",
            "properties": {
                "trafficInterruption": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "PathObjectiveFunction": {
            "description": "none",
            "properties": {
                "linkUtilization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "costOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "bandwidthOptimization": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "concurrentPaths": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "resourceSharing": {
                    "enum": [
                        "MINIMIZE",
                        "MAXIMIZE",
                        "ALLOW",
                        "DISALLOW",
                        "DONT_CARE"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "VirtualNetworkConstraint": {
            "description": "none",
            "properties": {
                "serviceType": {
                    "enum": [
                        "POINT_TO_POINT_CONNECTIVITY",
                        "POINT_TO_MULTIPOINT_CONNECTIVTY",
                        "MULTIPOINT_CONNECTIVITY"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "requestedCapacity": {
                    "description": "none",
                    "$ref": "#/definitions/Capacity"
                },
                "costCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "type": "array",
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "x-key": "costAlgorithm"
                },
                "serviceLayer": {
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "serviceLevel": {
                    "type": "string",
                    "description": "An abstract value the meaning of which is mutually agreed \u2013 typically represents metrics such as - Class of service, priority, resiliency, availability"
                },
                "latencyCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/QueuingLatency"
                    },
                    "type": "array",
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "x-key": "latencyValue"
                },
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "RiskParameterPac": {
            "description": "The risk characteristics of a TopologicalEntity come directly from the underlying physical realization. \nThe risk characteristics propagate from the physical realization to the client and from the server layer to the client layer, this propagation may be modified by protection.\nA TopologicalEntity may suffer degradation or failure as a result of a problem in a part of the underlying realization.\nThe realization can be partitioned into segments which have some relevant common failure modes.\nThere is a risk of failure/degradation of each segment of the underlying realization.\nEach segment is a part of a larger physical/geographical unit that behaves as one with respect to failure (i.e. a failure will have a high probability of impacting the whole unit (e.g. all cables in the same duct).\nDisruptions to that larger physical/geographical unit will impact (cause failure/errors to) all TopologicalEntities that use any part of that larger physical/geographical entity.\nAny TopologicalEntity that uses any part of that larger physical/geographical unit will suffer impact and hence each TopologicalEntity shares risk.\nThe identifier of each physical/geographical unit that is involved in the realization of each segment of a Topological entity can be listed in the RiskParameter_Pac of that TopologicalEntity.\nA segment has one or more risk characteristic.\nShared risk between two TopologicalEntities compromises the integrity of any solution that use one of those TopologicalEntity as a backup for the other.\nWhere two TopologicalEntities have a common risk characteristic they have an elevated probability of failing simultaneously compared to two TopologicalEntities that do not share risk characteristics.",
            "properties": {
                "riskCharacteristic": {
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "type": "array",
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "x-key": "riskCharacteristicName"
                }
            }
        },
        "ConnectivityServicePort": {
            "description": "The association of the FC to LTPs is made via EndPoints.\nThe EndPoint (EP) object class models the access to the FC function. \nThe traffic forwarding between the associated EPs of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  \nIn cases where there is resilience the EndPoint may convey the resilience role of the access to the FC. \nIt can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.\nThe EP replaces the Protection Unit of a traditional protection model. \nThe ForwadingConstruct can be considered as a component and the EndPoint as a Port on that component",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "serviceLayer": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the EndPoint."
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF"
                            ],
                            "type": "string",
                            "description": "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. "
                        },
                        "_serviceEndPoint": {
                            "type": "string",
                            "description": "none",
                            "x-path": "/Context/_serviceEndPoint/uuid"
                        }
                    }
                }
            ]
        },
        "OperationalStatePac": {
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects.",
            "properties": {
                "operationalState": {
                    "enum": [
                        "DISABLED",
                        "ENABLED"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GlobalClass": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "label": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "x-key": "valueName"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                },
                "name": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "x-key": "valueName"
                }
            }
        },
        "LayerProtocol": {
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. ",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationState": {
                            "enum": [
                                "LP_CAN_NEVER_TERMINATE",
                                "LT_NOT_TERMINATED",
                                "TERMINATED_SERVER_TO_CLIENT_FLOW",
                                "TERMINATED_CLIENT_TO_SERVER_FLOW",
                                "TERMINATED_BIDIRECTIONAL",
                                "LT_PERMENANTLY_TERMINATED",
                                "TERMINATION_STATE_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Indicates whether the layer is terminated and if so how."
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity."
                        },
                        "_lpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LpSpec"
                        },
                        "terminationDirection": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                        }
                    }
                }
            ]
        },
        "TransferCapacityPac": {
            "description": "The TopologicalEntity derives capacity from the underlying realization. \nA TopologicalEntity may be an abstraction and virtualization of a subset of the underlying capability offered in a view or may be directly reflecting the underlying realization.\nA TopologicalEntity may be directly used in the view or may be assigned to another view for use.\nThe clients supported by a multi-layer TopologicalEntity may interact such that the resources used by one client may impact those available to another. This is derived from the LTP spec details.\nRepresents the capacity available to user (client) along with client interaction and usage. \nA TopologicalEntity may reflect one or more client protocols and one or more members for each profile.",
            "properties": {
                "capacityAssignedToUserView": {
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    },
                    "type": "array",
                    "description": "Capacity already assigned",
                    "x-key": "numberingRange"
                },
                "availableCapacity": {
                    "description": "Capacity available to be assigned.",
                    "$ref": "#/definitions/Capacity"
                },
                "totalPotentialCapacity": {
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.",
                    "$ref": "#/definitions/Capacity"
                },
                "capacityInteractionAlgorithm": {
                    "type": "string",
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)"
                }
            }
        },
        "NodeEdgePoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_state": {
                            "description": "none",
                            "$ref": "#/definitions/AdminStatePac"
                        },
                        "_ltpSpecData": {
                            "description": "none",
                            "$ref": "#/definitions/LtpSpec"
                        },
                        "_clientNodeEdgePoint": {
                            "items": {
                                "type": "string",
                                "description": "none",
                                "x-path": "/Context/_topology/_node/_ownedNodeEdgePoint/uuid"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "LifecycleStatePac": {
            "description": "Provides state attributes for an entity that has lifeccycle aspects only.",
            "properties": {
                "lifecycleState": {
                    "enum": [
                        "PLANNED",
                        "POTENTIAL",
                        "INSTALLED",
                        "PENDING_REMOVAL"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "ValidationPac": {
            "description": "Validation covers the various adjacenct discovery and reachability verification protocols. Also may cover Information source and degree of integrity.",
            "properties": {
                "validationMechanism": {
                    "items": {
                        "$ref": "#/definitions/ValidationMechanism"
                    },
                    "type": "array",
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "x-key": "validationRobustness"
                }
            }
        },
        "SubscriptionFilter": {
            "description": "none",
            "properties": {
                "requestedObjectTypes": {
                    "items": {
                        "enum": [
                            "TOPOLOGY",
                            "NODE",
                            "LINK",
                            "CONNECTION",
                            "PATH",
                            "CONNECTIVITY_SERVICE",
                            "VIRTUAL_NETWORK_SERVICE",
                            "PATH_COMPUTATION_SERVICE",
                            "NODE_EDGE_POINT",
                            "SERVICE_END_POINT",
                            "CONNECTION_END_POINT"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "requestedLayerProtocols": {
                    "items": {
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "requestedObjectIdentifier": {
                    "items": {
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "requestedNotificationTypes": {
                    "items": {
                        "enum": [
                            "OBJECT_CREATION",
                            "OBJECT_DELETION",
                            "ATTRIBUTE_VALUE_CHANGE",
                            "STATE_CHANGE"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                }
            }
        },
        "QueuingLatency": {
            "description": "Provides information on latency characteristic for a particular stated trafficProperty.",
            "properties": {
                "latencyValue": {
                    "type": "string",
                    "description": "The specific queuing latency for the traffic property."
                },
                "trafficPropertyName": {
                    "type": "string",
                    "description": "The identifier of the specific traffic property to which the queuing latency applies."
                }
            }
        },
        "Capacity": {
            "description": "Information on capacity of a particular TopologicalEntity.",
            "properties": {
                "totalSize": {
                    "type": "string",
                    "description": "Total capacity of the TopologicalEntity in MB/s"
                },
                "maximumUsageInstances": {
                    "type": "string",
                    "description": "Where there is some limit to the number of client (e.g. in a channelized case)."
                },
                "numberingRange": {
                    "type": "string",
                    "description": "Method for identifying units of capacity via some numbering scheme."
                },
                "maximumUsageSize": {
                    "type": "string",
                    "description": "Where a client is of variable capacity but due to some underlying realization the maximum size of the client is smaller than the totalSize."
                }
            }
        },
        "NameAndValueChange": {
            "description": "A scoped name-value triple, including old value and new value",
            "properties": {
                "newValue": {
                    "type": "string",
                    "description": "The value"
                },
                "oldValue": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            }
        },
        "CostCharacteristic": {
            "description": "The information for a particular cost characteristic.",
            "properties": {
                "costName": {
                    "type": "string",
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName."
                },
                "costAlgorithm": {
                    "type": "string",
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm."
                },
                "costValue": {
                    "type": "string",
                    "description": "The specific cost."
                }
            }
        },
        "NameAndValue": {
            "description": "A scoped name-value pair",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            }
        },
        "RiskCharacteristic": {
            "description": "The information for a particular risk characteristic where there is a list of risk identifiers related to that characteristic.",
            "properties": {
                "riskIdentifierList": {
                    "items": {
                        "type": "string",
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity."
                    },
                    "type": "array"
                },
                "riskCharacteristicName": {
                    "type": "string",
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated."
                }
            }
        },
        "ValidationMechanism": {
            "description": "Identifies the validation mechanism and describes the characteristics of that mechanism",
            "properties": {
                "layerProtocolAdjacencyValidated": {
                    "type": "string",
                    "description": "State of validatiion"
                },
                "validationRobustness": {
                    "type": "string",
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)"
                },
                "validationMechanism": {
                    "type": "string",
                    "description": "Name of mechanism used to validate adjacency"
                }
            }
        },
        "LpSpec": {
            "description": "none",
            "properties": {
                "lpSpecReference": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "LtpSpec": {
            "description": "none",
            "properties": {
                "ltpSpecReference": {
                    "type": "string",
                    "description": "none"
                },
                "lpSpecReference": {
                    "items": {
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                }
            }
        },
        "ContextSchema": {
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements).",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "_notification": {
                            "items": {
                                "$ref": "#/definitions/Notification"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "notificationId"
                        },
                        "_vnwService": {
                            "items": {
                                "$ref": "#/definitions/VirtualNetworkService"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_topology": {
                            "items": {
                                "$ref": "#/definitions/Topology"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_notifSubscription": {
                            "items": {
                                "$ref": "#/definitions/NotificationSubscriptionService"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_serviceEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ServiceEndPoint"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_pathCompService": {
                            "items": {
                                "$ref": "#/definitions/PathComputationService"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_connectivityService": {
                            "items": {
                                "$ref": "#/definitions/ConnectivityService"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        }
    }
}