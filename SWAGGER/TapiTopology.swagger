{
    "swagger": "2.0",
    "info": {
        "title": "TapiTopology API",
        "description": "TapiTopology API generated from TapiTopology.yang",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/Context/_topology/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_topology",
                "description": "Retrieve operation of resource: _topology",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _topology",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": []
            }
        },
        "/config/Context/_topology/{uuid}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_topologyById",
                "description": "Retrieve operation of resource: _topology",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _topology by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/_topologySchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/name/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyNameName",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/name/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/name/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/label/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyLabelLabel",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/label/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/label/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topologyLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_node",
                "description": "Retrieve operation of resource: _node",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _node",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_nodeById",
                "description": "Retrieve operation of resource: _node",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _node by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ownedNodeEdgePoint",
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ownedNodeEdgePoint",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_ownedNodeEdgePointById",
                "description": "Retrieve operation of resource: _ownedNodeEdgePoint",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _ownedNodeEdgePoint by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NodeEdgePoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocol",
                "description": "Retrieve operation of resource: _layerProtocol",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_layerProtocolById",
                "description": "Retrieve operation of resource: _layerProtocol",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _layerProtocol by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocol"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_layerProtocol/{localId}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_layerProtocol_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_state/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameName",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/name/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabel",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/label/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePointLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_ownedNodeEdgePoint/{ownedNodeEdgePoint_uuid}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_ownedNodeEdgePoint_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "ownedNodeEdgePoint_uuid",
                        "description": "ID of ownedNodeEdgePoint_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_state/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacity_transferCapacity",
                "description": "Retrieve operation of resource: _transferCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCapacityPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/availableCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityAvailableCapacityAvailableCapacity",
                "description": "Retrieve operation of resource: availableCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "Capacity available to be assigned."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/{totalSize}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCapacity/capacityAssignedToUserView/{totalSize}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "totalSize",
                        "description": "ID of totalSize"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCost_transferCost",
                "description": "Retrieve operation of resource: _transferCost",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCostPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristic",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/{costName costValue costAlgorithm}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferCost/costCharacteristic/{costName costValue costAlgorithm}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferCostCostCharacteristicCostCharacteristic",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "costName costValue costAlgorithm",
                        "description": "ID of costName costValue costAlgorithm"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferIntegrity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferIntegrity_transferIntegrity",
                "description": "Retrieve operation of resource: _transferIntegrity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferIntegrityPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTiming_transferTiming",
                "description": "Retrieve operation of resource: _transferTiming",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferTimingPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/latencyCharacteristic/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTimingLatencyCharacteristicLatencyCharacteristic",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/latencyCharacteristic/{trafficPropertyName trafficPropertyQueingLatency}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_transferTiming/latencyCharacteristic/{trafficPropertyName trafficPropertyQueingLatency}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_transferTimingLatencyCharacteristicLatencyCharacteristic",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LatencyCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "trafficPropertyName trafficPropertyQueingLatency",
                        "description": "ID of trafficPropertyName trafficPropertyQueingLatency"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/name/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeNameName",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/name/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/name/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/label/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeLabelLabel",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/label/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/label/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_nodeLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_node/{node_uuid}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_node/{node_uuid}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_node_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "node_uuid",
                        "description": "ID of node_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_link",
                "description": "Retrieve operation of resource: _link",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _link",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkById",
                "description": "Retrieve operation of resource: _link",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _link by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_linkPort",
                "description": "Retrieve operation of resource: _linkPort",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _linkPort",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_linkPortById",
                "description": "Retrieve operation of resource: _linkPort",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _linkPort by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LinkPort"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_linkPort/{localId}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_linkPort_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "localId",
                        "description": "ID of localId"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_state/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_state_state",
                "description": "Retrieve operation of resource: _state",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _state",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacity_transferCapacity",
                "description": "Retrieve operation of resource: _transferCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCapacityPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/totalPotentialCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityTotalPotentialCapacityTotalPotentialCapacity",
                "description": "Retrieve operation of resource: totalPotentialCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve totalPotentialCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/availableCapacity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityAvailableCapacityAvailableCapacity",
                "description": "Retrieve operation of resource: availableCapacity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve availableCapacity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity",
                            "description": "Capacity available to be assigned."
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserView",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/{totalSize}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCapacity/capacityAssignedToUserView/{totalSize}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCapacityCapacityAssignedToUserViewCapacityAssignedToUserViewById",
                "description": "Retrieve operation of resource: capacityAssignedToUserView",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve capacityAssignedToUserView by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Capacity"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "totalSize",
                        "description": "ID of totalSize"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCost_transferCost",
                "description": "Retrieve operation of resource: _transferCost",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferCost",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferCostPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristic",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/{costName costValue costAlgorithm}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferCost/costCharacteristic/{costName costValue costAlgorithm}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferCostCostCharacteristicCostCharacteristic",
                "description": "Retrieve operation of resource: costCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve costCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CostCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "costName costValue costAlgorithm",
                        "description": "ID of costName costValue costAlgorithm"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferIntegrity/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferIntegrity_transferIntegrity",
                "description": "Retrieve operation of resource: _transferIntegrity",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferIntegrity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferIntegrityPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTiming_transferTiming",
                "description": "Retrieve operation of resource: _transferTiming",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _transferTiming",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TransferTimingPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/latencyCharacteristic/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTimingLatencyCharacteristicLatencyCharacteristic",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/latencyCharacteristic/{trafficPropertyName trafficPropertyQueingLatency}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_transferTiming/latencyCharacteristic/{trafficPropertyName trafficPropertyQueingLatency}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_transferTimingLatencyCharacteristicLatencyCharacteristic",
                "description": "Retrieve operation of resource: latencyCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve latencyCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LatencyCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "trafficPropertyName trafficPropertyQueingLatency",
                        "description": "ID of trafficPropertyName trafficPropertyQueingLatency"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameter_riskParameter",
                "description": "Retrieve operation of resource: _riskParameter",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _riskParameter",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskParameterPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristic",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/{riskCharacteristicName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_riskParameter/riskCharacteristic/{riskCharacteristicName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_riskParameterRiskCharacteristicRiskCharacteristicById",
                "description": "Retrieve operation of resource: riskCharacteristic",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve riskCharacteristic by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RiskCharacteristic"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "riskCharacteristicName",
                        "description": "ID of riskCharacteristicName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validation_validation",
                "description": "Retrieve operation of resource: _validation",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _validation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanism",
                "description": "Retrieve operation of resource: validationMechanism",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve validationMechanism",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/{validationMechanism layerProtocolAdjacencyValidated validationRobustness}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_validation/validationMechanism/{validationMechanism layerProtocolAdjacencyValidated validationRobustness}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_validationValidationMechanismValidationMechanism",
                "description": "Retrieve operation of resource: validationMechanism",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve validationMechanism",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ValidationMechanism"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "validationMechanism layerProtocolAdjacencyValidated validationRobustness",
                        "description": "ID of validationMechanism layerProtocolAdjacencyValidated validationRobustness"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_lpTransition/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_lpTransition_lpTransition",
                "description": "Retrieve operation of resource: _lpTransition",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _lpTransition",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/LayerProtocolTransitionPac",
                            "description": "none"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/name/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkNameName",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/name/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/name/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/label/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkLabelLabel",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/label/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/label/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_linkLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_topology/{uuid}/_link/{link_uuid}/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    }
                ]
            }
        },
        "/config/Context/_topology/{uuid}/_link/{link_uuid}/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_topology_link_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "link_uuid",
                        "description": "ID of link_uuid"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/config/Context/_nwTopologyService/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyService_nwTopologyService",
                "description": "Retrieve operation of resource: _nwTopologyService",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _nwTopologyService",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/_nwTopologyServiceSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": []
            }
        },
        "/config/Context/_nwTopologyService/name/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyServiceNameName",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_nwTopologyService/name/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": []
            }
        },
        "/config/Context/_nwTopologyService/name/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyServiceNameNameById",
                "description": "Retrieve operation of resource: name",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_nwTopologyService/label/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyServiceLabelLabel",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_nwTopologyService/label/{valueName}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": []
            }
        },
        "/config/Context/_nwTopologyService/label/{valueName}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyServiceLabelLabelById",
                "description": "Retrieve operation of resource: label",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/NameAndValue"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "valueName",
                        "description": "ID of valueName"
                    }
                ]
            }
        },
        "/config/Context/_nwTopologyService/_extensions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyService_extensions_extensions",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Context/_nwTopologyService/_extensions/{extensionsSpecification}/"
                            }
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": []
            }
        },
        "/config/Context/_nwTopologyService/_extensions/{extensionsSpecification}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext_nwTopologyService_extensions_extensionsById",
                "description": "Retrieve operation of resource: _extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve _extensions by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExtensionsSpec"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "extensionsSpecification",
                        "description": "ID of extensionsSpecification"
                    }
                ]
            }
        },
        "/operations/getTopologyDetails/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetTopologyDetailsById",
                "description": "Create operation of resource: getTopologyDetails",
                "produces": [
                    "application/json"
                ],
                "summary": "Create getTopologyDetails by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetTopologyDetailsRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "getTopologyDetailsbody object",
                        "in": "body",
                        "name": "getTopologyDetails",
                        "schema": {
                            "$ref": "#/definitions/GetTopologyDetailsRPCInputSchema"
                        }
                    }
                ]
            }
        },
        "/operations/getNodeDetails/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetNodeDetailsById",
                "description": "Create operation of resource: getNodeDetails",
                "produces": [
                    "application/json"
                ],
                "summary": "Create getNodeDetails by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetNodeDetailsRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "getNodeDetailsbody object",
                        "in": "body",
                        "name": "getNodeDetails",
                        "schema": {
                            "$ref": "#/definitions/GetNodeDetailsRPCInputSchema"
                        }
                    }
                ]
            }
        },
        "/operations/getNodeEdgePointDetails/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetNodeEdgePointDetailsById",
                "description": "Create operation of resource: getNodeEdgePointDetails",
                "produces": [
                    "application/json"
                ],
                "summary": "Create getNodeEdgePointDetails by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetNodeEdgePointDetailsRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "getNodeEdgePointDetailsbody object",
                        "in": "body",
                        "name": "getNodeEdgePointDetails",
                        "schema": {
                            "$ref": "#/definitions/GetNodeEdgePointDetailsRPCInputSchema"
                        }
                    }
                ]
            }
        },
        "/operations/getLinkDetails/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetLinkDetailsById",
                "description": "Create operation of resource: getLinkDetails",
                "produces": [
                    "application/json"
                ],
                "summary": "Create getLinkDetails by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetLinkDetailsRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "description": "getLinkDetailsbody object",
                        "in": "body",
                        "name": "getLinkDetails",
                        "schema": {
                            "$ref": "#/definitions/GetLinkDetailsRPCInputSchema"
                        }
                    }
                ]
            }
        },
        "/operations/getTopologyList/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetTopologyListById",
                "description": "Create operation of resource: getTopologyList",
                "produces": [
                    "application/json"
                ],
                "summary": "Create getTopologyList by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetTopologyListRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "ValidationPac": {
            "properties": {
                "validationMechanism": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ValidationMechanism"
                    },
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "x-key": "validationMechanism layerProtocolAdjacencyValidated validationRobustness"
                }
            },
            "description": "Validation covers the various adjacenct discovery and reachability verification protocols. Also may cover Information source and degree of integrity."
        },
        "LatencyCharacteristic": {
            "properties": {
                "trafficPropertyName": {
                    "type": "string",
                    "description": "The identifier of the specific traffic property to which the queuing latency applies."
                },
                "jitterCharacteristic": {
                    "type": "string",
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                },
                "wanderCharacteristic": {
                    "type": "string",
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet)."
                },
                "trafficPropertyQueingLatency": {
                    "type": "string",
                    "description": "The specific queuing latency for the traffic property."
                },
                "fixedLatencyCharacteristic": {
                    "type": "string",
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity"
                }
            },
            "description": "Provides information on latency characteristic for a particular stated trafficProperty."
        },
        "CostCharacteristic": {
            "properties": {
                "costValue": {
                    "type": "string",
                    "description": "The specific cost."
                },
                "costAlgorithm": {
                    "type": "string",
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm."
                },
                "costName": {
                    "type": "string",
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName."
                }
            },
            "description": "The information for a particular cost characteristic."
        },
        "LayerProtocolTransitionPac": {
            "properties": {
                "transitionedLayerProtocolName": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role."
                    }
                },
                "_nodeEdgePoint": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:_ownedNodeEdgePoint/TapiTopology:uuid",
                        "description": "Lists the LTPs that define the layer protocol transition of the transitional link."
                    }
                }
            },
            "description": "Relevant for a Link that is formed by abstracting one or more LTPs (in a stack) to focus on the flow and deemphasize the protocol transformation. \nThis abstraction is relevant when considering multi-layer routing. \nThe layer protocols of the LTP and the order of their application to the signal is still relevant and need to be accounted for. This is derived from the LTP spec details.\nThis Pac provides the relevant abstractions of the LTPs and provides the necessary association to the LTPs involved.\nLinks that included details in this Pac are often referred to as Transitional Links."
        },
        "NodeEdgePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_mappedServiceEndPoint": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_serviceEndPoint/Tapi:uuid",
                                "description": "none"
                            }
                        },
                        "_layerProtocol": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "description": "none",
                            "x-key": "localId"
                        },
                        "_clientNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:_ownedNodeEdgePoint/TapiTopology:uuid",
                                "description": "none"
                            }
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "NetworkTopologyService": {
            "allOf": [
                {
                    "$ref": "#/definitions/ServiceSpec"
                },
                {
                    "properties": {
                        "_topology": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/Tapi:uuid",
                                "description": "none"
                            }
                        }
                    }
                }
            ],
            "description": "none"
        },
        "TransferTimingPac": {
            "properties": {
                "latencyCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LatencyCharacteristic"
                    },
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "x-key": "trafficPropertyName trafficPropertyQueingLatency"
                }
            },
            "description": "A TopologicalEntity will suffer effects from the underlying physical realization related to the timing of the information passed by the TopologicalEntity."
        },
        "TransferCostPac": {
            "properties": {
                "costCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostCharacteristic"
                    },
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "x-key": "costName costValue costAlgorithm"
                }
            },
            "description": "The cost characteristics of a TopologicalEntity not necessarily correlated to the cost of the underlying physical realization. \nThey may be quite specific to the individual TopologicalEntity e.g. opportunity cost. Relates to layer capacity\nThere may be many perspectives from which cost may be considered  for a particular TopologicalEntity and hence many specific costs and potentially cost algorithms. \nUsing an entity will incur a cost. "
        },
        "ValidationMechanism": {
            "properties": {
                "validationMechanism": {
                    "type": "string",
                    "description": "Name of mechanism used to validate adjacency"
                },
                "layerProtocolAdjacencyValidated": {
                    "type": "string",
                    "description": "State of validatiion"
                },
                "validationRobustness": {
                    "type": "string",
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)"
                }
            },
            "description": "Identifies the validation mechanism and describes the characteristics of that mechanism"
        },
        "Topology": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            }
                        },
                        "_node": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            },
                            "description": "none",
                            "x-key": "uuid"
                        }
                    }
                }
            ],
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). "
        },
        "Link": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_node": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:uuid",
                                "description": "none"
                            }
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac",
                            "description": "none"
                        },
                        "_validation": {
                            "$ref": "#/definitions/ValidationPac",
                            "description": "none"
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac",
                            "description": "none"
                        },
                        "_lpTransition": {
                            "$ref": "#/definitions/LayerProtocolTransitionPac",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            }
                        },
                        "_riskParameter": {
                            "$ref": "#/definitions/RiskParameterPac",
                            "description": "none"
                        },
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac",
                            "description": "none"
                        },
                        "_linkPort": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LinkPort"
                            },
                            "description": "none",
                            "x-key": "localId"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "UNIDIRECTIONAL",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases."
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac",
                            "description": "none"
                        }
                    }
                }
            ],
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). "
        },
        "RiskParameterPac": {
            "properties": {
                "riskCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RiskCharacteristic"
                    },
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "x-key": "riskCharacteristicName"
                }
            },
            "description": "The risk characteristics of a TopologicalEntity come directly from the underlying physical realization. \nThe risk characteristics propagate from the physical realization to the client and from the server layer to the client layer, this propagation may be modified by protection.\nA TopologicalEntity may suffer degradation or failure as a result of a problem in a part of the underlying realization.\nThe realization can be partitioned into segments which have some relevant common failure modes.\nThere is a risk of failure/degradation of each segment of the underlying realization.\nEach segment is a part of a larger physical/geographical unit that behaves as one with respect to failure (i.e. a failure will have a high probability of impacting the whole unit (e.g. all cables in the same duct).\nDisruptions to that larger physical/geographical unit will impact (cause failure/errors to) all TopologicalEntities that use any part of that larger physical/geographical entity.\nAny TopologicalEntity that uses any part of that larger physical/geographical unit will suffer impact and hence each TopologicalEntity shares risk.\nThe identifier of each physical/geographical unit that is involved in the realization of each segment of a Topological entity can be listed in the RiskParameter_Pac of that TopologicalEntity.\nA segment has one or more risk characteristic.\nShared risk between two TopologicalEntities compromises the integrity of any solution that use one of those TopologicalEntity as a backup for the other.\nWhere two TopologicalEntities have a common risk characteristic they have an elevated probability of failing simultaneously compared to two TopologicalEntities that do not share risk characteristics."
        },
        "Capacity": {
            "properties": {
                "committedInformationRate": {
                    "type": "string",
                    "description": "none"
                },
                "peakBurstSize": {
                    "type": "string",
                    "description": "none"
                },
                "peakInformationRate": {
                    "type": "string",
                    "description": "none"
                },
                "packetBwProfileType": {
                    "enum": [
                        "NOT_APPLICABLE",
                        "MEF_10_x",
                        "RFC_2697",
                        "RFC_2698",
                        "RFC_4115"
                    ],
                    "type": "string",
                    "description": "none"
                },
                "totalSize": {
                    "enum": [
                        "NOT_APPLICABLE",
                        "10MBPS",
                        "100MBPS",
                        "1GBPS",
                        "2_4GBPS",
                        "10GBPS",
                        "40GBPS",
                        "100GBPS",
                        "200GBPS",
                        "400GBPS"
                    ],
                    "type": "string",
                    "description": "Total capacity of the TopologicalEntity in MB/s"
                },
                "couplingFlag": {
                    "type": "boolean",
                    "description": "none"
                },
                "colorAware": {
                    "type": "boolean",
                    "description": "none"
                },
                "committedBurstSize": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Information on capacity of a particular TopologicalEntity."
        },
        "TransferIntegrityPac": {
            "properties": {
                "lossCharacteristic": {
                    "type": "string",
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips)."
                },
                "deliveryOrderCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order."
                },
                "errorCharacteristic": {
                    "type": "string",
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded."
                },
                "unavailableTimeCharacteristic": {
                    "type": "string",
                    "description": "Describes the duration for which there may be no valid signal propagated."
                },
                "repeatDeliveryCharacteristic": {
                    "type": "string",
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay."
                },
                "serverIntegrityProcessCharacteristic": {
                    "type": "string",
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity."
                }
            },
            "description": "Transfer intergrity characteristic covers expected/specified/acceptable characteristic of degradation of the transfered signal.\nIt includes all aspects of possible degradation of signal content as well as any damage of any form to the total TopologicalEntity and to the carried signals.\nNote that the statement is of total impact to the TopologicalEntity so any partial usage of the TopologicalEntity (e.g. a signal that does not use full capacity) will only suffer its portion of the impact."
        },
        "Node": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/AdminStatePac",
                            "description": "none"
                        },
                        "_ownedNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NodeEdgePoint"
                            },
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "_transferTiming": {
                            "$ref": "#/definitions/TransferTimingPac",
                            "description": "none"
                        },
                        "_transferCost": {
                            "$ref": "#/definitions/TransferCostPac",
                            "description": "none"
                        },
                        "_aggregatedNodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:_ownedNodeEdgePoint/TapiTopology:uuid",
                                "description": "none"
                            }
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            }
                        },
                        "_transferIntegrity": {
                            "$ref": "#/definitions/TransferIntegrityPac",
                            "description": "none"
                        },
                        "_transferCapacity": {
                            "$ref": "#/definitions/TransferCapacityPac",
                            "description": "none"
                        },
                        "_encapTopology": {
                            "type": "string",
                            "x-path": "/Tapi:Context/Tapi:_topology/Tapi:uuid",
                            "description": "none"
                        }
                    }
                }
            ],
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). "
        },
        "RiskCharacteristic": {
            "properties": {
                "riskCharacteristicName": {
                    "type": "string",
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated."
                },
                "riskIdentifierList": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity."
                    }
                }
            },
            "description": "The information for a particular risk characteristic where there is a list of risk identifiers related to that characteristic."
        },
        "LinkPort": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "INPUT",
                                "OUTPUT",
                                "UNIDENTIFIED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The orientation of defined flow at the LinkEnd."
                        },
                        "_nodeEdgePoint": {
                            "type": "string",
                            "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:_ownedNodeEdgePoint/TapiTopology:uuid",
                            "description": "none"
                        },
                        "role": {
                            "enum": [
                                "SYMMETRIC",
                                "ROOT",
                                "LEAF",
                                "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. "
                        }
                    }
                }
            ],
            "description": "The association of the Link to LTPs is made via LinkEnd.\nThe LinkEnd object class models the access to the Link function. \nThe traffic forwarding between the associated LinkEnds of the Link depends upon the type of Link.  \nIn cases where there is resilience the LinkEnd may convey the resilience role of the access to the Link. \nThe Link can be considered as a component and the LinkEnd as a Port on that component"
        },
        "TeLink": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "_nodeEdgePoint": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/Tapi:uuid/TapiTopology:_node/TapiTopology:_ownedNodeEdgePoint/TapiTopology:uuid",
                                "description": "none"
                            }
                        },
                        "_node": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/TapiTopology:_node/TapiTopology:uuid",
                                "description": "none"
                            }
                        }
                    }
                }
            ],
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). "
        },
        "TransferCapacityPac": {
            "properties": {
                "totalPotentialCapacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                },
                "availableCapacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "Capacity available to be assigned."
                },
                "capacityInteractionAlgorithm": {
                    "type": "string",
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)"
                },
                "capacityAssignedToUserView": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    },
                    "description": "Capacity already assigned",
                    "x-key": "totalSize"
                }
            },
            "description": "The TopologicalEntity derives capacity from the underlying realization. \nA TopologicalEntity may be an abstraction and virtualization of a subset of the underlying capability offered in a view or may be directly reflecting the underlying realization.\nA TopologicalEntity may be directly used in the view or may be assigned to another view for use.\nThe clients supported by a multi-layer TopologicalEntity may interact such that the resources used by one client may impact those available to another. This is derived from the LTP spec details.\nRepresents the capacity available to user (client) along with client interaction and usage. \nA TopologicalEntity may reflect one or more client protocols and one or more members for each profile."
        },
        "TimeRange": {
            "properties": {
                "startTime": {
                    "type": "string",
                    "description": "none"
                },
                "endTime": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "none"
        },
        "ServiceEndPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_state": {
                            "$ref": "#/definitions/LifecycleStatePac",
                            "description": "none"
                        },
                        "direction": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "_layerProtocol": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "description": "none",
                            "x-key": "localId"
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "LocalClass": {
            "properties": {
                "localId": {
                    "type": "string",
                    "description": "none"
                },
                "_extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtensionsSpec"
                    },
                    "description": "none",
                    "x-key": "extensionsSpecification"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "NameAndValue": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            },
            "description": "A scoped name-value pair"
        },
        "LifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes for an entity that has lifeccycle aspects only."
        },
        "ServiceSpec": {
            "$ref": "#/definitions/GlobalClass",
            "description": "none"
        },
        "AdminStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                },
                "administrativeState": {
                    "type": "string",
                    "description": "none"
                },
                "operationalState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects."
        },
        "LayerProtocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationDirection": {
                            "enum": [
                                "BIDIRECTIONAL",
                                "SINK",
                                "SOURCE",
                                "UNDEFINED_OR_UNKNOWN"
                            ],
                            "type": "string",
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ],
                            "type": "string",
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity."
                        },
                        "terminationState": {
                            "type": "string",
                            "description": "Indicates whether the layer is terminated and if so how."
                        }
                    }
                }
            ],
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. "
        },
        "ExtensionsSpec": {
            "properties": {
                "extensionsSpecification": {
                    "type": "string",
                    "description": "none"
                },
                "extensionsSpecTarget": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none"
                    }
                }
            },
            "description": "none"
        },
        "ResourceSpec": {
            "$ref": "#/definitions/GlobalClass",
            "description": "none"
        },
        "GlobalClass": {
            "properties": {
                "label": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "x-key": "valueName"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                },
                "_extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtensionsSpec"
                    },
                    "description": "none",
                    "x-key": "extensionsSpecification"
                },
                "name": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "x-key": "valueName"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "OperationalStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                },
                "operationalState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects."
        },
        "_topologySchema": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "_link": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "label": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                            "x-key": "valueName"
                        },
                        "_node": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            },
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "name": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                            "x-key": "valueName"
                        },
                        "uuid": {
                            "type": "string",
                            "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                        },
                        "layerProtocolName": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "OCH",
                                    "ODU",
                                    "ETH",
                                    "MPLS_TP"
                                ],
                                "type": "string",
                                "description": "none"
                            }
                        },
                        "_extensions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExtensionsSpec"
                            },
                            "description": "none",
                            "x-key": "extensionsSpecification"
                        }
                    }
                }
            ]
        },
        "_nwTopologyServiceSchema": {
            "allOf": [
                {
                    "$ref": "#/definitions/ServiceSpec"
                },
                {
                    "properties": {
                        "label": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                            "x-key": "valueName"
                        },
                        "uuid": {
                            "type": "string",
                            "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                        },
                        "_topology": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-path": "/Tapi:Context/Tapi:_topology/Tapi:uuid",
                                "description": "none"
                            }
                        },
                        "_extensions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExtensionsSpec"
                            },
                            "description": "none",
                            "x-key": "extensionsSpecification"
                        },
                        "name": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                            "x-key": "valueName"
                        }
                    }
                }
            ],
            "description": "none"
        },
        "GetTopologyDetailsRPCInputSchema": {
            "properties": {
                "topologyIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetTopologyDetailsRPCOutputSchema": {
            "properties": {
                "topology": {
                    "$ref": "#/definitions/Topology",
                    "description": "none"
                }
            }
        },
        "GetNodeDetailsRPCInputSchema": {
            "properties": {
                "nodeIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "topologyIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNodeDetailsRPCOutputSchema": {
            "properties": {
                "node": {
                    "$ref": "#/definitions/Node",
                    "description": "none"
                }
            }
        },
        "GetNodeEdgePointDetailsRPCInputSchema": {
            "properties": {
                "nodeIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "epIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "topologyIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNodeEdgePointDetailsRPCOutputSchema": {
            "properties": {
                "nodeEdgePoint": {
                    "$ref": "#/definitions/NodeEdgePoint",
                    "description": "none"
                }
            }
        },
        "GetLinkDetailsRPCInputSchema": {
            "properties": {
                "linkIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "topologyIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetLinkDetailsRPCOutputSchema": {
            "properties": {
                "link": {
                    "$ref": "#/definitions/Link",
                    "description": "none"
                }
            }
        },
        "GetTopologyListRPCOutputSchema": {
            "properties": {
                "topology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Topology"
                    },
                    "description": "none"
                }
            }
        }
    }
}