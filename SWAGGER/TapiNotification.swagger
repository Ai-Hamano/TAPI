{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "TapiNotification API",
        "description": "TapiNotification API generated from TapiNotification.yang"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/streams/Notification/": {
            "get": {
                "operationId": "retrieveNotificationById",
                "schemes": [
                    "ws"
                ],
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: Notification",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Notification",
                            "description": "none"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve Notification by ID"
            }
        },
        "/operations/getSupportedNotificationTypes/": {
            "post": {
                "operationId": "createGetSupportedNotificationTypesById",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: getSupportedNotificationTypes",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetSupportedNotificationTypesRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "summary": "Create getSupportedNotificationTypes by ID"
            }
        },
        "/operations/createNotificationSubscriptionService/": {
            "post": {
                "operationId": "createCreateNotificationSubscriptionServiceById",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CreateNotificationSubscriptionServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: createNotificationSubscriptionService",
                "parameters": [
                    {
                        "description": "createNotificationSubscriptionServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "in": "body",
                        "name": "createNotificationSubscriptionService"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create createNotificationSubscriptionService by ID"
            }
        },
        "/operations/updateNotificationSubscriptionService/": {
            "post": {
                "operationId": "createUpdateNotificationSubscriptionServiceById",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UpdateNotificationSubscriptionServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: updateNotificationSubscriptionService",
                "parameters": [
                    {
                        "description": "updateNotificationSubscriptionServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "in": "body",
                        "name": "updateNotificationSubscriptionService"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create updateNotificationSubscriptionService by ID"
            }
        },
        "/operations/deleteNotificationSubscriptionService/": {
            "post": {
                "operationId": "createDeleteNotificationSubscriptionServiceById",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DeleteNotificationSubscriptionServiceRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: deleteNotificationSubscriptionService",
                "parameters": [
                    {
                        "description": "deleteNotificationSubscriptionServicebody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "in": "body",
                        "name": "deleteNotificationSubscriptionService"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create deleteNotificationSubscriptionService by ID"
            }
        },
        "/operations/getNotificationSubscriptionServiceDetails/": {
            "post": {
                "operationId": "createGetNotificationSubscriptionServiceDetailsById",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceDetailsRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: getNotificationSubscriptionServiceDetails",
                "parameters": [
                    {
                        "description": "getNotificationSubscriptionServiceDetailsbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceDetailsRPCInputSchema"
                        },
                        "in": "body",
                        "name": "getNotificationSubscriptionServiceDetails"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create getNotificationSubscriptionServiceDetails by ID"
            }
        },
        "/operations/getNotificationSubscriptionServiceList/": {
            "post": {
                "operationId": "createGetNotificationSubscriptionServiceListById",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: getNotificationSubscriptionServiceList",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceListRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "summary": "Create getNotificationSubscriptionServiceList by ID"
            }
        },
        "/operations/getNotificationList/": {
            "post": {
                "operationId": "createGetNotificationListById",
                "consumes": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GetNotificationListRPCOutputSchema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: getNotificationList",
                "parameters": [
                    {
                        "description": "getNotificationListbody object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetNotificationListRPCInputSchema"
                        },
                        "in": "body",
                        "name": "getNotificationList"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create getNotificationList by ID"
            }
        }
    },
    "definitions": {
        "SubscriptionFilter": {
            "properties": {
                "requestedNotificationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none",
                        "enum": [
                            "OBJECT_CREATION",
                            "OBJECT_DELETION",
                            "ATTRIBUTE_VALUE_CHANGE",
                            "STATE_CHANGE"
                        ]
                    }
                },
                "requestedObjectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none",
                        "enum": [
                            "TOPOLOGY",
                            "NODE",
                            "LINK",
                            "CONNECTION",
                            "PATH",
                            "CONNECTIVITY_SERVICE",
                            "VIRTUAL_NETWORK_SERVICE",
                            "PATH_COMPUTATION_SERVICE",
                            "NODE_EDGE_POINT",
                            "SERVICE_END_POINT",
                            "CONNECTION_END_POINT"
                        ]
                    }
                },
                "requestedObjectIdentifier": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none"
                    }
                },
                "requestedLayerProtocols": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none",
                        "enum": [
                            "OCH",
                            "ODU",
                            "ETH",
                            "MPLS_TP"
                        ]
                    }
                }
            },
            "description": "none"
        },
        "NameAndValueChange": {
            "properties": {
                "newValue": {
                    "type": "string",
                    "description": "The value"
                },
                "oldValue": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            },
            "description": "A scoped name-value triple, including old value and new value"
        },
        "NotificationSubscriptionService": {
            "allOf": [
                {
                    "$ref": "#/definitions/Service"
                },
                {
                    "properties": {
                        "_subscriptionFilter": {
                            "$ref": "#/definitions/SubscriptionFilter",
                            "description": "none"
                        },
                        "_notification": {
                            "x-key": "uuid",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            },
                            "description": "none"
                        },
                        "supportedNotificationTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "none",
                                "enum": [
                                    "OBJECT_CREATION",
                                    "OBJECT_DELETION",
                                    "ATTRIBUTE_VALUE_CHANGE",
                                    "STATE_CHANGE"
                                ]
                            }
                        },
                        "supportedObjectTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "none",
                                "enum": [
                                    "TOPOLOGY",
                                    "NODE",
                                    "LINK",
                                    "CONNECTION",
                                    "PATH",
                                    "CONNECTIVITY_SERVICE",
                                    "VIRTUAL_NETWORK_SERVICE",
                                    "PATH_COMPUTATION_SERVICE",
                                    "NODE_EDGE_POINT",
                                    "SERVICE_END_POINT",
                                    "CONNECTION_END_POINT"
                                ]
                            }
                        },
                        "subscriptionState": {
                            "type": "string",
                            "description": "none",
                            "enum": [
                                "SUSPENDED",
                                "ACTIVE"
                            ]
                        }
                    }
                }
            ],
            "description": "none"
        },
        "Notification": {
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                },
                {
                    "properties": {
                        "targetObjectIdentifier": {
                            "type": "string",
                            "description": "none"
                        },
                        "targetObjectName": {
                            "x-key": "valueName",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "none"
                        },
                        "eventTimeStamp": {
                            "type": "string",
                            "description": "none"
                        },
                        "notificationType": {
                            "type": "string",
                            "description": "none",
                            "enum": [
                                "OBJECT_CREATION",
                                "OBJECT_DELETION",
                                "ATTRIBUTE_VALUE_CHANGE",
                                "STATE_CHANGE"
                            ]
                        },
                        "layerProtocolName": {
                            "type": "string",
                            "description": "none",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "additionalText": {
                            "type": "string",
                            "description": "none"
                        },
                        "additionalInfo": {
                            "x-key": "valueName",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "description": "none"
                        },
                        "targetObjectType": {
                            "type": "string",
                            "description": "none",
                            "enum": [
                                "TOPOLOGY",
                                "NODE",
                                "LINK",
                                "CONNECTION",
                                "PATH",
                                "CONNECTIVITY_SERVICE",
                                "VIRTUAL_NETWORK_SERVICE",
                                "PATH_COMPUTATION_SERVICE",
                                "NODE_EDGE_POINT",
                                "SERVICE_END_POINT",
                                "CONNECTION_END_POINT"
                            ]
                        },
                        "sourceIndicator": {
                            "type": "string",
                            "description": "none",
                            "enum": [
                                "RESOURCE_OPERATION",
                                "MANAGEMENT_OPERATION",
                                "UNKNOWN"
                            ]
                        },
                        "changedAttributes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameAndValueChange"
                            },
                            "description": "none"
                        }
                    }
                }
            ],
            "description": "none"
        },
        "Service": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "serviceSpecification": {
                            "type": "string",
                            "description": "none"
                        }
                    }
                }
            ],
            "description": "none"
        },
        "LocalClass": {
            "properties": {
                "_extensions": {
                    "x-key": "extensionsSpecification",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtensionsSpec"
                    },
                    "description": "none"
                },
                "localId": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "Resource": {
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "resourceSpecification": {
                            "type": "string",
                            "description": "none"
                        }
                    }
                }
            ],
            "description": "none"
        },
        "AdminStatePac": {
            "properties": {
                "operationalState": {
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                },
                "administrativeState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects."
        },
        "LifecycleStatePac": {
            "properties": {
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes for an entity that has lifeccycle aspects only."
        },
        "OperationalStatePac": {
            "properties": {
                "operationalState": {
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects."
        },
        "LayerProtocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "layerProtocolName": {
                            "type": "string",
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity.",
                            "enum": [
                                "OCH",
                                "ODU",
                                "ETH",
                                "MPLS_TP"
                            ]
                        },
                        "terminationState": {
                            "type": "string",
                            "description": "Indicates whether the layer is terminated and if so how."
                        },
                        "terminationDirection": {
                            "type": "string",
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                        }
                    }
                }
            ],
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. "
        },
        "TimeRange": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "none"
                },
                "startTime": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "none"
        },
        "NameAndValue": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            },
            "description": "A scoped name-value pair"
        },
        "ExtensionsSpec": {
            "properties": {
                "extensionsTarget": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none"
                    }
                },
                "extensionsSpecification": {
                    "type": "string",
                    "description": "none"
                }
            },
            "description": "none"
        },
        "GlobalClass": {
            "properties": {
                "_extensions": {
                    "x-key": "extensionsSpecification",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtensionsSpec"
                    },
                    "description": "none"
                },
                "label": {
                    "x-key": "valueName",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state."
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique\n(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)"
                },
                "name": {
                    "x-key": "valueName",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity."
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "GetSupportedNotificationTypesRPCOutputSchema": {
            "properties": {
                "supportedNotificationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none",
                        "enum": [
                            "OBJECT_CREATION",
                            "OBJECT_DELETION",
                            "ATTRIBUTE_VALUE_CHANGE",
                            "STATE_CHANGE"
                        ]
                    }
                },
                "supportedObjectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "none",
                        "enum": [
                            "TOPOLOGY",
                            "NODE",
                            "LINK",
                            "CONNECTION",
                            "PATH",
                            "CONNECTIVITY_SERVICE",
                            "VIRTUAL_NETWORK_SERVICE",
                            "PATH_COMPUTATION_SERVICE",
                            "NODE_EDGE_POINT",
                            "SERVICE_END_POINT",
                            "CONNECTION_END_POINT"
                        ]
                    }
                }
            }
        },
        "CreateNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionFilter": {
                    "$ref": "#/definitions/SubscriptionFilter",
                    "description": "none"
                },
                "subscriptionState": {
                    "type": "string",
                    "description": "none",
                    "enum": [
                        "SUSPENDED",
                        "ACTIVE"
                    ]
                }
            }
        },
        "CreateNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "$ref": "#/definitions/NotificationSubscriptionService",
                    "description": "none"
                }
            }
        },
        "UpdateNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionFilter": {
                    "$ref": "#/definitions/SubscriptionFilter",
                    "description": "none"
                },
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "subscriptionState": {
                    "type": "string",
                    "description": "none",
                    "enum": [
                        "SUSPENDED",
                        "ACTIVE"
                    ]
                }
            }
        },
        "UpdateNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "$ref": "#/definitions/NotificationSubscriptionService",
                    "description": "none"
                }
            }
        },
        "DeleteNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "DeleteNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "$ref": "#/definitions/NotificationSubscriptionService",
                    "description": "none"
                }
            }
        },
        "GetNotificationSubscriptionServiceDetailsRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNotificationSubscriptionServiceDetailsRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "$ref": "#/definitions/NotificationSubscriptionService",
                    "description": "none"
                }
            }
        },
        "GetNotificationSubscriptionServiceListRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotificationSubscriptionService"
                    },
                    "description": "none"
                }
            }
        },
        "GetNotificationListRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "timePeriod": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNotificationListRPCOutputSchema": {
            "properties": {
                "notification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    },
                    "description": "none"
                }
            }
        }
    }
}