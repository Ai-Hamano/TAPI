{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "tapi-notification API generated from tapi-notification.yang",
        "title": "tapi-notification API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/streams/notification/": {
            "get": {
                "schemes": [
                    "ws"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "description": "none",
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: notification",
                "summary": "Retrieve notification by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveNotificationById"
            }
        },
        "/operations/get-supported-notification-types/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSupportedNotificationTypesRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: get-supported-notification-types",
                "produces": [
                    "application/json"
                ],
                "summary": "Create get-supported-notification-types by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetSupportedNotificationTypesById"
            }
        },
        "/operations/create-notification-subscription-service/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreateNotificationSubscriptionServiceRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: create-notification-subscription-service",
                "parameters": [
                    {
                        "required": true,
                        "description": "create-notification-subscription-servicebody object",
                        "schema": {
                            "$ref": "#/definitions/CreateNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "name": "create-notification-subscription-service",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create create-notification-subscription-service by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createCreateNotificationSubscriptionServiceById"
            }
        },
        "/operations/update-notification-subscription-service/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateNotificationSubscriptionServiceRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: update-notification-subscription-service",
                "parameters": [
                    {
                        "required": true,
                        "description": "update-notification-subscription-servicebody object",
                        "schema": {
                            "$ref": "#/definitions/UpdateNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "name": "update-notification-subscription-service",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create update-notification-subscription-service by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createUpdateNotificationSubscriptionServiceById"
            }
        },
        "/operations/delete-notification-subscription-service/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteNotificationSubscriptionServiceRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: delete-notification-subscription-service",
                "parameters": [
                    {
                        "required": true,
                        "description": "delete-notification-subscription-servicebody object",
                        "schema": {
                            "$ref": "#/definitions/DeleteNotificationSubscriptionServiceRPCInputSchema"
                        },
                        "name": "delete-notification-subscription-service",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create delete-notification-subscription-service by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createDeleteNotificationSubscriptionServiceById"
            }
        },
        "/operations/get-notification-subscription-service-details/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceDetailsRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: get-notification-subscription-service-details",
                "parameters": [
                    {
                        "required": true,
                        "description": "get-notification-subscription-service-detailsbody object",
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceDetailsRPCInputSchema"
                        },
                        "name": "get-notification-subscription-service-details",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create get-notification-subscription-service-details by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetNotificationSubscriptionServiceDetailsById"
            }
        },
        "/operations/get-notification-subscription-service-list/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetNotificationSubscriptionServiceListRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: get-notification-subscription-service-list",
                "produces": [
                    "application/json"
                ],
                "summary": "Create get-notification-subscription-service-list by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetNotificationSubscriptionServiceListById"
            }
        },
        "/operations/get-notification-list/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetNotificationListRPCOutputSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Create operation of resource: get-notification-list",
                "parameters": [
                    {
                        "required": true,
                        "description": "get-notification-listbody object",
                        "schema": {
                            "$ref": "#/definitions/GetNotificationListRPCInputSchema"
                        },
                        "name": "get-notification-list",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create get-notification-list by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "createGetNotificationListById"
            }
        }
    },
    "definitions": {
        "NotificationSubscriptionService": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/ServiceSpec"
                },
                {
                    "properties": {
                        "notification": {
                            "items": {
                                "$ref": "#/definitions/Notification"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        },
                        "subscriptionState": {
                            "enum": [
                                "suspended",
                                "active"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "notificationChannel": {
                            "description": "none",
                            "$ref": "#/definitions/NotificationChannel"
                        },
                        "supportedObjectTypes": {
                            "items": {
                                "enum": [
                                    "topology",
                                    "node",
                                    "link",
                                    "connection",
                                    "path",
                                    "connectivity-service",
                                    "virtual-network-service",
                                    "path-computation-service",
                                    "node-edge-point",
                                    "service-end-point",
                                    "connection-end-point"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "subscriptionFilter": {
                            "description": "none",
                            "$ref": "#/definitions/SubscriptionFilter"
                        },
                        "supportedNotificationTypes": {
                            "items": {
                                "enum": [
                                    "object-creation",
                                    "object-deletion",
                                    "attribute-value-change"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "Notification": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "targetObjectIdentifier": {
                            "type": "string",
                            "description": "none"
                        },
                        "layerProtocolName": {
                            "enum": [
                                "och",
                                "odu",
                                "eth",
                                "mpls-tp"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "changedAttributes": {
                            "items": {
                                "$ref": "#/definitions/NameAndValueChange"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "valueName"
                        },
                        "sequenceNumber": {
                            "type": "string",
                            "description": "A monotonous increasing sequence number associated with the notification.\nThe exact semantics of how this sequence number is assigned (per channel or subscription or source or system) is left undefined."
                        },
                        "additionalInfo": {
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "valueName"
                        },
                        "additionalText": {
                            "type": "string",
                            "description": "none"
                        },
                        "notificationType": {
                            "enum": [
                                "object-creation",
                                "object-deletion",
                                "attribute-value-change"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "targetObjectType": {
                            "enum": [
                                "topology",
                                "node",
                                "link",
                                "connection",
                                "path",
                                "connectivity-service",
                                "virtual-network-service",
                                "path-computation-service",
                                "node-edge-point",
                                "service-end-point",
                                "connection-end-point"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "sourceIndicator": {
                            "enum": [
                                "resource-operation",
                                "management-operation",
                                "unknown"
                            ],
                            "type": "string",
                            "description": "none"
                        },
                        "eventTimeStamp": {
                            "type": "string",
                            "description": "none"
                        },
                        "targetObjectName": {
                            "items": {
                                "$ref": "#/definitions/NameAndValue"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "valueName"
                        }
                    }
                }
            ]
        },
        "SubscriptionFilter": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "requestedObjectTypes": {
                            "items": {
                                "enum": [
                                    "topology",
                                    "node",
                                    "link",
                                    "connection",
                                    "path",
                                    "connectivity-service",
                                    "virtual-network-service",
                                    "path-computation-service",
                                    "node-edge-point",
                                    "service-end-point",
                                    "connection-end-point"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "requestedLayerProtocols": {
                            "items": {
                                "enum": [
                                    "och",
                                    "odu",
                                    "eth",
                                    "mpls-tp"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "requestedObjectIdentifier": {
                            "items": {
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "requestedNotificationTypes": {
                            "items": {
                                "enum": [
                                    "object-creation",
                                    "object-deletion",
                                    "attribute-value-change"
                                ],
                                "type": "string",
                                "description": "none"
                            },
                            "type": "array"
                        },
                        "includeContent": {
                            "type": "boolean",
                            "description": "Indicates whether the published Notification includes content or just the Notification Id (which enables retrieval of the notification at the later stage)"
                        }
                    }
                }
            ]
        },
        "NotificationContext": {
            "description": "none",
            "properties": {
                "notification": {
                    "items": {
                        "$ref": "#/definitions/Notification"
                    },
                    "type": "array",
                    "description": "none",
                    "x-key": "uuid"
                },
                "notifSubscription": {
                    "items": {
                        "$ref": "#/definitions/NotificationSubscriptionService"
                    },
                    "type": "array",
                    "description": "none",
                    "x-key": "uuid"
                }
            }
        },
        "NameAndValueChange": {
            "description": "A scoped name-value triple, including old value and new value",
            "properties": {
                "newValue": {
                    "type": "string",
                    "description": "The value"
                },
                "oldValue": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            }
        },
        "NotificationChannel": {
            "description": "none",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "streamAddress": {
                            "type": "string",
                            "description": "The address/location/URI of the channel/stream to which the subscribed notifications are published.\nThis specifics of this is typically dependent on the implementation protocol & mechanism and hence is typed as a string."
                        },
                        "nextSequenceNo": {
                            "type": "string",
                            "description": "The sequence number of the next notification that will be published on the channel"
                        }
                    }
                }
            ]
        },
        "Context": {
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements).",
            "allOf": [
                {
                    "$ref": "#/definitions/GlobalClass"
                },
                {
                    "properties": {
                        "serviceEndPoint": {
                            "items": {
                                "$ref": "#/definitions/ServiceEndPoint"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "OperationalStatePac": {
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects.",
            "properties": {
                "operationalState": {
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "TimeRange": {
            "description": "none",
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "none"
                },
                "startTime": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "LayerProtocol": {
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. ",
            "allOf": [
                {
                    "$ref": "#/definitions/LocalClass"
                },
                {
                    "properties": {
                        "terminationState": {
                            "type": "string",
                            "description": "Indicates whether the layer is terminated and if so how."
                        },
                        "layerProtocolName": {
                            "enum": [
                                "och",
                                "odu",
                                "eth",
                                "mpls-tp"
                            ],
                            "type": "string",
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity."
                        },
                        "terminationDirection": {
                            "type": "string",
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                        }
                    }
                }
            ]
        },
        "NameAndValue": {
            "description": "A scoped name-value pair",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The value"
                },
                "valueName": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                }
            }
        },
        "LocalClass": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "localId": {
                    "type": "string",
                    "description": "none"
                },
                "name": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "x-key": "valueName"
                }
            }
        },
        "ServiceEndPoint": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceSpec"
                },
                {
                    "properties": {
                        "layerProtocol": {
                            "items": {
                                "$ref": "#/definitions/LayerProtocol"
                            },
                            "type": "array",
                            "description": "none",
                            "x-key": "localId"
                        },
                        "direction": {
                            "type": "string",
                            "description": "none"
                        },
                        "state": {
                            "description": "none",
                            "$ref": "#/definitions/LifecycleStatePac"
                        }
                    }
                }
            ]
        },
        "LifecycleStatePac": {
            "description": "Provides state attributes for an entity that has lifeccycle aspects only.",
            "properties": {
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "AdminStatePac": {
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects.",
            "properties": {
                "administrativeState": {
                    "type": "string",
                    "description": "none"
                },
                "operationalState": {
                    "type": "string",
                    "description": "none"
                },
                "lifecycleState": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "ServiceSpec": {
            "description": "none",
            "$ref": "#/definitions/GlobalClass"
        },
        "GlobalClass": {
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. ",
            "properties": {
                "label": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "x-key": "valueName"
                },
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
                },
                "name": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "x-key": "valueName"
                }
            }
        },
        "ResourceSpec": {
            "description": "none",
            "$ref": "#/definitions/GlobalClass"
        },
        "GetSupportedNotificationTypesRPCOutputSchema": {
            "properties": {
                "supportedObjectTypes": {
                    "items": {
                        "enum": [
                            "topology",
                            "node",
                            "link",
                            "connection",
                            "path",
                            "connectivity-service",
                            "virtual-network-service",
                            "path-computation-service",
                            "node-edge-point",
                            "service-end-point",
                            "connection-end-point"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                },
                "supportedNotificationTypes": {
                    "items": {
                        "enum": [
                            "object-creation",
                            "object-deletion",
                            "attribute-value-change"
                        ],
                        "type": "string",
                        "description": "none"
                    },
                    "type": "array"
                }
            }
        },
        "CreateNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionFilter": {
                    "description": "none",
                    "$ref": "#/definitions/SubscriptionFilter"
                },
                "subscriptionState": {
                    "enum": [
                        "suspended",
                        "active"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "CreateNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "description": "none",
                    "$ref": "#/definitions/NotificationSubscriptionService"
                }
            }
        },
        "UpdateNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "subscriptionFilter": {
                    "description": "none",
                    "$ref": "#/definitions/SubscriptionFilter"
                },
                "subscriptionState": {
                    "enum": [
                        "suspended",
                        "active"
                    ],
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "UpdateNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "description": "none",
                    "$ref": "#/definitions/NotificationSubscriptionService"
                }
            }
        },
        "DeleteNotificationSubscriptionServiceRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "DeleteNotificationSubscriptionServiceRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "description": "none",
                    "$ref": "#/definitions/NotificationSubscriptionService"
                }
            }
        },
        "GetNotificationSubscriptionServiceDetailsRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNotificationSubscriptionServiceDetailsRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "description": "none",
                    "$ref": "#/definitions/NotificationSubscriptionService"
                }
            }
        },
        "GetNotificationSubscriptionServiceListRPCOutputSchema": {
            "properties": {
                "subscriptionService": {
                    "items": {
                        "$ref": "#/definitions/NotificationSubscriptionService"
                    },
                    "type": "array",
                    "description": "none"
                }
            }
        },
        "GetNotificationListRPCInputSchema": {
            "properties": {
                "subscriptionIdOrName": {
                    "type": "string",
                    "description": "none"
                },
                "timePeriod": {
                    "type": "string",
                    "description": "none"
                }
            }
        },
        "GetNotificationListRPCOutputSchema": {
            "properties": {
                "notification": {
                    "items": {
                        "$ref": "#/definitions/Notification"
                    },
                    "type": "array",
                    "description": "none"
                }
            }
        }
    }
}